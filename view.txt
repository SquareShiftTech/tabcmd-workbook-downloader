view: fct_metrichomepageall_fac_day1 {
  # Generated from Tableau view: FCT_METRICHOMEPAGEALL_FAC_DAY1
  sql_table_name: `tableau-to-looker-migration.Tableau_To_BigQuery.FCT_METRICHOMEPAGEALL_FAC_DAY` ;;


  # Parameters (from Tableau parameters)
  parameter: mtd_or_ytd_copy_1990309625422229507 {
    label: "mtd_or_ytd2"
    type: string
    default_value: "M"
    allowed_value: {
      value: "M"
    }
    allowed_value: {
      value: "Y"
    }
  }
  parameter: month_selector_copy_1990309625421819904 {
    label: "month_selector2"
    type: date_time
    default_value: "2022-12-01 00:00:00"
  }
  parameter: parameter_1_1 {
    label: "p_grandtotal"
    type: string
    default_value: "Variance Percentage"
    allowed_value: {
      value: "Variance"
    }
    allowed_value: {
      value: "Variance Percentage"
    }
  }
  parameter: parameter_10 {
    label: "show_hide_title"
    type: string
    default_value: "show"
    allowed_value: {
      value: "show"
    }
    allowed_value: {
      value: "hide"
    }
  }
  parameter: parameter_1 {
    label: "month_selector"
    type: date_time
    default_value: "2023-12-01 00:00:00"
  }
  parameter: parameter_2 {
    label: "p3_issue_alert"
    type: yesno
    default_value: "false"
    allowed_value: {
      value: "true"
    }
    allowed_value: {
      value: "false"
    }
  }
  parameter: parameter_3 {
    label: "mtd_or_ytd"
    type: string
    default_value: "M"
    allowed_value: {
      value: "M"
    }
    allowed_value: {
      value: "Y"
    }
  }
  parameter: parameter_4 {
    label: "select_metric"
    type: string
    default_value: "NP ApptLength Adult"
    allowed_value: {
      value: "NP Per Day"
    }
    allowed_value: {
      value: "EP Per Day"
    }
    allowed_value: {
      value: "NP Days to 1st Appointment "
    }
    allowed_value: {
      value: "NP Show Rate"
    }
    allowed_value: {
      value: "EP Show Rate"
    }
    allowed_value: {
      value: "NP Yes Today! "
    }
    allowed_value: {
      value: "EP Yes Today! "
    }
    allowed_value: {
      value: "Percent Credit Applications With Tx Over $500"
    }
    allowed_value: {
      value: "New Patient Otc"
    }
    allowed_value: {
      value: "NP Tx Presented Per NP"
    }
    allowed_value: {
      value: "NP Tx Accepted Per NP"
    }
    allowed_value: {
      value: "EP Tx Presented Per EP"
    }
    allowed_value: {
      value: "EP Tx Accepted Per EP"
    }
    allowed_value: {
      value: "Oral Health Scan\%"
    }
    allowed_value: {
      value: "TAPA/PAR Sales"
    }
    allowed_value: {
      value: "Doctor FTE Per Office"
    }
    allowed_value: {
      value: "MCD Production Per Day"
    }
    allowed_value: {
      value: "Associate Production Per Day"
    }
    allowed_value: {
      value: "Hygiene Revenue per Day"
    }
    allowed_value: {
      value: "Ortho Starts Per Office Per Month"
    }
    allowed_value: {
      value: "Percent Of Schedule"
    }
    allowed_value: {
      value: "NP Same Day Starts\%"
    }
    allowed_value: {
      value: "\% of patient leaving with appt"
    }
    allowed_value: {
      value: "New Patient Tx Plan Completion Rate"
    }
    allowed_value: {
      value: "Dentures"
    }
    allowed_value: {
      value: "Dentistry"
    }
    allowed_value: {
      value: "Hygiene"
    }
    allowed_value: {
      value: "Specialty"
    }
    allowed_value: {
      value: "Orthodontics"
    }
    allowed_value: {
      value: "Crown & Bridge"
    }
    allowed_value: {
      value: "Implants"
    }
    allowed_value: {
      value: "Production"
    }
    allowed_value: {
      value: "Net Promoter Score ALL"
    }
    allowed_value: {
      value: "Net Promoter Score"
    }
    allowed_value: {
      value: "Patient Satisfaction"
    }
    allowed_value: {
      value: "Online Review Ratings"
    }
    allowed_value: {
      value: "Added to schedule"
    }
    allowed_value: {
      value: "Estimated Production Current Month"
    }
    allowed_value: {
      value: "Estimated Production Budget Variance Current Month"
    }
    allowed_value: {
      value: "Total Deposit"
    }
    allowed_value: {
      value: "Percent of Balance Collected"
    }
    allowed_value: {
      value: "NP Appt Per Day"
    }
    allowed_value: {
      value: "NP Comp to Problem Focused Exams"
    }
    allowed_value: {
      value: "NP ApptLength Adult"
    }
    allowed_value: {
      value: "PC Block\%"
    }
    allowed_value: {
      value: "NP Block\%"
    }
    allowed_value: {
      value: "Inefficient\%"
    }
  }
  parameter: parameter_5 {
    label: "office_group"
    type: number
    default_value: "0."
    allowed_value: {
      value: "0."
    }
    allowed_value: {
      value: "1."
    }
  }
  parameter: parameter_6 {
    label: "heat_map_selection"
    type: string
    default_value: "Facility"
    allowed_value: {
      value: "Division VP"
    }
    allowed_value: {
      value: "Territory"
    }
    allowed_value: {
      value: "Region Description"
    }
    allowed_value: {
      value: "Pop Owner"
    }
    allowed_value: {
      value: "DMA"
    }
    allowed_value: {
      value: "Facility"
    }
  }
  parameter: parameter_7 {
    label: "view"
    type: string
    default_value: "Switch to All Aspen View"
    allowed_value: {
      value: "Switch to All Aspen View"
    }
    allowed_value: {
      value: "Switch to My Office(s) View"
    }
  }
  parameter: parameter_8 {
    label: "turn_off_run_rate"
    type: yesno
    default_value: "true"
    allowed_value: {
      value: "true"
    }
    allowed_value: {
      value: "false"
    }
  }
  parameter: parameter_9 {
    label: "np_pop_up"
    type: string
    default_value: "Hide"
    allowed_value: {
      value: "Show"
    }
    allowed_value: {
      value: "Hide"
    }
  }
  parameter: select_metric_copy_1176846891754504196 {
    label: "select_metric_rank"
    type: string
    default_value: "Avg. NP ApptLength Adult Rank"
    allowed_value: {
      value: "Avg. NP Per Day Rank"
    }
    allowed_value: {
      value: "Avg. EP Per Day Rank"
    }
    allowed_value: {
      value: "Avg. NP Days to 1st Appointment"
    }
    allowed_value: {
      value: "Avg. NP Show Rate Rank"
    }
    allowed_value: {
      value: "Avg. EP Show Rate Rank"
    }
    allowed_value: {
      value: "Avg. NP Yes Today! Rank"
    }
    allowed_value: {
      value: "Avg. EP Yes Today! Rank"
    }
    allowed_value: {
      value: "Avg. Percent Credit Applications With Tx Over $500 Rank"
    }
    allowed_value: {
      value: "Avg. New Patient Otc Rank"
    }
    allowed_value: {
      value: "Avg. NP Tx Presented Per NP Rank"
    }
    allowed_value: {
      value: "Avg. NP Tx Accepted Per NP Rank"
    }
    allowed_value: {
      value: "Avg. EP Tx Presented Per EP Rank"
    }
    allowed_value: {
      value: "Avg. EP Tx Accepted Per EP Rank"
    }
    allowed_value: {
      value: "Avg. Oral Health Scan\% Rank"
    }
    allowed_value: {
      value: "Avg. TAPA/PAR Sales Rank"
    }
    allowed_value: {
      value: "Avg. Doctor FTE Per Office Rank"
    }
    allowed_value: {
      value: "Avg. MCD Production Per Day Rank"
    }
    allowed_value: {
      value: "Avg. Associate Production Per Day Rank"
    }
    allowed_value: {
      value: "Avg. Hygiene Revenue per Day Rank"
    }
    allowed_value: {
      value: "Avg. Ortho Starts Per Office Per Month Rank"
    }
    allowed_value: {
      value: "Avg. Percent Of Schedule Rank"
    }
    allowed_value: {
      value: "Avg. NP Same Day Starts\% Rank"
    }
    allowed_value: {
      value: "Avg. \% of patient leaving with appt Rank"
    }
    allowed_value: {
      value: "Avg. New Patient Tx Plan Completion Rate Rank"
    }
    allowed_value: {
      value: "Avg. Dentures Rank"
    }
    allowed_value: {
      value: "Avg. Dentistry Rank"
    }
    allowed_value: {
      value: "Avg. Hygiene Rank"
    }
    allowed_value: {
      value: "Avg. Specialty Rank"
    }
    allowed_value: {
      value: "Avg. Orthodontics Rank"
    }
    allowed_value: {
      value: "Avg. Crown & Bridge Rank"
    }
    allowed_value: {
      value: "Avg. Implants Rank"
    }
    allowed_value: {
      value: "Avg. Production Rank"
    }
    allowed_value: {
      value: "Avg. Net Promoter Score ALL Rank"
    }
    allowed_value: {
      value: "Avg. Net Promoter Score Rank"
    }
    allowed_value: {
      value: "Avg. Patient Satisfaction Rank"
    }
    allowed_value: {
      value: "Avg. Online Review Ratings Rank"
    }
    allowed_value: {
      value: "Avg. added to schedule Rank"
    }
    allowed_value: {
      value: "Avg. Estimated Production Current Month Rank"
    }
    allowed_value: {
      value: "Avg. Estimated Production Budget Variance Current Month Rank"
    }
    allowed_value: {
      value: "Avg. Total Deposit Rank"
    }
    allowed_value: {
      value: "Avg. Percent of Balance Collected Rank"
    }
    allowed_value: {
      value: "Avg. NP Appt Per Day Rank"
    }
    allowed_value: {
      value: "Avg. NP Comp to Problem Focused Exams Rank"
    }
    allowed_value: {
      value: "Avg. NP ApptLength Adult Rank"
    }
    allowed_value: {
      value: "Avg. PC Block\% Rank"
    }
    allowed_value: {
      value: "Avg. NP Block\% Rank"
    }
    allowed_value: {
      value: "Avg. Inefficient\% Rank"
    }
  }
  parameter: select_metric_copy_188025298506096641 {
    label: "select_metric_comp"
    type: string
    default_value: "EP Show Rate"
    allowed_value: {
      value: "NP Per Day"
    }
    allowed_value: {
      value: "Existing Patients Per Day"
    }
    allowed_value: {
      value: "Avg Days Until First Visit"
    }
    allowed_value: {
      value: "NP Show Rate"
    }
    allowed_value: {
      value: "EP Show Rate"
    }
    allowed_value: {
      value: "NP Yes Today!"
    }
    allowed_value: {
      value: "EP Yes Today!"
    }
    allowed_value: {
      value: "Percent Credit Applications With Tx Over $500"
    }
    allowed_value: {
      value: "New Patient Otc"
    }
    allowed_value: {
      value: "NP Tx Presented Per NP"
    }
    allowed_value: {
      value: "NP Tx Accepted Per NP"
    }
    allowed_value: {
      value: "EP Tx Presented Per EP"
    }
    allowed_value: {
      value: "EP Tx Accepted Per EP"
    }
    allowed_value: {
      value: "Oral Health Scan\%"
    }
    allowed_value: {
      value: "TAPA/PAR Sales"
    }
    allowed_value: {
      value: "Doctor FTE Per Office"
    }
    allowed_value: {
      value: "MCD Production Per Day"
    }
    allowed_value: {
      value: "Associate Production Per Day"
    }
    allowed_value: {
      value: "Hygiene Revenue per Day"
    }
    allowed_value: {
      value: "Ortho Starts Per Office Per Month"
    }
    allowed_value: {
      value: "Percent Of Schedule"
    }
    allowed_value: {
      value: "NP Same Day Starts\%"
    }
    allowed_value: {
      value: "\% of patient leaving with appt"
    }
    allowed_value: {
      value: "New Patient Tx Plan Completion Rate"
    }
    allowed_value: {
      value: "Dentures"
    }
    allowed_value: {
      value: "Dentistry"
    }
    allowed_value: {
      value: "Hygiene"
    }
    allowed_value: {
      value: "Specialty"
    }
    allowed_value: {
      value: "Orthodontics"
    }
    allowed_value: {
      value: "Crown & Bridge"
    }
    allowed_value: {
      value: "Implants"
    }
    allowed_value: {
      value: "Production"
    }
    allowed_value: {
      value: "Net Promoter Score ALL"
    }
    allowed_value: {
      value: "Net Promoter Score"
    }
    allowed_value: {
      value: "Patient Satisfaction"
    }
    allowed_value: {
      value: "Online Review Ratings"
    }
    allowed_value: {
      value: "Added to schedule"
    }
    allowed_value: {
      value: "Estimated Production Current Month"
    }
    allowed_value: {
      value: "Estimated Production Budget Variance Current Month"
    }
    allowed_value: {
      value: "Total Deposit"
    }
    allowed_value: {
      value: "Percent of Balance Collected"
    }
  }

  # Date dimension groups

  dimension_group: firstofmonth {
    type: time
    timeframes: [raw, time, date, week, month, quarter, year]
    sql: TIMESTAMP(${TABLE}.FirstOfMonth) ;;
    description: "First Of Month"
    label: "First Of Month"
  }

  dimension: firstofmonth_hour_formatted {
    type: string
    sql: FORMAT_TIMESTAMP('%l %p',
      TIMESTAMP_TRUNC(CAST(${firstofmonth_raw} AS TIMESTAMP), HOUR)) ;;
    label: "Hour"
    order_by_field: firstofmonth_raw
  }



  dimension_group: lastday {
    type: time
    timeframes: [raw, time, date, week, month, quarter, year]
    sql: TIMESTAMP(${TABLE}.LastDay) ;;
    description: "Original name: [LastDay]"
    label: "LastDay"
  }

  dimension: lastday_hour_formatted {
    type: string
    sql: FORMAT_TIMESTAMP('%l %p',
      TIMESTAMP_TRUNC(CAST(${lastday_raw} AS TIMESTAMP), HOUR)) ;;
    label: "Hour"
    order_by_field: lastday_raw
  }



  dimension_group: firstofmonth_lastbd {
    type: time
    timeframes: [raw, time, date, week, month, quarter, year]
    sql: TIMESTAMP(${TABLE}.FirstOfMonth_LastBD) ;;
    description: "Original name: [FirstOfMonth_LastBD]"
    label: "FirstOfMonth LastBD"
  }

  dimension: firstofmonth_lastbd_hour_formatted {
    type: string
    sql: FORMAT_TIMESTAMP('%l %p',
      TIMESTAMP_TRUNC(CAST(${firstofmonth_lastbd_raw} AS TIMESTAMP), HOUR)) ;;
    label: "Hour"
    order_by_field: firstofmonth_lastbd_raw
  }



  dimension_group: dateloaded {
    type: time
    timeframes: [raw, time, date, week, month, quarter, year]
    sql: TIMESTAMP(${TABLE}.DateLoaded) ;;
    description: "Original name: [DateLoaded]"
    label: "DateLoaded"
  }

  dimension: dateloaded_hour_formatted {
    type: string
    sql: FORMAT_TIMESTAMP('%l %p',
      TIMESTAMP_TRUNC(CAST(${dateloaded_raw} AS TIMESTAMP), HOUR)) ;;
    label: "Hour"
    order_by_field: dateloaded_raw
  }



  # Dimensions

  dimension: facilitycode {
    description: "Facility Code"
    type: string
    sql: ${TABLE}.FacilityCode ;;
    label: "Facility Code"
  }

  dimension: mtdorytdcode {
    description: "Mtd Or Ytd Code"
    type: string
    sql: ${TABLE}.MtdOrYtdCode ;;
    label: "Mtd Or Ytd Code"
  }

  dimension: npperday_num {
    description: "NPPerDay Num"
    type: number
    sql: ${TABLE}.NPPerDay_Num ;;
    label: "NPPerDay Num"
  }

  dimension: npperday_den_raw {
    description: "Raw field for NPPerDay_Den"
    type: string
    sql: ${TABLE}.NPPerDay_Den ;;
    hidden: yes
    label: "Npperday Den (Raw)"
  }

  dimension: existingpatientsperday_num {
    description: "ExistingPatientsPerDay Num"
    type: number
    sql: ${TABLE}.ExistingPatientsPerDay_Num ;;
    label: "ExistingPatientsPerDay Num"
  }

  dimension: existingpatientsperday_den_raw {
    description: "Raw field for ExistingPatientsPerDay_Den"
    type: string
    sql: ${TABLE}.ExistingPatientsPerDay_Den ;;
    hidden: yes
    label: "Existingpatientsperday Den (Raw)"
  }

  dimension: avgdaysuntilfirstvisit_num {
    description: "AvgDaysUntilFirstVisit Num"
    type: number

    sql: ${TABLE}.AvgDaysUntilFirstVisit_Num ;;
    label: "AvgDaysUntilFirstVisit Num"
  }

  dimension: avgdaysuntilfirstvisit_den_raw {
    description: "Raw field for AvgDaysUntilFirstVisit_Den"
    type: string
    sql: ${TABLE}.AvgDaysUntilFirstVisit_Den ;;
    hidden: yes
    label: "Avgdaysuntilfirstvisit Den (Raw)"
  }

  dimension: npshowrate_num {
    description: "NPShowRate Num"
    type: number
    sql: ${TABLE}.NPShowRate_Num ;;
    label: "NPShowRate Num"
  }

  dimension: npshowrate_den_raw {
    description: "Raw field for NPShowRate_Den"
    type: string
    sql: ${TABLE}.NPShowRate_Den ;;
    hidden: yes
    label: "Npshowrate Den (Raw)"
  }

  dimension: epshowrate_num {
    description: "EPShowRate Num"
    type: number
    sql: ${TABLE}.EPShowRate_Num ;;
    label: "EPShowRate Num"
  }

  dimension: epshowrate_den_raw {
    description: "Raw field for EPShowRate_Den"
    type: string
    sql: ${TABLE}.EPShowRate_Den ;;
    hidden: yes
    label: "Epshowrate Den (Raw)"
  }

  dimension: npyestoday_num {
    description: "NPYesToday Num"
    type: number
    sql: ${TABLE}.NPYesToday_Num ;;
    label: "NPYesToday Num"
  }

  dimension: npyestoday_den_raw {
    description: "Raw field for NPYesToday_Den"
    type: string
    sql: ${TABLE}.NPYesToday_Den ;;
    hidden: yes
    label: "Npyestoday Den (Raw)"
  }

  dimension: epyestoday_num {
    description: "EPYesToday Num"
    type: number

    sql: ${TABLE}.EPYesToday_Num ;;
    label: "EPYesToday Num"
  }

  dimension: epyestoday_den_raw {
    description: "Raw field for EPYesToday_Den"
    type: string
    sql: ${TABLE}.EPYesToday_Den ;;
    hidden: yes
    label: "Epyestoday Den (Raw)"
  }

  dimension: percentcreditapplications_num {
    description: "PercentCreditApplications Num"
    type: number
    sql: ${TABLE}.PercentCreditApplications_Num ;;
    label: "PercentCreditApplications Num"
  }

  dimension: percentcreditapplications_den_raw {
    description: "Raw field for PercentCreditApplications_Den"
    type: string
    sql: ${TABLE}.PercentCreditApplications_Den ;;
    hidden: yes
    label: "Percentcreditapplications Den (Raw)"
  }

  dimension: newpatientotc_num {
    description: "NewPatientOtc Num"
    type: number

    sql: ${TABLE}.NewPatientOtc_Num ;;
    label: "NewPatientOtc Num"
  }

  dimension: newpatientotc_den_raw {
    description: "Raw field for NewPatientOtc_Den"
    type: string
    sql: ${TABLE}.NewPatientOtc_Den ;;
    hidden: yes
    label: "Newpatientotc Den (Raw)"
  }

  dimension: nptxpresentedpernp_num {
    description: "NPTxPresentedPerNP Num"
    type: number

    sql: ${TABLE}.NPTxPresentedPerNP_Num ;;
    label: "NPTxPresentedPerNP Num"
  }

  dimension: nptxpresentedpernp_den_raw {
    description: "Raw field for NPTxPresentedPerNP_Den"
    type: string
    sql: ${TABLE}.NPTxPresentedPerNP_Den ;;
    hidden: yes
    label: "Nptxpresentedpernp Den (Raw)"
  }

  dimension: nptxacceptedpernp_num {
    description: "NPTxAcceptedPerNP Num"
    type: number

    sql: ${TABLE}.NPTxAcceptedPerNP_Num ;;
    label: "NPTxAcceptedPerNP Num"
  }

  dimension: nptxacceptedpernp_den_raw {
    description: "Raw field for NPTxAcceptedPerNP_Den"
    type: string
    sql: ${TABLE}.NPTxAcceptedPerNP_Den ;;
    hidden: yes
    label: "Nptxacceptedpernp Den (Raw)"
  }

  dimension: eptxpresentedperep_num {
    description: "EPTxPresentedPerEP Num"
    type: number

    sql: ${TABLE}.EPTxPresentedPerEP_Num ;;
    label: "EPTxPresentedPerEP Num"
  }

  dimension: eptxpresentedperep_den_raw {
    description: "Raw field for EPTxPresentedPerEP_Den"
    type: string
    sql: ${TABLE}.EPTxPresentedPerEP_Den ;;
    hidden: yes
    label: "Eptxpresentedperep Den (Raw)"
  }

  dimension: eptxacceptedperep_num {
    description: "EPTxAcceptedPerEP Num"
    type: number

    sql: ${TABLE}.EPTxAcceptedPerEP_Num ;;
    label: "EPTxAcceptedPerEP Num"
  }

  dimension: eptxacceptedperep_den_raw {
    description: "Raw field for EPTxAcceptedPerEP_Den"
    type: string
    sql: ${TABLE}.EPTxAcceptedPerEP_Den ;;
    hidden: yes
    label: "Eptxacceptedperep Den (Raw)"
  }

  dimension: oralhealthscan_num {
    description: "OralHealthScan Num"
    type: number

    sql: ${TABLE}.OralHealthScan_Num ;;
    label: "OralHealthScan Num"
  }

  dimension: oralhealthscan_den_raw {
    description: "Raw field for OralHealthScan_Den"
    type: string
    sql: ${TABLE}.OralHealthScan_Den ;;
    hidden: yes
    label: "Oralhealthscan Den (Raw)"
  }

  dimension: tapasales_num {
    description: "TAPASales Num"
    type: number

    sql: ${TABLE}.TAPASales_Num ;;
    label: "TAPASales Num"
  }

  dimension: tapasales_den_raw {
    description: "Raw field for TAPASales_Den"
    type: string
    sql: ${TABLE}.TAPASales_Den ;;
    hidden: yes
    label: "Tapasales Den (Raw)"
  }

  dimension: doctorfte_num {
    description: "DoctorFTE Num"
    type: number

    sql: ${TABLE}.DoctorFTE_Num ;;
    label: "DoctorFTE Num"
  }

  dimension: doctorfte_den_raw {
    description: "Raw field for DoctorFTE_Den"
    type: string
    sql: ${TABLE}.DoctorFTE_Den ;;
    hidden: yes
    label: "Doctorfte Den (Raw)"
  }

  dimension: mcdproduction_num {
    description: "MCDProduction Num"
    type: number

    sql: ${TABLE}.MCDProduction_Num ;;
    label: "MCDProduction Num"
  }

  dimension: mcdproduction_den_raw {
    description: "Raw field for MCDProduction_Den"
    type: string
    sql: ${TABLE}.MCDProduction_Den ;;
    hidden: yes
    label: "Mcdproduction Den (Raw)"
  }

  dimension: associateproduction_num {
    description: "AssociateProduction Num"
    type: number

    sql: ${TABLE}.AssociateProduction_Num ;;
    label: "AssociateProduction Num"
  }

  dimension: associateproduction_den_raw {
    description: "Raw field for AssociateProduction_Den"
    type: string
    sql: ${TABLE}.AssociateProduction_Den ;;
    hidden: yes
    label: "Associateproduction Den (Raw)"
  }

  dimension: hygienistproduction_num {
    description: "HygienistProduction Num"
    type: number

    sql: ${TABLE}.HygienistProduction_Num ;;
    label: "HygienistProduction Num"
  }

  dimension: hygienistproduction_den_raw {
    description: "Raw field for HygienistProduction_Den"
    type: string
    sql: ${TABLE}.HygienistProduction_Den ;;
    hidden: yes
    label: "Hygienistproduction Den (Raw)"
  }

  dimension: orthostarts_num {
    description: "OrthoStarts Num"
    type: number

    sql: ${TABLE}.OrthoStarts_Num ;;
    label: "OrthoStarts Num"
  }

  dimension: orthostarts_den_raw {
    description: "Raw field for OrthoStarts_Den"
    type: string
    sql: ${TABLE}.OrthoStarts_Den ;;
    hidden: yes
    label: "Orthostarts Den (Raw)"
  }

  dimension: percentofschedule_num {
    description: "PercentOfSchedule Num"
    type: number

    sql: ${TABLE}.PercentOfSchedule_Num ;;
    label: "PercentOfSchedule Num"
  }

  dimension: percentofschedule_den_raw {
    description: "Raw field for PercentOfSchedule_Den"
    type: string
    sql: ${TABLE}.PercentOfSchedule_Den ;;
    hidden: yes
    label: "Percentofschedule Den (Raw)"
  }

  dimension: npsamedaystarts_num {
    description: "NPSameDayStarts Num"
    type: number
    sql: ${TABLE}.NPSameDayStarts_Num ;;
    label: "NPSameDayStarts Num"
  }

  dimension: npsamedaystarts_den_raw {
    description: "Raw field for NPSameDayStarts_Den"
    type: string
    sql: ${TABLE}.NPSameDayStarts_Den ;;
    hidden: yes
    label: "Npsamedaystarts Den (Raw)"
  }

  dimension: npcompletionrate_num {
    description: "NPCompletionRate Num"
    type: number

    sql: ${TABLE}.NPCompletionRate_Num ;;
    label: "NPCompletionRate Num"
  }

  dimension: npcompletionrate_den_raw {
    description: "Raw field for NPCompletionRate_Den"
    type: string
    sql: ${TABLE}.NPCompletionRate_Den ;;
    hidden: yes
    label: "Npcompletionrate Den (Raw)"
  }

  dimension: dentures_num {
    description: "Dentures Num"
    type: number

    sql: ${TABLE}.Dentures_Num ;;
    label: "Dentures Num"
  }

  dimension: dentures_den_raw {
    description: "Raw field for Dentures_Den"
    type: string
    sql: ${TABLE}.Dentures_Den ;;
    hidden: yes
    label: "Dentures Den (Raw)"
  }

  dimension: dentistry_num {
    description: "Dentistry Num"
    type: number

    sql: ${TABLE}.Dentistry_Num ;;
    label: "Dentistry Num"
  }

  dimension: dentistry_den_raw {
    description: "Raw field for Dentistry_Den"
    type: string
    sql: ${TABLE}.Dentistry_Den ;;
    hidden: yes
    label: "Dentistry Den (Raw)"
  }

  dimension: hygiene_num {
    description: "Hygiene Num"
    type: number

    sql: ${TABLE}.Hygiene_Num ;;
    label: "Hygiene Num"
  }

  dimension: hygiene_den_raw {
    description: "Raw field for Hygiene_Den"
    type: string
    sql: ${TABLE}.Hygiene_Den ;;
    hidden: yes
    label: "Hygiene Den (Raw)"
  }

  dimension: specialty_num {
    description: "Specialty Num"
    type: number

    sql: ${TABLE}.Specialty_Num ;;
    label: "Specialty Num"
  }

  dimension: specialty_den_raw {
    description: "Raw field for Specialty_Den"
    type: string
    sql: ${TABLE}.Specialty_Den ;;
    hidden: yes
    label: "Specialty Den (Raw)"
  }

  dimension: orthodontics_num {
    description: "Orthodontics Num"
    type: number

    sql: ${TABLE}.Orthodontics_Num ;;
    label: "Orthodontics Num"
  }

  dimension: orthodontics_den_raw {
    description: "Raw field for Orthodontics_Den"
    type: string
    sql: ${TABLE}.Orthodontics_Den ;;
    hidden: yes
    label: "Orthodontics Den (Raw)"
  }

  dimension: crownbridge_num {
    description: "CrownBridge Num"
    type: number

    sql: ${TABLE}.CrownBridge_Num ;;
    label: "CrownBridge Num"
  }

  dimension: crownbridge_den_raw {
    description: "Raw field for CrownBridge_Den"
    type: string
    sql: ${TABLE}.CrownBridge_Den ;;
    hidden: yes
    label: "Crownbridge Den (Raw)"
  }

  dimension: implants_num {
    description: "Implants Num"
    type: number

    sql: ${TABLE}.Implants_Num ;;
    label: "Implants Num"
  }

  dimension: implants_den_raw {
    description: "Raw field for Implants_Den"
    type: string
    sql: ${TABLE}.Implants_Den ;;
    hidden: yes
    label: "Implants Den (Raw)"
  }

  dimension: production_num {
    description: "Production Num"
    type: number

    sql: ${TABLE}.Production_Num ;;
    label: "Production Num"
  }

  dimension: production_den_raw {
    description: "Raw field for Production_Den"
    type: string
    sql: ${TABLE}.Production_Den ;;
    hidden: yes
    label: "Production Den (Raw)"
  }

  dimension: patientsatisfaction_num {
    description: "PatientSatisfaction Num"
    type: number

    sql: ${TABLE}.PatientSatisfaction_Num ;;
    label: "PatientSatisfaction Num"
  }

  dimension: patientsatisfaction_den_raw {
    description: "Raw field for PatientSatisfaction_Den"
    type: string
    sql: ${TABLE}.PatientSatisfaction_Den ;;
    hidden: yes
    label: "Patientsatisfaction Den (Raw)"
  }

  dimension: onlinereviewratings_num {
    description: "OnlineReviewRatings Num"
    type: number

    sql: ${TABLE}.OnlineReviewRatings_Num ;;
    label: "OnlineReviewRatings Num"
  }

  dimension: onlinereviewratings_den_raw {
    description: "Raw field for OnlineReviewRatings_Den"
    type: string
    sql: ${TABLE}.OnlineReviewRatings_Den ;;
    hidden: yes
    label: "Onlinereviewratings Den (Raw)"
  }

  dimension: addedtoschedule_num_raw {
    description: "Raw field for Addedtoschedule_Num"
    type: string
    sql: ${TABLE}.Addedtoschedule_Num ;;
    hidden: yes
    label: "Addedtoschedule Num (Raw)"
  }

  dimension: estimatedproductioncurrentmonth_num_raw {
    description: "Raw field for EstimatedProductionCurrentMonth_Num"
    type: string
    sql: ${TABLE}.EstimatedProductionCurrentMonth_Num ;;
    hidden: yes
    label: "Estimatedproductioncurrentmonth Num (Raw)"
  }

  dimension: estimatedproductionbudgetvariance_num_raw {
    description: "Raw field for EstimatedProductionBudgetVariance_Num"
    type: string
    sql: ${TABLE}.EstimatedProductionBudgetVariance_Num ;;
    hidden: yes
    label: "Estimatedproductionbudgetvariance Num (Raw)"
  }

  dimension: totaldeposit_num {
    description: "TotalDeposit Num"
    type: number

    sql: ${TABLE}.TotalDeposit_Num ;;
    label: "TotalDeposit Num"
  }

  dimension: percentofbalancecollected_num {
    description: "PercentofBalanceCollected Num"
    type: number
    sql: ${TABLE}.PercentofBalanceCollected_Num ;;
    label: "PercentofBalanceCollected Num"
  }

  dimension: percentofbalancecollected_den_raw {
    description: "Raw field for PercentofBalanceCollected_Den"
    type: string
    sql: ${TABLE}.PercentofBalanceCollected_Den ;;
    hidden: yes
    label: "Percentofbalancecollected Den (Raw)"
  }

  dimension: netpromotersconumberl_num {
    description: "NetPromoterSconumberL Num"
    type: number

    sql: ${TABLE}.NetPromoterSconumberL_Num ;;
    label: "NetPromoterSconumberL Num"
  }

  dimension: netpromotersconumberl_den_raw {
    description: "Raw field for NetPromoterSconumberL_Den"
    type: string
    sql: ${TABLE}.NetPromoterSconumberL_Den ;;
    hidden: yes
    label: "Netpromotersconumberl Den (Raw)"
  }

  dimension: netpromoterscore_num {
    description: "NetPromoterScore Num"
    type: number

    sql: ${TABLE}.NetPromoterScore_Num ;;
    label: "NetPromoterScore Num"
  }

  dimension: netpromoterscore_den_raw {
    description: "Raw field for NetPromoterScore_Den"
    type: string
    sql: ${TABLE}.NetPromoterScore_Den ;;
    hidden: yes
    label: "Netpromoterscore Den (Raw)"
  }

  dimension: percentofpatientleavingwithappt_num {
    description: "PercentofPatientleavingwithappt Num"
    type: number

    sql: ${TABLE}.PercentofPatientleavingwithappt_Num ;;
    label: "PercentofPatientleavingwithappt Num"
  }

  dimension: percentofpatientleavingwithappt_den_raw {
    description: "Raw field for PercentofPatientleavingwithappt_Den"
    type: string
    sql: ${TABLE}.PercentofPatientleavingwithappt_Den ;;
    hidden: yes
    label: "Percentofpatientleavingwithappt Den (Raw)"
  }

  dimension: comptoproblemfocusedexams_num_raw {
    description: "Raw field for ComptoProblemFocusedExams_Num"
    type: string
    sql: ${TABLE}.ComptoProblemFocusedExams_Num ;;
    hidden: yes
    label: "Comptoproblemfocusedexams Num (Raw)"
  }

  dimension: comptoproblemfocusedexams_den_raw {
    description: "Raw field for ComptoProblemFocusedExams_Den"
    type: string
    sql: ${TABLE}.ComptoProblemFocusedExams_Den ;;
    hidden: yes
    label: "Comptoproblemfocusedexams Den (Raw)"
  }

  dimension: apptlength_adult_raw {
    description: "Raw field for ApptLength_Adult"
    type: string
    sql: ${TABLE}.ApptLength_Adult ;;
    hidden: yes
    label: "Apptlength Adult (Raw)"
  }

  dimension: totalinefficienthourspcandnp_raw {
    description: "Raw field for TotalInefficientHoursPCandNP"
    type: string
    sql: ${TABLE}.TotalInefficientHoursPCandNP ;;
    hidden: yes
    label: "Totalinefficienthourspcandnp (Raw)"
  }

  dimension: totalschedulehourspcandnp_raw {
    description: "Raw field for TotalScheduleHoursPCandNP"
    type: string
    sql: ${TABLE}.TotalScheduleHoursPCandNP ;;
    hidden: yes
    label: "Totalschedulehourspcandnp (Raw)"
  }

  dimension: gaphourspcandnp_raw {
    description: "Raw field for GapHoursPCandNP"
    type: string
    sql: ${TABLE}.GapHoursPCandNP ;;
    hidden: yes
    label: "Gaphourspcandnp (Raw)"
  }

  dimension: extendednpappthourspcandnp_raw {
    description: "Raw field for ExtendedNPApptHoursPCandNP"
    type: string
    sql: ${TABLE}.ExtendedNPApptHoursPCandNP ;;
    hidden: yes
    label: "Extendednpappthourspcandnp (Raw)"
  }

  dimension: nonnphourspcandnp_raw {
    description: "Raw field for NonNPHoursPCandNP"
    type: string
    sql: ${TABLE}.NonNPHoursPCandNP ;;
    hidden: yes
    label: "Nonnphourspcandnp (Raw)"
  }

  dimension: avaliablehourspcandnp_raw {
    description: "Raw field for AvaliableHoursPCandNP"
    type: string
    sql: ${TABLE}.AvaliableHoursPCandNP ;;
    hidden: yes
    label: "Avaliablehourspcandnp (Raw)"
  }

  dimension: appointedhourspcandnp_raw {
    description: "Raw field for AppointedHoursPCandNP"
    type: string
    sql: ${TABLE}.AppointedHoursPCandNP ;;
    hidden: yes
    label: "Appointedhourspcandnp (Raw)"
  }

  dimension: remaininghourspcandnp_raw {
    description: "Raw field for RemainingHoursPCandNP"
    type: string
    sql: ${TABLE}.RemainingHoursPCandNP ;;
    hidden: yes
    label: "Remaininghourspcandnp (Raw)"
  }

  dimension: remainingslotspcandnp_raw {
    description: "Raw field for RemainingSlotsPCandNP"
    type: string
    sql: ${TABLE}.RemainingSlotsPCandNP ;;
    hidden: yes
    label: "Remainingslotspcandnp (Raw)"
  }

  dimension: pcschedulehours_raw {
    description: "Raw field for PCScheduleHours"
    type: string
    sql: ${TABLE}.PCScheduleHours ;;
    hidden: yes
    label: "Pcschedulehours (Raw)"
  }

  dimension: pcblockhours_raw {
    description: "Raw field for PCBlockHours"
    type: string
    sql: ${TABLE}.PCBlockHours ;;
    hidden: yes
    label: "Pcblockhours (Raw)"
  }

  dimension: npschedulehours_raw {
    description: "Raw field for NPScheduleHours"
    type: string
    sql: ${TABLE}.NPScheduleHours ;;
    hidden: yes
    label: "Npschedulehours (Raw)"
  }

  dimension: npblockhours_raw {
    description: "Raw field for NPBlockHours"
    type: string
    sql: ${TABLE}.NPBlockHours ;;
    hidden: yes
    label: "Npblockhours (Raw)"
  }

  dimension: npapptperday_num_raw {
    description: "Raw field for NPApptPerDay_Num"
    type: string
    sql: ${TABLE}.NPApptPerDay_Num ;;
    hidden: yes
    label: "Npapptperday Num (Raw)"
  }

  dimension: npapptperday_den_raw {
    description: "Raw field for NPApptPerDay_Den"
    type: string
    sql: ${TABLE}.NPApptPerDay_Den ;;
    hidden: yes
    label: "Npapptperday Den (Raw)"
  }

  dimension: daystoinsert_den_raw {
    description: "Raw field for Daystoinsert_Den"
    type: string
    sql: ${TABLE}.Daystoinsert_Den ;;
    hidden: yes
    label: "Daystoinsert Den (Raw)"
  }

  dimension: daystoinsert_num_raw {
    description: "Raw field for Daystoinsert_Num"
    type: string
    sql: ${TABLE}.Daystoinsert_Num ;;
    hidden: yes
    label: "Daystoinsert Num (Raw)"
  }

  dimension: daystoimpression_den_raw {
    description: "Raw field for DaysToImpression_Den"
    type: string
    sql: ${TABLE}.DaysToImpression_Den ;;
    hidden: yes
    label: "Daystoimpression Den (Raw)"
  }

  dimension: daystoimpression_num_raw {
    description: "Raw field for DaysToImpression_Num"
    type: string
    sql: ${TABLE}.DaysToImpression_Num ;;
    hidden: yes
    label: "Daystoimpression Num (Raw)"
  }

  dimension: denturesameday_num_raw {
    description: "Raw field for DentureSameDay_Num"
    type: string
    sql: ${TABLE}.DentureSameDay_Num ;;
    hidden: yes
    label: "Denturesameday Num (Raw)"
  }

  dimension: denturesameday_den_raw {
    description: "Raw field for DentureSameDay_Den"
    type: string
    sql: ${TABLE}.DentureSameDay_Den ;;
    hidden: yes
    label: "Denturesameday Den (Raw)"
  }

  dimension: denturerefund_num_raw {
    description: "Raw field for DentureRefund_Num"
    type: string
    sql: ${TABLE}.DentureRefund_Num ;;
    hidden: yes
    label: "Denturerefund Num (Raw)"
  }

  dimension: denturerefund_den_raw {
    description: "Raw field for DentureRefund_Den"
    type: string
    sql: ${TABLE}.DentureRefund_Den ;;
    hidden: yes
    label: "Denturerefund Den (Raw)"
  }

  dimension: fulldenture_num_raw {
    description: "Raw field for FullDenture_Num"
    type: string
    sql: ${TABLE}.FullDenture_Num ;;
    hidden: yes
    label: "Fulldenture Num (Raw)"
  }

  dimension: partialdenture_num_raw {
    description: "Raw field for PartialDenture_Num"
    type: string
    sql: ${TABLE}.PartialDenture_Num ;;
    hidden: yes
    label: "Partialdenture Num (Raw)"
  }

  dimension: alldenture_den_raw {
    description: "Raw field for AllDenture_Den"
    type: string
    sql: ${TABLE}.AllDenture_Den ;;
    hidden: yes
    label: "Alldenture Den (Raw)"
  }

  dimension: denturecompletion_num_raw {
    description: "Raw field for DentureCompletion_Num"
    type: string
    sql: ${TABLE}.DentureCompletion_Num ;;
    hidden: yes
    label: "Denturecompletion Num (Raw)"
  }

  dimension: denturecompletion_den_raw {
    description: "Raw field for DentureCompletion_Den"
    type: string
    sql: ${TABLE}.DentureCompletion_Den ;;
    hidden: yes
    label: "Denturecompletion Den (Raw)"
  }

  dimension: cbunits_num_raw {
    description: "Raw field for CBUnits_Num"
    type: string
    sql: ${TABLE}.CBUnits_Num ;;
    hidden: yes
    label: "Cbunits Num (Raw)"
  }

  dimension: cbunits_den_raw {
    description: "Raw field for CBUnits_Den"
    type: string
    sql: ${TABLE}.CBUnits_Den ;;
    hidden: yes
    label: "Cbunits Den (Raw)"
  }

  dimension: crowntomulti_num_raw {
    description: "Raw field for CrownToMulti_Num"
    type: string
    sql: ${TABLE}.CrownToMulti_Num ;;
    hidden: yes
    label: "Crowntomulti Num (Raw)"
  }

  dimension: crowntomulti_denom_raw {
    description: "Raw field for CrownToMulti_Denom"
    type: string
    sql: ${TABLE}.CrownToMulti_Denom ;;
    hidden: yes
    label: "Crowntomulti Denom (Raw)"
  }

  dimension: hygieneshows_raw {
    description: "Raw field for HygieneShows"
    type: string
    sql: ${TABLE}.HygieneShows ;;
    hidden: yes
    label: "Hygieneshows (Raw)"
  }

  dimension: hygieneappts_showrate_raw {
    description: "Raw field for HygieneAppts_ShowRate"
    type: string
    sql: ${TABLE}.HygieneAppts_ShowRate ;;
    hidden: yes
    label: "Hygieneappts Showrate (Raw)"
  }

  dimension: daystosrp_days_raw {
    description: "Raw field for DaysToSRP_Days"
    type: string
    sql: ${TABLE}.DaysToSRP_Days ;;
    hidden: yes
    label: "Daystosrp Days (Raw)"
  }

  dimension: daystosrp_patients_raw {
    description: "Raw field for DaysToSRP_Patients"
    type: string
    sql: ${TABLE}.DaysToSRP_Patients ;;
    hidden: yes
    label: "Daystosrp Patients (Raw)"
  }

  dimension: periotoprophy_num_raw {
    description: "Raw field for PerioToProphy_Num"
    type: string
    sql: ${TABLE}.PerioToProphy_Num ;;
    hidden: yes
    label: "Periotoprophy Num (Raw)"
  }

  dimension: periotoprophy_denom_raw {
    description: "Raw field for PerioToProphy_Denom"
    type: string
    sql: ${TABLE}.PerioToProphy_Denom ;;
    hidden: yes
    label: "Periotoprophy Denom (Raw)"
  }

  dimension: perioacceptedrate_num_raw {
    description: "Raw field for PerioAcceptedRate_Num"
    type: string
    sql: ${TABLE}.PerioAcceptedRate_Num ;;
    hidden: yes
    label: "Perioacceptedrate Num (Raw)"
  }

  dimension: perioacceptedrate_denom_raw {
    description: "Raw field for PerioAcceptedRate_Denom"
    type: string
    sql: ${TABLE}.PerioAcceptedRate_Denom ;;
    hidden: yes
    label: "Perioacceptedrate Denom (Raw)"
  }

  dimension: laatoperiopatientsratio_num_raw {
    description: "Raw field for LAAtoPerioPatientsRatio_Num"
    type: string
    sql: ${TABLE}.LAAtoPerioPatientsRatio_Num ;;
    hidden: yes
    label: "Laatoperiopatientsratio Num (Raw)"
  }

  dimension: laatoperiopatientsratio_den_raw {
    description: "Raw field for LAAtoPerioPatientsRatio_den"
    type: string
    sql: ${TABLE}.LAAtoPerioPatientsRatio_den ;;
    hidden: yes
    label: "Laatoperiopatientsratio Den (Raw)"
  }

  dimension: implantsopp_num_raw {
    description: "Raw field for ImplantsOpp_Num"
    type: string
    sql: ${TABLE}.ImplantsOpp_Num ;;
    hidden: yes
    label: "Implantsopp Num (Raw)"
  }

  dimension: implantsopp_den_raw {
    description: "Raw field for ImplantsOpp_Den"
    type: string
    sql: ${TABLE}.ImplantsOpp_Den ;;
    hidden: yes
    label: "Implantsopp Den (Raw)"
  }

  dimension: implantsplaced_num_raw {
    description: "Raw field for ImplantsPlaced_Num"
    type: string
    sql: ${TABLE}.ImplantsPlaced_Num ;;
    hidden: yes
    label: "Implantsplaced Num (Raw)"
  }

  dimension: implantsplaced_den_raw {
    description: "Raw field for ImplantsPlaced_Den"
    type: string
    sql: ${TABLE}.ImplantsPlaced_Den ;;
    hidden: yes
    label: "Implantsplaced Den (Raw)"
  }

  dimension: orthopresentationrate_num_raw {
    description: "Raw field for OrthoPresentationRate_Num"
    type: string
    sql: ${TABLE}.OrthoPresentationRate_Num ;;
    hidden: yes
    label: "Orthopresentationrate Num (Raw)"
  }

  dimension: orthopresentationrate_den_raw {
    description: "Raw field for OrthoPresentationRate_Den"
    type: string
    sql: ${TABLE}.OrthoPresentationRate_Den ;;
    hidden: yes
    label: "Orthopresentationrate Den (Raw)"
  }

  dimension: orthotxpresented_raw {
    description: "Raw field for OrthoTxPresented"
    type: string
    sql: ${TABLE}.OrthoTxPresented ;;
    hidden: yes
    label: "Orthotxpresented (Raw)"
  }

  dimension: orthotxaccepted_raw {
    description: "Raw field for OrthoTxAccepted"
    type: string
    sql: ${TABLE}.OrthoTxAccepted ;;
    hidden: yes
    label: "Orthotxaccepted (Raw)"
  }

  dimension: orthotxpresented_patientcount_raw {
    description: "Raw field for OrthoTxPresented_PatientCount"
    type: string
    sql: ${TABLE}.OrthoTxPresented_PatientCount ;;
    hidden: yes
    label: "Orthotxpresented Patientcount (Raw)"
  }

  dimension: endoprodperday_num_raw {
    description: "Raw field for EndoProdPerDay_Num"
    type: string
    sql: ${TABLE}.EndoProdPerDay_Num ;;
    hidden: yes
    label: "Endoprodperday Num (Raw)"
  }

  dimension: endoprodperday_denom_raw {
    description: "Raw field for EndoProdPerDay_Denom"
    type: string
    sql: ${TABLE}.EndoProdPerDay_Denom ;;
    hidden: yes
    label: "Endoprodperday Denom (Raw)"
  }

  dimension: osprodperday_num_raw {
    description: "Raw field for OSProdPerDay_Num"
    type: string
    sql: ${TABLE}.OSProdPerDay_Num ;;
    hidden: yes
    label: "Osprodperday Num (Raw)"
  }

  dimension: osprodperday_denom_raw {
    description: "Raw field for OSProdPerDay_Denom"
    type: string
    sql: ${TABLE}.OSProdPerDay_Denom ;;
    hidden: yes
    label: "Osprodperday Denom (Raw)"
  }

  dimension: dentureopp_num_raw {
    description: "Raw field for DentureOpp_Num"
    type: string
    sql: ${TABLE}.DentureOpp_Num ;;
    hidden: yes
    label: "Dentureopp Num (Raw)"
  }

  dimension: dentureopp_denom_raw {
    description: "Raw field for DentureOpp_Denom"
    type: string
    sql: ${TABLE}.DentureOpp_Denom ;;
    hidden: yes
    label: "Dentureopp Denom (Raw)"
  }

  dimension: waxtryin_raw {
    description: "Raw field for WaxTryIn"
    type: string
    sql: ${TABLE}.WaxTryIn ;;
    hidden: yes
    label: "Waxtryin (Raw)"
  }

  dimension: denturesteppatients_raw {
    description: "Raw field for DentureStepPatients"
    type: string
    sql: ${TABLE}.DentureStepPatients ;;
    hidden: yes
    label: "Denturesteppatients (Raw)"
  }

  dimension: denturesold_num_raw {
    description: "Raw field for DentureSold_Num"
    type: string
    sql: ${TABLE}.DentureSold_Num ;;
    hidden: yes
    label: "Denturesold Num (Raw)"
  }

  dimension: denturesold_den_raw {
    description: "Raw field for DentureSold_Den"
    type: string
    sql: ${TABLE}.DentureSold_Den ;;
    hidden: yes
    label: "Denturesold Den (Raw)"
  }

  dimension: cbucfpercent_den_raw {
    description: "Raw field for CBUCFPercent_Den"
    type: string
    sql: ${TABLE}.CBUCFPercent_Den ;;
    hidden: yes
    label: "Cbucfpercent Den (Raw)"
  }

  dimension: cbucfpercent_num_raw {
    description: "Raw field for CBUCFPercent_Num"
    type: string
    sql: ${TABLE}.CBUCFPercent_Num ;;
    hidden: yes
    label: "Cbucfpercent Num (Raw)"
  }

  dimension: cblabpercent_den_raw {
    description: "Raw field for CBLabPercent_Den"
    type: string
    sql: ${TABLE}.CBLabPercent_Den ;;
    hidden: yes
    label: "Cblabpercent Den (Raw)"
  }

  dimension: cblabpercent_num_raw {
    description: "Raw field for CBLABPercent_Num"
    type: string
    sql: ${TABLE}.CBLABPercent_Num ;;
    hidden: yes
    label: "Cblabpercent Num (Raw)"
  }

  dimension: cbrevperunit_den_raw {
    description: "Raw field for CBRevPerUnit_Den"
    type: string
    sql: ${TABLE}.CBRevPerUnit_Den ;;
    hidden: yes
    label: "Cbrevperunit Den (Raw)"
  }

  dimension: cbrevperunit_num_raw {
    description: "Raw field for CBRevPerUnit_Num"
    type: string
    sql: ${TABLE}.CBRevPerUnit_Num ;;
    hidden: yes
    label: "Cbrevperunit Num (Raw)"
  }

  dimension: npperdaytop20_raw {
    description: "Raw field for NPPerDayTop20"
    type: string
    sql: ${TABLE}.NPPerDayTop20 ;;
    hidden: yes
    label: "Npperdaytop20 (Raw)"
  }

  dimension: epperdaytop20_raw {
    description: "Raw field for EPPerDayTop20"
    type: string
    sql: ${TABLE}.EPPerDayTop20 ;;
    hidden: yes
    label: "Epperdaytop20 (Raw)"
  }

  dimension: avgdaysuntilfirstvisitpercenttop20_raw {
    description: "Raw field for AvgDaysUntilFirstVisitPercentTop20"
    type: string
    sql: ${TABLE}.AvgDaysUntilFirstVisitPercentTop20 ;;
    hidden: yes
    label: "Avgdaysuntilfirstvisitpercenttop20 (Raw)"
  }

  dimension: npshowratetop20_raw {
    description: "Raw field for NPShowRateTop20"
    type: string
    sql: ${TABLE}.NPShowRateTop20 ;;
    hidden: yes
    label: "Npshowratetop20 (Raw)"
  }

  dimension: epshowratetop20_raw {
    description: "Raw field for EPShowRateTop20"
    type: string
    sql: ${TABLE}.EPShowRateTop20 ;;
    hidden: yes
    label: "Epshowratetop20 (Raw)"
  }

  dimension: npyestodaytop20_raw {
    description: "Raw field for NPYesTodayTop20"
    type: string
    sql: ${TABLE}.NPYesTodayTop20 ;;
    hidden: yes
    label: "Npyestodaytop20 (Raw)"
  }

  dimension: epyestodaytop20_raw {
    description: "Raw field for EPYesTodayTop20"
    type: string
    sql: ${TABLE}.EPYesTodayTop20 ;;
    hidden: yes
    label: "Epyestodaytop20 (Raw)"
  }

  dimension: creditapplicationstop20_raw {
    description: "Raw field for CreditApplicationsTop20"
    type: string
    sql: ${TABLE}.CreditApplicationsTop20 ;;
    hidden: yes
    label: "Creditapplicationstop20 (Raw)"
  }

  dimension: newpatientotctop20_raw {
    description: "Raw field for NewPatientOtcTop20"
    type: string
    sql: ${TABLE}.NewPatientOtcTop20 ;;
    hidden: yes
    label: "Newpatientotctop20 (Raw)"
  }

  dimension: nptxpresentedpernptop20_raw {
    description: "Raw field for NPTxPresentedPerNPTop20"
    type: string
    sql: ${TABLE}.NPTxPresentedPerNPTop20 ;;
    hidden: yes
    label: "Nptxpresentedpernptop20 (Raw)"
  }

  dimension: nptxacceptedpernptop20_raw {
    description: "Raw field for NPTxAcceptedPerNPTop20"
    type: string
    sql: ${TABLE}.NPTxAcceptedPerNPTop20 ;;
    hidden: yes
    label: "Nptxacceptedpernptop20 (Raw)"
  }

  dimension: eptxpresentedpereptop20_raw {
    description: "Raw field for EPTxPresentedPerEPTop20"
    type: string
    sql: ${TABLE}.EPTxPresentedPerEPTop20 ;;
    hidden: yes
    label: "Eptxpresentedpereptop20 (Raw)"
  }

  dimension: eptxacceptedpereptop20_raw {
    description: "Raw field for EPTxAcceptedPerEPTop20"
    type: string
    sql: ${TABLE}.EPTxAcceptedPerEPTop20 ;;
    hidden: yes
    label: "Eptxacceptedpereptop20 (Raw)"
  }

  dimension: oralhealthscanpercenttop20_raw {
    description: "Raw field for OralHealthScanPercentTop20"
    type: string
    sql: ${TABLE}.OralHealthScanPercentTop20 ;;
    hidden: yes
    label: "Oralhealthscanpercenttop20 (Raw)"
  }

  dimension: tapasalestop20_raw {
    description: "Raw field for TAPASalesTop20"
    type: string
    sql: ${TABLE}.TAPASalesTop20 ;;
    hidden: yes
    label: "Tapasalestop20 (Raw)"
  }

  dimension: doctorftetop20_raw {
    description: "Raw field for DoctorFTETop20"
    type: string
    sql: ${TABLE}.DoctorFTETop20 ;;
    hidden: yes
    label: "Doctorftetop20 (Raw)"
  }

  dimension: mcdproductiontop20_raw {
    description: "Raw field for MCDProductionTop20"
    type: string
    sql: ${TABLE}.MCDProductionTop20 ;;
    hidden: yes
    label: "Mcdproductiontop20 (Raw)"
  }

  dimension: associateproductiontop20_raw {
    description: "Raw field for AssociateProductionTop20"
    type: string
    sql: ${TABLE}.AssociateProductionTop20 ;;
    hidden: yes
    label: "Associateproductiontop20 (Raw)"
  }

  dimension: hygienistdailyproductiontop20_raw {
    description: "Raw field for HygienistDailyProductionTop20"
    type: string
    sql: ${TABLE}.HygienistDailyProductionTop20 ;;
    hidden: yes
    label: "Hygienistdailyproductiontop20 (Raw)"
  }

  dimension: orthostartstop20_raw {
    description: "Raw field for OrthoStartsTop20"
    type: string
    sql: ${TABLE}.OrthoStartsTop20 ;;
    hidden: yes
    label: "Orthostartstop20 (Raw)"
  }

  dimension: percentofscheduletop20_raw {
    description: "Raw field for PercentOfScheduleTop20"
    type: string
    sql: ${TABLE}.PercentOfScheduleTop20 ;;
    hidden: yes
    label: "Percentofscheduletop20 (Raw)"
  }

  dimension: npsamedaystartstop20_raw {
    description: "Raw field for NPSameDayStartsTop20"
    type: string
    sql: ${TABLE}.NPSameDayStartsTop20 ;;
    hidden: yes
    label: "Npsamedaystartstop20 (Raw)"
  }

  dimension: newpatienttxplancompletionratetop20_raw {
    description: "Raw field for NewPatientTxPlanCompletionRateTop20"
    type: string
    sql: ${TABLE}.NewPatientTxPlanCompletionRateTop20 ;;
    hidden: yes
    label: "Newpatienttxplancompletionratetop20 (Raw)"
  }

  dimension: denturestop20_raw {
    description: "Raw field for DenturesTop20"
    type: string
    sql: ${TABLE}.DenturesTop20 ;;
    hidden: yes
    label: "Denturestop20 (Raw)"
  }

  dimension: dentistrytop20_raw {
    description: "Raw field for DentistryTop20"
    type: string
    sql: ${TABLE}.DentistryTop20 ;;
    hidden: yes
    label: "Dentistrytop20 (Raw)"
  }

  dimension: hygienetop20_raw {
    description: "Raw field for HygieneTop20"
    type: string
    sql: ${TABLE}.HygieneTop20 ;;
    hidden: yes
    label: "Hygienetop20 (Raw)"
  }

  dimension: specialtytop20_raw {
    description: "Raw field for SpecialtyTop20"
    type: string
    sql: ${TABLE}.SpecialtyTop20 ;;
    hidden: yes
    label: "Specialtytop20 (Raw)"
  }

  dimension: orthodonticstop20_raw {
    description: "Raw field for OrthodonticsTop20"
    type: string
    sql: ${TABLE}.OrthodonticsTop20 ;;
    hidden: yes
    label: "Orthodonticstop20 (Raw)"
  }

  dimension: crownbridgetop20_raw {
    description: "Raw field for CrownBridgeTop20"
    type: string
    sql: ${TABLE}.CrownBridgeTop20 ;;
    hidden: yes
    label: "Crownbridgetop20 (Raw)"
  }

  dimension: implantstop20_raw {
    description: "Raw field for ImplantsTop20"
    type: string
    sql: ${TABLE}.ImplantsTop20 ;;
    hidden: yes
    label: "Implantstop20 (Raw)"
  }

  dimension: productiontop20_raw {
    description: "Raw field for ProductionTop20"
    type: string
    sql: ${TABLE}.ProductionTop20 ;;
    hidden: yes
    label: "Productiontop20 (Raw)"
  }

  dimension: patientsatisfactiontop20_raw {
    description: "Raw field for PatientSatisfactionTop20"
    type: string
    sql: ${TABLE}.PatientSatisfactionTop20 ;;
    hidden: yes
    label: "Patientsatisfactiontop20 (Raw)"
  }

  dimension: onlinereviewratingstop20_raw {
    description: "Raw field for OnlineReviewRatingsTop20"
    type: string
    sql: ${TABLE}.OnlineReviewRatingsTop20 ;;
    hidden: yes
    label: "Onlinereviewratingstop20 (Raw)"
  }

  dimension: addedtoscheduletop20_raw {
    description: "Raw field for AddedtoScheduleTop20"
    type: string
    sql: ${TABLE}.AddedtoScheduleTop20 ;;
    hidden: yes
    label: "Addedtoscheduletop20 (Raw)"
  }

  dimension: estimatedproductioncurrentmonthtop20_raw {
    description: "Raw field for EstimatedProductionCurrentMonthTop20"
    type: string
    sql: ${TABLE}.EstimatedProductionCurrentMonthTop20 ;;
    hidden: yes
    label: "Estimatedproductioncurrentmonthtop20 (Raw)"
  }

  dimension: estimatedproductionbudgetvariancecurrentmonthtop20_raw {
    description: "Raw field for EstimatedProductionBudgetVarianceCurrentMonthTop20"
    type: string
    sql: ${TABLE}.EstimatedProductionBudgetVarianceCurrentMonthTop20 ;;
    hidden: yes
    label: "Estimatedproductionbudgetvariancecurrentmonthtop20 (Raw)"
  }

  dimension: totaldeposittop20_raw {
    description: "Raw field for TotalDepositTop20"
    type: string
    sql: ${TABLE}.TotalDepositTop20 ;;
    hidden: yes
    label: "Totaldeposittop20 (Raw)"
  }

  dimension: percentofbalancecollectedtop20_raw {
    description: "Raw field for PercentofBalanceCollectedTop20"
    type: string
    sql: ${TABLE}.PercentofBalanceCollectedTop20 ;;
    hidden: yes
    label: "Percentofbalancecollectedtop20 (Raw)"
  }

  dimension: netpromotersconumberltop20_raw {
    description: "Raw field for NetPromoterSconumberLTop20"
    type: string
    sql: ${TABLE}.NetPromoterSconumberLTop20 ;;
    hidden: yes
    label: "Netpromotersconumberltop20 (Raw)"
  }

  dimension: netpromoterscoretop20_raw {
    description: "Raw field for NetPromoterScoreTop20"
    type: string
    sql: ${TABLE}.NetPromoterScoreTop20 ;;
    hidden: yes
    label: "Netpromoterscoretop20 (Raw)"
  }

  dimension: percentofpatientleavingwithappttop20_raw {
    description: "Raw field for PercentofPatientLeavingwithApptTop20"
    type: string
    sql: ${TABLE}.PercentofPatientLeavingwithApptTop20 ;;
    hidden: yes
    label: "Percentofpatientleavingwithappttop20 (Raw)"
  }

  dimension: comptoproblemfocusedexamsttop20_raw {
    description: "Raw field for ComptoProblemFocusedExamstTop20"
    type: string
    sql: ${TABLE}.ComptoProblemFocusedExamstTop20 ;;
    hidden: yes
    label: "Comptoproblemfocusedexamsttop20 (Raw)"
  }

  dimension: npapptsperdaypercenttop20_raw {
    description: "Raw field for NPApptsPerDayPercentTop20"
    type: string
    sql: ${TABLE}.NPApptsPerDayPercentTop20 ;;
    hidden: yes
    label: "Npapptsperdaypercenttop20 (Raw)"
  }

  dimension: inefficienttop20_raw {
    description: "Raw field for InefficientTop20"
    type: string
    sql: ${TABLE}.InefficientTop20 ;;
    hidden: yes
    label: "Inefficienttop20 (Raw)"
  }

  dimension: npblocktop20_raw {
    description: "Raw field for NPBlockTop20"
    type: string
    sql: ${TABLE}.NPBlockTop20 ;;
    hidden: yes
    label: "Npblocktop20 (Raw)"
  }

  dimension: pcblocktop20_raw {
    description: "Raw field for PCBlockTop20"
    type: string
    sql: ${TABLE}.PCBlockTop20 ;;
    hidden: yes
    label: "Pcblocktop20 (Raw)"
  }

  dimension: apptlength_adulttop20_raw {
    description: "Raw field for ApptLength_AdultTop20"
    type: string
    sql: ${TABLE}.ApptLength_AdultTop20 ;;
    hidden: yes
    label: "Apptlength Adulttop20 (Raw)"
  }

  dimension: daystoinserttop20_raw {
    description: "Raw field for DaystoinsertTop20"
    type: string
    sql: ${TABLE}.DaystoinsertTop20 ;;
    hidden: yes
    label: "Daystoinserttop20 (Raw)"
  }

  dimension: daystoimpressiontop20_raw {
    description: "Raw field for DaysToImpressionTop20"
    type: string
    sql: ${TABLE}.DaysToImpressionTop20 ;;
    hidden: yes
    label: "Daystoimpressiontop20 (Raw)"
  }

  dimension: denturesamedaytop20_raw {
    description: "Raw field for DentureSameDayTop20"
    type: string
    sql: ${TABLE}.DentureSameDayTop20 ;;
    hidden: yes
    label: "Denturesamedaytop20 (Raw)"
  }

  dimension: denturerefundtop20_raw {
    description: "Raw field for DentureRefundTop20"
    type: string
    sql: ${TABLE}.DentureRefundTop20 ;;
    hidden: yes
    label: "Denturerefundtop20 (Raw)"
  }

  dimension: fulldenturetop20_raw {
    description: "Raw field for FullDentureTop20"
    type: string
    sql: ${TABLE}.FullDentureTop20 ;;
    hidden: yes
    label: "Fulldenturetop20 (Raw)"
  }

  dimension: partialdenturetop20_raw {
    description: "Raw field for PartialDentureTop20"
    type: string
    sql: ${TABLE}.PartialDentureTop20 ;;
    hidden: yes
    label: "Partialdenturetop20 (Raw)"
  }

  dimension: denturecompletiontop20_raw {
    description: "Raw field for DentureCompletionTop20"
    type: string
    sql: ${TABLE}.DentureCompletionTop20 ;;
    hidden: yes
    label: "Denturecompletiontop20 (Raw)"
  }

  dimension: cbunitstop20_raw {
    description: "Raw field for CBUnitsTop20"
    type: string
    sql: ${TABLE}.CBUnitsTop20 ;;
    hidden: yes
    label: "Cbunitstop20 (Raw)"
  }

  dimension: crowntomultitop20_raw {
    description: "Raw field for CrownToMultiTop20"
    type: string
    sql: ${TABLE}.CrownToMultiTop20 ;;
    hidden: yes
    label: "Crowntomultitop20 (Raw)"
  }

  dimension: daystosrp_daystop20_raw {
    description: "Raw field for DaysToSRP_DaysTop20"
    type: string
    sql: ${TABLE}.DaysToSRP_DaysTop20 ;;
    hidden: yes
    label: "Daystosrp Daystop20 (Raw)"
  }

  dimension: periotoprophytop20_raw {
    description: "Raw field for PerioToProphyTop20"
    type: string
    sql: ${TABLE}.PerioToProphyTop20 ;;
    hidden: yes
    label: "Periotoprophytop20 (Raw)"
  }

  dimension: perioacceptedratetop20_raw {
    description: "Raw field for PerioAcceptedRateTop20"
    type: string
    sql: ${TABLE}.PerioAcceptedRateTop20 ;;
    hidden: yes
    label: "Perioacceptedratetop20 (Raw)"
  }

  dimension: laatoperiopatientsratiotop20_raw {
    description: "Raw field for LAAtoPerioPatientsRatioTop20"
    type: string
    sql: ${TABLE}.LAAtoPerioPatientsRatioTop20 ;;
    hidden: yes
    label: "Laatoperiopatientsratiotop20 (Raw)"
  }

  dimension: implantsopptop20_raw {
    description: "Raw field for ImplantsOppTop20"
    type: string
    sql: ${TABLE}.ImplantsOppTop20 ;;
    hidden: yes
    label: "Implantsopptop20 (Raw)"
  }

  dimension: implantsplacedtop20_raw {
    description: "Raw field for ImplantsPlacedTop20"
    type: string
    sql: ${TABLE}.ImplantsPlacedTop20 ;;
    hidden: yes
    label: "Implantsplacedtop20 (Raw)"
  }

  dimension: hygieneshowstop20_raw {
    description: "Raw field for HygieneShowsTop20"
    type: string
    sql: ${TABLE}.HygieneShowsTop20 ;;
    hidden: yes
    label: "Hygieneshowstop20 (Raw)"
  }

  dimension: orthopresentationratetop20_raw {
    description: "Raw field for OrthoPresentationRatetop20"
    type: string
    sql: ${TABLE}.OrthoPresentationRatetop20 ;;
    hidden: yes
    label: "Orthopresentationratetop20 (Raw)"
  }

  dimension: orthoacceptanceratetop20_raw {
    description: "Raw field for OrthoAcceptanceRatetop20"
    type: string
    sql: ${TABLE}.OrthoAcceptanceRatetop20 ;;
    hidden: yes
    label: "Orthoacceptanceratetop20 (Raw)"
  }

  dimension: endoprodperdaytop20_raw {
    description: "Raw field for EndoProdPerDaytop20"
    type: string
    sql: ${TABLE}.EndoProdPerDaytop20 ;;
    hidden: yes
    label: "Endoprodperdaytop20 (Raw)"
  }

  dimension: osprodperdaytop20_raw {
    description: "Raw field for OSProdPerDaytop20"
    type: string
    sql: ${TABLE}.OSProdPerDaytop20 ;;
    hidden: yes
    label: "Osprodperdaytop20 (Raw)"
  }

  dimension: dentureopptop20_raw {
    description: "Raw field for DentureOpptop20"
    type: string
    sql: ${TABLE}.DentureOpptop20 ;;
    hidden: yes
    label: "Dentureopptop20 (Raw)"
  }

  dimension: waxtryperpatienttop20_raw {
    description: "Raw field for WaxTryperPatienttop20"
    type: string
    sql: ${TABLE}.WaxTryperPatienttop20 ;;
    hidden: yes
    label: "Waxtryperpatienttop20 (Raw)"
  }

  dimension: denturesoldtop20_raw {
    description: "Raw field for DentureSoldtop20"
    type: string
    sql: ${TABLE}.DentureSoldtop20 ;;
    hidden: yes
    label: "Denturesoldtop20 (Raw)"
  }

  dimension: cbucfpercenttop20_raw {
    description: "Raw field for CBUCFPercenttop20"
    type: string
    sql: ${TABLE}.CBUCFPercenttop20 ;;
    hidden: yes
    label: "Cbucfpercenttop20 (Raw)"
  }

  dimension: cbrevperunittop20_raw {
    description: "Raw field for CBRevPerUnittop20"
    type: string
    sql: ${TABLE}.CBRevPerUnittop20 ;;
    hidden: yes
    label: "Cbrevperunittop20 (Raw)"
  }

  dimension: cblabpercentpercenttop20_raw {
    description: "Raw field for CBLabPercentPercenttop20"
    type: string
    sql: ${TABLE}.CBLabPercentPercenttop20 ;;
    hidden: yes
    label: "Cblabpercentpercenttop20 (Raw)"
  }

  dimension: npperdaybottom20_raw {
    description: "Raw field for NPPerDayBottom20"
    type: string
    sql: ${TABLE}.NPPerDayBottom20 ;;
    hidden: yes
    label: "Npperdaybottom20 (Raw)"
  }

  dimension: epperdaybottom20_raw {
    description: "Raw field for EPPerDayBottom20"
    type: string
    sql: ${TABLE}.EPPerDayBottom20 ;;
    hidden: yes
    label: "Epperdaybottom20 (Raw)"
  }

  dimension: avgdaysuntilfirstvisitpercentbottom20_raw {
    description: "Raw field for AvgDaysUntilFirstVisitPercentBottom20"
    type: string
    sql: ${TABLE}.AvgDaysUntilFirstVisitPercentBottom20 ;;
    hidden: yes
    label: "Avgdaysuntilfirstvisitpercentbottom20 (Raw)"
  }

  dimension: npshowratebottom20_raw {
    description: "Raw field for NPShowRateBottom20"
    type: string
    sql: ${TABLE}.NPShowRateBottom20 ;;
    hidden: yes
    label: "Npshowratebottom20 (Raw)"
  }

  dimension: epshowratebottom20_raw {
    description: "Raw field for EPShowRateBottom20"
    type: string
    sql: ${TABLE}.EPShowRateBottom20 ;;
    hidden: yes
    label: "Epshowratebottom20 (Raw)"
  }

  dimension: npyestodaybottom20_raw {
    description: "Raw field for NPYesTodayBottom20"
    type: string
    sql: ${TABLE}.NPYesTodayBottom20 ;;
    hidden: yes
    label: "Npyestodaybottom20 (Raw)"
  }

  dimension: epyestodaybottom20_raw {
    description: "Raw field for EPYesTodayBottom20"
    type: string
    sql: ${TABLE}.EPYesTodayBottom20 ;;
    hidden: yes
    label: "Epyestodaybottom20 (Raw)"
  }

  dimension: creditapplicationsbottom20_raw {
    description: "Raw field for CreditApplicationsBottom20"
    type: string
    sql: ${TABLE}.CreditApplicationsBottom20 ;;
    hidden: yes
    label: "Creditapplicationsbottom20 (Raw)"
  }

  dimension: newpatientotcbottom20_raw {
    description: "Raw field for NewPatientOtcBottom20"
    type: string
    sql: ${TABLE}.NewPatientOtcBottom20 ;;
    hidden: yes
    label: "Newpatientotcbottom20 (Raw)"
  }

  dimension: nptxpresentedpernpbottom20_raw {
    description: "Raw field for NPTxPresentedPerNPBottom20"
    type: string
    sql: ${TABLE}.NPTxPresentedPerNPBottom20 ;;
    hidden: yes
    label: "Nptxpresentedpernpbottom20 (Raw)"
  }

  dimension: nptxacceptedpernpbottom20_raw {
    description: "Raw field for NPTxAcceptedPerNPBottom20"
    type: string
    sql: ${TABLE}.NPTxAcceptedPerNPBottom20 ;;
    hidden: yes
    label: "Nptxacceptedpernpbottom20 (Raw)"
  }

  dimension: eptxpresentedperepbottom20_raw {
    description: "Raw field for EPTxPresentedPerEPBottom20"
    type: string
    sql: ${TABLE}.EPTxPresentedPerEPBottom20 ;;
    hidden: yes
    label: "Eptxpresentedperepbottom20 (Raw)"
  }

  dimension: eptxacceptedperepbottom20_raw {
    description: "Raw field for EPTxAcceptedPerEPBottom20"
    type: string
    sql: ${TABLE}.EPTxAcceptedPerEPBottom20 ;;
    hidden: yes
    label: "Eptxacceptedperepbottom20 (Raw)"
  }

  dimension: oralhealthscanpercentbottom20_raw {
    description: "Raw field for OralHealthScanPercentBottom20"
    type: string
    sql: ${TABLE}.OralHealthScanPercentBottom20 ;;
    hidden: yes
    label: "Oralhealthscanpercentbottom20 (Raw)"
  }

  dimension: tapasalesbottom20_raw {
    description: "Raw field for TAPASalesBottom20"
    type: string
    sql: ${TABLE}.TAPASalesBottom20 ;;
    hidden: yes
    label: "Tapasalesbottom20 (Raw)"
  }

  dimension: doctorftebottom20_raw {
    description: "Raw field for DoctorFTEBottom20"
    type: string
    sql: ${TABLE}.DoctorFTEBottom20 ;;
    hidden: yes
    label: "Doctorftebottom20 (Raw)"
  }

  dimension: mcdproductionbottom20_raw {
    description: "Raw field for MCDProductionBottom20"
    type: string
    sql: ${TABLE}.MCDProductionBottom20 ;;
    hidden: yes
    label: "Mcdproductionbottom20 (Raw)"
  }

  dimension: associateproductionbottom20_raw {
    description: "Raw field for AssociateProductionBottom20"
    type: string
    sql: ${TABLE}.AssociateProductionBottom20 ;;
    hidden: yes
    label: "Associateproductionbottom20 (Raw)"
  }

  dimension: hygienistdailyproductionbottom20_raw {
    description: "Raw field for HygienistDailyProductionBottom20"
    type: string
    sql: ${TABLE}.HygienistDailyProductionBottom20 ;;
    hidden: yes
    label: "Hygienistdailyproductionbottom20 (Raw)"
  }

  dimension: orthostartsbottom20_raw {
    description: "Raw field for OrthoStartsBottom20"
    type: string
    sql: ${TABLE}.OrthoStartsBottom20 ;;
    hidden: yes
    label: "Orthostartsbottom20 (Raw)"
  }

  dimension: percentofschedulebottom20_raw {
    description: "Raw field for PercentOfScheduleBottom20"
    type: string
    sql: ${TABLE}.PercentOfScheduleBottom20 ;;
    hidden: yes
    label: "Percentofschedulebottom20 (Raw)"
  }

  dimension: npsamedaystartsbottom20_raw {
    description: "Raw field for NPSameDayStartsBottom20"
    type: string
    sql: ${TABLE}.NPSameDayStartsBottom20 ;;
    hidden: yes
    label: "Npsamedaystartsbottom20 (Raw)"
  }

  dimension: newpatienttxplancompletionratebottom20_raw {
    description: "Raw field for NewPatientTxPlanCompletionRateBottom20"
    type: string
    sql: ${TABLE}.NewPatientTxPlanCompletionRateBottom20 ;;
    hidden: yes
    label: "Newpatienttxplancompletionratebottom20 (Raw)"
  }

  dimension: denturesbottom20_raw {
    description: "Raw field for DenturesBottom20"
    type: string
    sql: ${TABLE}.DenturesBottom20 ;;
    hidden: yes
    label: "Denturesbottom20 (Raw)"
  }

  dimension: dentistrybottom20_raw {
    description: "Raw field for DentistryBottom20"
    type: string
    sql: ${TABLE}.DentistryBottom20 ;;
    hidden: yes
    label: "Dentistrybottom20 (Raw)"
  }

  dimension: hygienebottom20_raw {
    description: "Raw field for HygieneBottom20"
    type: string
    sql: ${TABLE}.HygieneBottom20 ;;
    hidden: yes
    label: "Hygienebottom20 (Raw)"
  }

  dimension: specialtybottom20_raw {
    description: "Raw field for SpecialtyBottom20"
    type: string
    sql: ${TABLE}.SpecialtyBottom20 ;;
    hidden: yes
    label: "Specialtybottom20 (Raw)"
  }

  dimension: orthodonticsbottom20_raw {
    description: "Raw field for OrthodonticsBottom20"
    type: string
    sql: ${TABLE}.OrthodonticsBottom20 ;;
    hidden: yes
    label: "Orthodonticsbottom20 (Raw)"
  }

  dimension: crownbridgebottom20_raw {
    description: "Raw field for CrownBridgeBottom20"
    type: string
    sql: ${TABLE}.CrownBridgeBottom20 ;;
    hidden: yes
    label: "Crownbridgebottom20 (Raw)"
  }

  dimension: implantsbottom20_raw {
    description: "Raw field for ImplantsBottom20"
    type: string
    sql: ${TABLE}.ImplantsBottom20 ;;
    hidden: yes
    label: "Implantsbottom20 (Raw)"
  }

  dimension: productionbottom20_raw {
    description: "Raw field for ProductionBottom20"
    type: string
    sql: ${TABLE}.ProductionBottom20 ;;
    hidden: yes
    label: "Productionbottom20 (Raw)"
  }

  dimension: patientsatisfactionbottom20_raw {
    description: "Raw field for PatientSatisfactionBottom20"
    type: string
    sql: ${TABLE}.PatientSatisfactionBottom20 ;;
    hidden: yes
    label: "Patientsatisfactionbottom20 (Raw)"
  }

  dimension: onlinereviewratingsbottom20_raw {
    description: "Raw field for OnlineReviewRatingsBottom20"
    type: string
    sql: ${TABLE}.OnlineReviewRatingsBottom20 ;;
    hidden: yes
    label: "Onlinereviewratingsbottom20 (Raw)"
  }

  dimension: netpromotersconumberlbottom20_raw {
    description: "Raw field for NetPromoterSconumberLBottom20"
    type: string
    sql: ${TABLE}.NetPromoterSconumberLBottom20 ;;
    hidden: yes
    label: "Netpromotersconumberlbottom20 (Raw)"
  }

  dimension: netpromoterscorebottom20_raw {
    description: "Raw field for NetPromoterScoreBottom20"
    type: string
    sql: ${TABLE}.NetPromoterScoreBottom20 ;;
    hidden: yes
    label: "Netpromoterscorebottom20 (Raw)"
  }

  dimension: percentofpatientleavingwithapptbottom20_raw {
    description: "Raw field for PercentofPatientLeavingwithApptBottom20"
    type: string
    sql: ${TABLE}.PercentofPatientLeavingwithApptBottom20 ;;
    hidden: yes
    label: "Percentofpatientleavingwithapptbottom20 (Raw)"
  }

  dimension: comptoproblemfocusedexamstbottom20_raw {
    description: "Raw field for ComptoProblemFocusedExamstBottom20"
    type: string
    sql: ${TABLE}.ComptoProblemFocusedExamstBottom20 ;;
    hidden: yes
    label: "Comptoproblemfocusedexamstbottom20 (Raw)"
  }

  dimension: npapptsperdaypercentbottom20_raw {
    description: "Raw field for NPApptsPerDayPercentBottom20"
    type: string
    sql: ${TABLE}.NPApptsPerDayPercentBottom20 ;;
    hidden: yes
    label: "Npapptsperdaypercentbottom20 (Raw)"
  }

  dimension: daystoinsertbottom20_raw {
    description: "Raw field for DaystoinsertBottom20"
    type: string
    sql: ${TABLE}.DaystoinsertBottom20 ;;
    hidden: yes
    label: "Daystoinsertbottom20 (Raw)"
  }

  dimension: daystoimpressionbottom20_raw {
    description: "Raw field for DaysToImpressionBottom20"
    type: string
    sql: ${TABLE}.DaysToImpressionBottom20 ;;
    hidden: yes
    label: "Daystoimpressionbottom20 (Raw)"
  }

  dimension: denturesamedaybottom20_raw {
    description: "Raw field for DentureSameDayBottom20"
    type: string
    sql: ${TABLE}.DentureSameDayBottom20 ;;
    hidden: yes
    label: "Denturesamedaybottom20 (Raw)"
  }

  dimension: denturerefundbottom20_raw {
    description: "Raw field for DentureRefundBottom20"
    type: string
    sql: ${TABLE}.DentureRefundBottom20 ;;
    hidden: yes
    label: "Denturerefundbottom20 (Raw)"
  }

  dimension: fulldenturebottom20_raw {
    description: "Raw field for FullDentureBottom20"
    type: string
    sql: ${TABLE}.FullDentureBottom20 ;;
    hidden: yes
    label: "Fulldenturebottom20 (Raw)"
  }

  dimension: partialdenturebottom20_raw {
    description: "Raw field for PartialDentureBottom20"
    type: string
    sql: ${TABLE}.PartialDentureBottom20 ;;
    hidden: yes
    label: "Partialdenturebottom20 (Raw)"
  }

  dimension: denturecompletionbottom20_raw {
    description: "Raw field for DentureCompletionBottom20"
    type: string
    sql: ${TABLE}.DentureCompletionBottom20 ;;
    hidden: yes
    label: "Denturecompletionbottom20 (Raw)"
  }

  dimension: cbunitsbottom20_raw {
    description: "Raw field for CBUnitsBottom20"
    type: string
    sql: ${TABLE}.CBUnitsBottom20 ;;
    hidden: yes
    label: "Cbunitsbottom20 (Raw)"
  }

  dimension: crowntomultibottom20_raw {
    description: "Raw field for CrownToMultiBottom20"
    type: string
    sql: ${TABLE}.CrownToMultiBottom20 ;;
    hidden: yes
    label: "Crowntomultibottom20 (Raw)"
  }

  dimension: daystosrp_daysbottom20_raw {
    description: "Raw field for DaysToSRP_DaysBottom20"
    type: string
    sql: ${TABLE}.DaysToSRP_DaysBottom20 ;;
    hidden: yes
    label: "Daystosrp Daysbottom20 (Raw)"
  }

  dimension: periotoprophybottom20_raw {
    description: "Raw field for PerioToProphyBottom20"
    type: string
    sql: ${TABLE}.PerioToProphyBottom20 ;;
    hidden: yes
    label: "Periotoprophybottom20 (Raw)"
  }

  dimension: perioacceptedratebottom20_raw {
    description: "Raw field for PerioAcceptedRateBottom20"
    type: string
    sql: ${TABLE}.PerioAcceptedRateBottom20 ;;
    hidden: yes
    label: "Perioacceptedratebottom20 (Raw)"
  }

  dimension: laatoperiopatientsratiobottom20_raw {
    description: "Raw field for LAAtoPerioPatientsRatioBottom20"
    type: string
    sql: ${TABLE}.LAAtoPerioPatientsRatioBottom20 ;;
    hidden: yes
    label: "Laatoperiopatientsratiobottom20 (Raw)"
  }

  dimension: implantsoppbottom20_raw {
    description: "Raw field for ImplantsOppBottom20"
    type: string
    sql: ${TABLE}.ImplantsOppBottom20 ;;
    hidden: yes
    label: "Implantsoppbottom20 (Raw)"
  }

  dimension: implantsplacedbottom20_raw {
    description: "Raw field for ImplantsPlacedBottom20"
    type: string
    sql: ${TABLE}.ImplantsPlacedBottom20 ;;
    hidden: yes
    label: "Implantsplacedbottom20 (Raw)"
  }

  dimension: hygieneshowsbottom20_raw {
    description: "Raw field for HygieneShowsBottom20"
    type: string
    sql: ${TABLE}.HygieneShowsBottom20 ;;
    hidden: yes
    label: "Hygieneshowsbottom20 (Raw)"
  }

  dimension: orthopresentationratebottom20_raw {
    description: "Raw field for OrthoPresentationRateBottom20"
    type: string
    sql: ${TABLE}.OrthoPresentationRateBottom20 ;;
    hidden: yes
    label: "Orthopresentationratebottom20 (Raw)"
  }

  dimension: orthoacceptanceratebottom20_raw {
    description: "Raw field for OrthoAcceptanceRateBottom20"
    type: string
    sql: ${TABLE}.OrthoAcceptanceRateBottom20 ;;
    hidden: yes
    label: "Orthoacceptanceratebottom20 (Raw)"
  }

  dimension: endoprodperdaybottom20_raw {
    description: "Raw field for EndoProdPerDayBottom20"
    type: string
    sql: ${TABLE}.EndoProdPerDayBottom20 ;;
    hidden: yes
    label: "Endoprodperdaybottom20 (Raw)"
  }

  dimension: osprodperdaybottom20_raw {
    description: "Raw field for OSProdPerDayBottom20"
    type: string
    sql: ${TABLE}.OSProdPerDayBottom20 ;;
    hidden: yes
    label: "Osprodperdaybottom20 (Raw)"
  }

  dimension: dentureoppbottom20_raw {
    description: "Raw field for DentureOppBottom20"
    type: string
    sql: ${TABLE}.DentureOppBottom20 ;;
    hidden: yes
    label: "Dentureoppbottom20 (Raw)"
  }

  dimension: denturesoldbottom20_raw {
    description: "Raw field for DentureSoldBottom20"
    type: string
    sql: ${TABLE}.DentureSoldBottom20 ;;
    hidden: yes
    label: "Denturesoldbottom20 (Raw)"
  }

  dimension: cbucfpercentbottom20_raw {
    description: "Raw field for CBUCFPercentBottom20"
    type: string
    sql: ${TABLE}.CBUCFPercentBottom20 ;;
    hidden: yes
    label: "Cbucfpercentbottom20 (Raw)"
  }

  dimension: cblabpercentbottom20_raw {
    description: "Raw field for CBLabPercentBottom20"
    type: string
    sql: ${TABLE}.CBLabPercentBottom20 ;;
    hidden: yes
    label: "Cblabpercentbottom20 (Raw)"
  }

  dimension: cbrevperunitbottom20_raw {
    description: "Raw field for CBRevPerUnitBottom20"
    type: string
    sql: ${TABLE}.CBRevPerUnitBottom20 ;;
    hidden: yes
    label: "Cbrevperunitbottom20 (Raw)"
  }

  dimension: name {
    description: "Original name: [Name]"
    type: string
    sql: ${TABLE}.Name ;;
    label: "Name"
  }

  dimension: aggregation {
    description: "Original name: [AGGREGATION]"
    type: string
    sql: ${TABLE}.AGGREGATION ;;
    label: "AGGREGATION"
  }

  dimension: npperday_rank_raw {
    description: "Raw field for NPPerDay_Rank"
    type: string
    sql: ${TABLE}.NPPerDay_Rank ;;
    hidden: yes
    label: "Npperday Rank (Raw)"
  }

  dimension: epperday_rank_raw {
    description: "Raw field for EPPerDay_Rank"
    type: string
    sql: ${TABLE}.EPPerDay_Rank ;;
    hidden: yes
    label: "Epperday Rank (Raw)"
  }

  dimension: avgdaysuntilfirstvisit_rank_raw {
    description: "Raw field for AvgDaysUntilFirstVisit_Rank"
    type: string
    sql: ${TABLE}.AvgDaysUntilFirstVisit_Rank ;;
    hidden: yes
    label: "Avgdaysuntilfirstvisit Rank (Raw)"
  }

  dimension: npshowrate_rank_raw {
    description: "Raw field for NPShowRate_Rank"
    type: string
    sql: ${TABLE}.NPShowRate_Rank ;;
    hidden: yes
    label: "Npshowrate Rank (Raw)"
  }

  dimension: epshowrate_rank_raw {
    description: "Raw field for EPShowRate_Rank"
    type: string
    sql: ${TABLE}.EPShowRate_Rank ;;
    hidden: yes
    label: "Epshowrate Rank (Raw)"
  }

  dimension: npyestoday_rank_raw {
    description: "Raw field for NPYesToday_Rank"
    type: string
    sql: ${TABLE}.NPYesToday_Rank ;;
    hidden: yes
    label: "Npyestoday Rank (Raw)"
  }

  dimension: epyestoday_rank_raw {
    description: "Raw field for EPYesToday_Rank"
    type: string
    sql: ${TABLE}.EPYesToday_Rank ;;
    hidden: yes
    label: "Epyestoday Rank (Raw)"
  }

  dimension: percentcreditapplications_rank_raw {
    description: "Raw field for PercentCreditApplications_Rank"
    type: string
    sql: ${TABLE}.PercentCreditApplications_Rank ;;
    hidden: yes
    label: "Percentcreditapplications Rank (Raw)"
  }

  dimension: newpatientotc_rank_raw {
    description: "Raw field for NewPatientOtc_Rank"
    type: string
    sql: ${TABLE}.NewPatientOtc_Rank ;;
    hidden: yes
    label: "Newpatientotc Rank (Raw)"
  }

  dimension: nptxpresentedpernp_rank_raw {
    description: "Raw field for NPTxPresentedPerNP_Rank"
    type: string
    sql: ${TABLE}.NPTxPresentedPerNP_Rank ;;
    hidden: yes
    label: "Nptxpresentedpernp Rank (Raw)"
  }

  dimension: nptxacceptedpernp_rank_raw {
    description: "Raw field for NPTxAcceptedPerNP_Rank"
    type: string
    sql: ${TABLE}.NPTxAcceptedPerNP_Rank ;;
    hidden: yes
    label: "Nptxacceptedpernp Rank (Raw)"
  }

  dimension: eptxpresentedperep_rank_raw {
    description: "Raw field for EPTxPresentedPerEP_Rank"
    type: string
    sql: ${TABLE}.EPTxPresentedPerEP_Rank ;;
    hidden: yes
    label: "Eptxpresentedperep Rank (Raw)"
  }

  dimension: eptxacceptedperep_rank_raw {
    description: "Raw field for EPTxAcceptedPerEP_Rank"
    type: string
    sql: ${TABLE}.EPTxAcceptedPerEP_Rank ;;
    hidden: yes
    label: "Eptxacceptedperep Rank (Raw)"
  }

  dimension: oralhealthscan_rank_raw {
    description: "Raw field for OralHealthScan_Rank"
    type: string
    sql: ${TABLE}.OralHealthScan_Rank ;;
    hidden: yes
    label: "Oralhealthscan Rank (Raw)"
  }

  dimension: tapasales_rank_raw {
    description: "Raw field for TAPASales_Rank"
    type: string
    sql: ${TABLE}.TAPASales_Rank ;;
    hidden: yes
    label: "Tapasales Rank (Raw)"
  }

  dimension: doctorfteperoffice_rank_raw {
    description: "Raw field for DoctorFTEPerOffice_Rank"
    type: string
    sql: ${TABLE}.DoctorFTEPerOffice_Rank ;;
    hidden: yes
    label: "Doctorfteperoffice Rank (Raw)"
  }

  dimension: mcdproduction_rank_raw {
    description: "Raw field for MCDProduction_Rank"
    type: string
    sql: ${TABLE}.MCDProduction_Rank ;;
    hidden: yes
    label: "Mcdproduction Rank (Raw)"
  }

  dimension: associateproductionperday_rank_raw {
    description: "Raw field for AssociateProductionPerDay_Rank"
    type: string
    sql: ${TABLE}.AssociateProductionPerDay_Rank ;;
    hidden: yes
    label: "Associateproductionperday Rank (Raw)"
  }

  dimension: hygienerevenueperdayproduction_rank_raw {
    description: "Raw field for HygieneRevenueperDayProduction_Rank"
    type: string
    sql: ${TABLE}.HygieneRevenueperDayProduction_Rank ;;
    hidden: yes
    label: "Hygienerevenueperdayproduction Rank (Raw)"
  }

  dimension: orthostartsperofficepermonth_rank_raw {
    description: "Raw field for OrthoStartsPerOfficePerMonth_Rank"
    type: string
    sql: ${TABLE}.OrthoStartsPerOfficePerMonth_Rank ;;
    hidden: yes
    label: "Orthostartsperofficepermonth Rank (Raw)"
  }

  dimension: percentofschedule_rank_raw {
    description: "Raw field for PercentOfSchedule_Rank"
    type: string
    sql: ${TABLE}.PercentOfSchedule_Rank ;;
    hidden: yes
    label: "Percentofschedule Rank (Raw)"
  }

  dimension: npsamedaystarts_rank_raw {
    description: "Raw field for NPSameDayStarts_Rank"
    type: string
    sql: ${TABLE}.NPSameDayStarts_Rank ;;
    hidden: yes
    label: "Npsamedaystarts Rank (Raw)"
  }

  dimension: newpatienttxplancompletionrate_rank_raw {
    description: "Raw field for NewPatientTxPlanCompletionRate_Rank"
    type: string
    sql: ${TABLE}.NewPatientTxPlanCompletionRate_Rank ;;
    hidden: yes
    label: "Newpatienttxplancompletionrate Rank (Raw)"
  }

  dimension: dentures_rank_raw {
    description: "Raw field for Dentures_Rank"
    type: string
    sql: ${TABLE}.Dentures_Rank ;;
    hidden: yes
    label: "Dentures Rank (Raw)"
  }

  dimension: hygiene_rank_raw {
    description: "Raw field for Hygiene_Rank"
    type: string
    sql: ${TABLE}.Hygiene_Rank ;;
    hidden: yes
    label: "Hygiene Rank (Raw)"
  }

  dimension: specialty_rank_raw {
    description: "Raw field for Specialty_Rank"
    type: string
    sql: ${TABLE}.Specialty_Rank ;;
    hidden: yes
    label: "Specialty Rank (Raw)"
  }

  dimension: orthodontics_rank_raw {
    description: "Raw field for Orthodontics_Rank"
    type: string
    sql: ${TABLE}.Orthodontics_Rank ;;
    hidden: yes
    label: "Orthodontics Rank (Raw)"
  }

  dimension: crownbridge_rank_raw {
    description: "Raw field for CrownBridge_Rank"
    type: string
    sql: ${TABLE}.CrownBridge_Rank ;;
    hidden: yes
    label: "Crownbridge Rank (Raw)"
  }

  dimension: implants_rank_raw {
    description: "Raw field for Implants_Rank"
    type: string
    sql: ${TABLE}.Implants_Rank ;;
    hidden: yes
    label: "Implants Rank (Raw)"
  }

  dimension: production_rank_raw {
    description: "Raw field for Production_Rank"
    type: string
    sql: ${TABLE}.Production_Rank ;;
    hidden: yes
    label: "Production Rank (Raw)"
  }

  dimension: patientsatisfaction_rank_raw {
    description: "Raw field for PatientSatisfaction_Rank"
    type: string
    sql: ${TABLE}.PatientSatisfaction_Rank ;;
    hidden: yes
    label: "Patientsatisfaction Rank (Raw)"
  }

  dimension: onlinereviewratings_rank_raw {
    description: "Raw field for OnlineReviewRatings_Rank"
    type: string
    sql: ${TABLE}.OnlineReviewRatings_Rank ;;
    hidden: yes
    label: "Onlinereviewratings Rank (Raw)"
  }

  dimension: addedtoschedule_rank_raw {
    description: "Raw field for addedtoschedule_Rank"
    type: string
    sql: ${TABLE}.addedtoschedule_Rank ;;
    hidden: yes
    label: "Addedtoschedule Rank (Raw)"
  }

  dimension: estimatedproductioncurrentmonth_rank_raw {
    description: "Raw field for EstimatedProductionCurrentMonth_Rank"
    type: string
    sql: ${TABLE}.EstimatedProductionCurrentMonth_Rank ;;
    hidden: yes
    label: "Estimatedproductioncurrentmonth Rank (Raw)"
  }

  dimension: estimatedproductionbudgetvariancecurrentmonth_rank_raw {
    description: "Raw field for EstimatedProductionBudgetVarianceCurrentMonth_Rank"
    type: string
    sql: ${TABLE}.EstimatedProductionBudgetVarianceCurrentMonth_Rank ;;
    hidden: yes
    label: "Estimatedproductionbudgetvariancecurrentmonth Rank (Raw)"
  }

  dimension: totaldeposit_rank_raw {
    description: "Raw field for TotalDeposit_Rank"
    type: string
    sql: ${TABLE}.TotalDeposit_Rank ;;
    hidden: yes
    label: "Totaldeposit Rank (Raw)"
  }

  dimension: percentofbalancecollected_rank_raw {
    description: "Raw field for PercentofBalanceCollected_Rank"
    type: string
    sql: ${TABLE}.PercentofBalanceCollected_Rank ;;
    hidden: yes
    label: "Percentofbalancecollected Rank (Raw)"
  }

  dimension: netpromotersconumberl_rank_raw {
    description: "Raw field for NetPromoterSconumberL_Rank"
    type: string
    sql: ${TABLE}.NetPromoterSconumberL_Rank ;;
    hidden: yes
    label: "Netpromotersconumberl Rank (Raw)"
  }

  dimension: netpromoterscore_rank_raw {
    description: "Raw field for NetPromoterScore_Rank"
    type: string
    sql: ${TABLE}.NetPromoterScore_Rank ;;
    hidden: yes
    label: "Netpromoterscore Rank (Raw)"
  }

  dimension: dentistry_rank_raw {
    description: "Raw field for Dentistry_Rank"
    type: string
    sql: ${TABLE}.Dentistry_Rank ;;
    hidden: yes
    label: "Dentistry Rank (Raw)"
  }

  dimension: percentofpatientleavingwithappt_rank_raw {
    description: "Raw field for PercentofPatientLeavingwithAppt_Rank"
    type: string
    sql: ${TABLE}.PercentofPatientLeavingwithAppt_Rank ;;
    hidden: yes
    label: "Percentofpatientleavingwithappt Rank (Raw)"
  }

  dimension: comptoproblemfocusedexams_rank_raw {
    description: "Raw field for ComptoProblemFocusedExams_Rank"
    type: string
    sql: ${TABLE}.ComptoProblemFocusedExams_Rank ;;
    hidden: yes
    label: "Comptoproblemfocusedexams Rank (Raw)"
  }

  dimension: npapptsperday_rank_raw {
    description: "Raw field for NPApptsPerDay_Rank"
    type: string
    sql: ${TABLE}.NPApptsPerDay_Rank ;;
    hidden: yes
    label: "Npapptsperday Rank (Raw)"
  }

  dimension: inefficiency_rank_raw {
    description: "Raw field for Inefficiency_Rank"
    type: string
    sql: ${TABLE}.Inefficiency_Rank ;;
    hidden: yes
    label: "Inefficiency Rank (Raw)"
  }

  dimension: npblock_rank_raw {
    description: "Raw field for NPBlock_Rank"
    type: string
    sql: ${TABLE}.NPBlock_Rank ;;
    hidden: yes
    label: "Npblock Rank (Raw)"
  }

  dimension: pcblock_rank_raw {
    description: "Raw field for PCBlock_Rank"
    type: string
    sql: ${TABLE}.PCBlock_Rank ;;
    hidden: yes
    label: "Pcblock Rank (Raw)"
  }

  dimension: apptlength_adult_rank_raw {
    description: "Raw field for ApptLength_Adult_Rank"
    type: string
    sql: ${TABLE}.ApptLength_Adult_Rank ;;
    hidden: yes
    label: "Apptlength Adult Rank (Raw)"
  }

  dimension: daystoinsert_rank_raw {
    description: "Raw field for Daystoinsert_Rank"
    type: string
    sql: ${TABLE}.Daystoinsert_Rank ;;
    hidden: yes
    label: "Daystoinsert Rank (Raw)"
  }

  dimension: daystoimpression_rank_raw {
    description: "Raw field for DaysToImpression_Rank"
    type: string
    sql: ${TABLE}.DaysToImpression_Rank ;;
    hidden: yes
    label: "Daystoimpression Rank (Raw)"
  }

  dimension: denturesameday_rank_raw {
    description: "Raw field for DentureSameDay_Rank"
    type: string
    sql: ${TABLE}.DentureSameDay_Rank ;;
    hidden: yes
    label: "Denturesameday Rank (Raw)"
  }

  dimension: denturerefund_rank_raw {
    description: "Raw field for DentureRefund_Rank"
    type: string
    sql: ${TABLE}.DentureRefund_Rank ;;
    hidden: yes
    label: "Denturerefund Rank (Raw)"
  }

  dimension: fulldenture_rank_raw {
    description: "Raw field for FullDenture_Rank"
    type: string
    sql: ${TABLE}.FullDenture_Rank ;;
    hidden: yes
    label: "Fulldenture Rank (Raw)"
  }

  dimension: partialdenture_rank_raw {
    description: "Raw field for PartialDenture_Rank"
    type: string
    sql: ${TABLE}.PartialDenture_Rank ;;
    hidden: yes
    label: "Partialdenture Rank (Raw)"
  }

  dimension: denturecompletion_rank_raw {
    description: "Raw field for DentureCompletion_Rank"
    type: string
    sql: ${TABLE}.DentureCompletion_Rank ;;
    hidden: yes
    label: "Denturecompletion Rank (Raw)"
  }

  dimension: cbunits_rank_raw {
    description: "Raw field for CBUnits_Rank"
    type: string
    sql: ${TABLE}.CBUnits_Rank ;;
    hidden: yes
    label: "Cbunits Rank (Raw)"
  }

  dimension: crowntomulti_rank_raw {
    description: "Raw field for CrownToMulti_Rank"
    type: string
    sql: ${TABLE}.CrownToMulti_Rank ;;
    hidden: yes
    label: "Crowntomulti Rank (Raw)"
  }

  dimension: daystosrp_rank_raw {
    description: "Raw field for DaysToSRP_Rank"
    type: string
    sql: ${TABLE}.DaysToSRP_Rank ;;
    hidden: yes
    label: "Daystosrp Rank (Raw)"
  }

  dimension: periotoprophy_rank_raw {
    description: "Raw field for PerioToProphy_Rank"
    type: string
    sql: ${TABLE}.PerioToProphy_Rank ;;
    hidden: yes
    label: "Periotoprophy Rank (Raw)"
  }

  dimension: perioacceptedrate_rank_raw {
    description: "Raw field for PerioAcceptedRate_Rank"
    type: string
    sql: ${TABLE}.PerioAcceptedRate_Rank ;;
    hidden: yes
    label: "Perioacceptedrate Rank (Raw)"
  }

  dimension: laatoperiopatientsratio_rank_raw {
    description: "Raw field for LAAtoPerioPatientsRatio_Rank"
    type: string
    sql: ${TABLE}.LAAtoPerioPatientsRatio_Rank ;;
    hidden: yes
    label: "Laatoperiopatientsratio Rank (Raw)"
  }

  dimension: implantsopp_rank_raw {
    description: "Raw field for ImplantsOpp_Rank"
    type: string
    sql: ${TABLE}.ImplantsOpp_Rank ;;
    hidden: yes
    label: "Implantsopp Rank (Raw)"
  }

  dimension: implantsplaced_rank_raw {
    description: "Raw field for ImplantsPlaced_Rank"
    type: string
    sql: ${TABLE}.ImplantsPlaced_Rank ;;
    hidden: yes
    label: "Implantsplaced Rank (Raw)"
  }

  dimension: hygieneshows_rank_raw {
    description: "Raw field for HygieneShows_Rank"
    type: string
    sql: ${TABLE}.HygieneShows_Rank ;;
    hidden: yes
    label: "Hygieneshows Rank (Raw)"
  }

  dimension: orthopresentationrate_rank_raw {
    description: "Raw field for OrthoPresentationRate_Rank"
    type: string
    sql: ${TABLE}.OrthoPresentationRate_Rank ;;
    hidden: yes
    label: "Orthopresentationrate Rank (Raw)"
  }

  dimension: orthoacceptancerate_rank_raw {
    description: "Raw field for OrthoAcceptanceRate_Rank"
    type: string
    sql: ${TABLE}.OrthoAcceptanceRate_Rank ;;
    hidden: yes
    label: "Orthoacceptancerate Rank (Raw)"
  }

  dimension: endoprodperday_rank_raw {
    description: "Raw field for EndoProdPerDay_Rank"
    type: string
    sql: ${TABLE}.EndoProdPerDay_Rank ;;
    hidden: yes
    label: "Endoprodperday Rank (Raw)"
  }

  dimension: osprodperday_rank_raw {
    description: "Raw field for OSProdPerDay_Rank"
    type: string
    sql: ${TABLE}.OSProdPerDay_Rank ;;
    hidden: yes
    label: "Osprodperday Rank (Raw)"
  }

  dimension: dentureopp_rank_raw {
    description: "Raw field for DentureOpp_Rank"
    type: string
    sql: ${TABLE}.DentureOpp_Rank ;;
    hidden: yes
    label: "Dentureopp Rank (Raw)"
  }

  dimension: cbucfpercent_rank_raw {
    description: "Raw field for CBUCFPercent_Rank"
    type: string
    sql: ${TABLE}.CBUCFPercent_Rank ;;
    hidden: yes
    label: "Cbucfpercent Rank (Raw)"
  }

  dimension: cblabpercent_rank_raw {
    description: "Raw field for CBLabPercent_Rank"
    type: string
    sql: ${TABLE}.CBLabPercent_Rank ;;
    hidden: yes
    label: "Cblabpercent Rank (Raw)"
  }

  dimension: cbrevperunit_rank_raw {
    description: "Raw field for CBRevPerUnit_Rank"
    type: string
    sql: ${TABLE}.CBRevPerUnit_Rank ;;
    hidden: yes
    label: "Cbrevperunit Rank (Raw)"
  }

  dimension: waxtryperpatient_rank_raw {
    description: "Raw field for WaxTryperPatient_Rank"
    type: string
    sql: ${TABLE}.WaxTryperPatient_Rank ;;
    hidden: yes
    label: "Waxtryperpatient Rank (Raw)"
  }

  dimension: denturesold_rank_raw {
    description: "Raw field for DentureSold_Rank"
    type: string
    sql: ${TABLE}.DentureSold_Rank ;;
    hidden: yes
    label: "Denturesold Rank (Raw)"
  }

  # Two-step Pattern Dimensions (hidden calculation dimensions)

  dimension: show_rank_calc {
    description: "Row-level calculation for show_rank: IF COUNTD([Facility Code (copy)_1833246535353614354]) = 1 then [Calculation_1990309626125324305] ELSEIF COUNTD([POPOwner]) = 1 then [Calculation_1990309626125324305] ELSEIF COUNTD([DMA]) = 1 then [Calculation_1990309626125324305] ELSEIF COUNTD([RegionDescription]) = 1 then [Calculation_1990309626125324305] ELSEIF COUNTD([Territory]) = 1 then [Calculation_1990309626125324305] ELSEIF COUNTD([DivisionVP]) = 1 then [Calculation_1990309626125324305] ELSE [TRUE (copy)_1990309626125467666] END"
    type: number
    sql: CASE WHEN (COUNT(DISTINCT ${facility_code_name}) = 1) THEN ${true} ELSE CASE WHEN (COUNT(DISTINCT ${TABLE}.`POPOwner`) = 1) THEN ${true} ELSE CASE WHEN (COUNT(DISTINCT ${TABLE}.`DMA`) = 1) THEN ${true} ELSE CASE WHEN (COUNT(DISTINCT ${TABLE}.`RegionDescription`) = 1) THEN ${true} ELSE CASE WHEN (COUNT(DISTINCT ${TABLE}.`Territory`) = 1) THEN ${true} ELSE CASE WHEN (COUNT(DISTINCT ${TABLE}.`DivisionVP`) = 1) THEN ${true} ELSE ${false} END END END END END END ;;
    hidden: yes
    # Original Tableau formula: IF COUNTD([Facility Code (copy)_1833246535353614354]) = 1 then [Calculation_1990309626125324305] ELSEIF COUNTD([POPOwner]) = 1 then [Calculation_1990309626125324305] ELSEIF COUNTD([DMA]) = 1 then [Calculation_1990309626125324305] ELSEIF COUNTD([RegionDescription]) = 1 then [Calculation_1990309626125324305] ELSEIF COUNTD([Territory]) = 1 then [Calculation_1990309626125324305] ELSEIF COUNTD([DivisionVP]) = 1 then [Calculation_1990309626125324305] ELSE [TRUE (copy)_1990309626125467666] END
  }

  dimension: last_calc {
    description: "Row-level calculation for last: if last() <=12 then 'show' else 'hide' END"
    type: number
    sql: CASE WHEN ('MIGRATION_REQUIRED' <= 12) THEN 'show' ELSE 'hide' END ;;
    hidden: yes
    # Original Tableau formula: if last() <=12 then 'show' else 'hide' END
  }

  dimension: nppc_blocked_calc {
    description: "Row-level calculation for nppc_blocked: [PCBlockHours]+ [PCBlockHours]"
    type: number
    sql: (${TABLE}.`PCBlockHours` + ${TABLE}.`PCBlockHours`) ;;
    hidden: yes
    # Original Tableau formula: [PCBlockHours]+ [PCBlockHours]
  }

  dimension: show_title_calc {
    description: "Row-level calculation for show_title: IF [Calculation_119908351402987520] = [Calculation_1990309626125324305] THEN TRUE ELSE FALSE END"
    type: number
    sql: CASE WHEN (${show_rank_calc} = ${true}) THEN TRUE ELSE FALSE END ;;
    hidden: yes
    # Original Tableau formula: IF [Calculation_119908351402987520] = [Calculation_1990309626125324305] THEN TRUE ELSE FALSE END
  }

  dimension: p_show_hide_calc {
    description: "Row-level calculation for p_show_hide: if [Calculation_119908351402987520] = [Calculation_1990309626125324305] then [Calculation_1990309626125324305] ELSE [TRUE (copy)_1990309626125467666] end"
    type: number
    sql: CASE WHEN (${show_rank_calc} = ${true}) THEN ${true} ELSE ${false} END ;;
    hidden: yes
    # Original Tableau formula: if [Calculation_119908351402987520] = [Calculation_1990309626125324305] then [Calculation_1990309626125324305] ELSE [TRUE (copy)_1990309626125467666] end
  }

  dimension: estimatedproductioncurrentmonthrank_calc {
    description: "Row-level calculation for estimatedproductioncurrentmonthrank: IF [Parameters].[Parameter 8] THEN NULL ELSE [EstimatedProductionCurrentMonth_Rank] END"
    type: number
    sql: CASE WHEN {% parameter parameter_8 %} THEN NULL ELSE ${TABLE}.`EstimatedProductionCurrentMonth_Rank` END ;;
    hidden: yes
    # Original Tableau formula: IF [Parameters].[Parameter 8] THEN NULL ELSE [EstimatedProductionCurrentMonth_Rank] END
  }

  dimension: estimatedproductionbudgetvariancecurrentmonthrank_calc {
    description: "Row-level calculation for estimatedproductionbudgetvariancecurrentmonthrank: IF [Parameters].[Parameter 8] THEN NULL ELSE [EstimatedProductionBudgetVarianceCurrentMonth_Rank] END"
    type: number
    sql: CASE WHEN {% parameter parameter_8 %} THEN NULL ELSE ${TABLE}.`EstimatedProductionBudgetVarianceCurrentMonth_Rank` END ;;
    hidden: yes
    # Original Tableau formula: IF [Parameters].[Parameter 8] THEN NULL ELSE [EstimatedProductionBudgetVarianceCurrentMonth_Rank] END
  }

  dimension: empty_1_calc {
    description: "Row-level calculation for empty_1: int(null)"
    type: number
    sql: CAST(NULL AS INT64) ;;
    hidden: yes
    # Original Tableau formula: int(null)
  }

  dimension: c_size_calc {
    description: "Row-level calculation for c_size: SIZE()"
    type: number
    sql: count(*) over () ;;
    hidden: yes
    # Original Tableau formula: SIZE()
  }

  dimension: empty_2_calc {
    description: "Row-level calculation for empty_2: int(null)"
    type: number
    sql: CAST(NULL AS INT64) ;;
    hidden: yes
    # Original Tableau formula: int(null)
  }

  dimension: empty_5_calc {
    description: "Row-level calculation for empty_5: int(null)"
    type: number
    sql: CAST(NULL AS INT64) ;;
    hidden: yes
    # Original Tableau formula: int(null)
  }

  dimension: empty_6_calc {
    description: "Row-level calculation for empty_6: int(null)"
    type: number
    sql: CAST(NULL AS INT64) ;;
    hidden: yes
    # Original Tableau formula: int(null)
  }

  dimension: empty_4_calc {
    description: "Row-level calculation for empty_4: int(null)"
    type: number
    sql: CAST(NULL AS INT64) ;;
    hidden: yes
    # Original Tableau formula: int(null)
  }

  dimension: empty_3_calc {
    description: "Row-level calculation for empty_3: int(null)"
    type: number
    sql: CAST(NULL AS INT64) ;;
    hidden: yes
    # Original Tableau formula: int(null)
  }

  dimension: empty11_calc {
    description: "Row-level calculation for empty11: int(null)"
    type: number
    sql: CAST(NULL AS INT64) ;;
    hidden: yes
    # Original Tableau formula: int(null)
  }

  dimension: empty12_calc {
    description: "Row-level calculation for empty12: int(null)"
    type: number
    sql: CAST(NULL AS INT64) ;;
    hidden: yes
    # Original Tableau formula: int(null)
  }

  dimension: empty_10_calc {
    description: "Row-level calculation for empty_10: int(null)"
    type: number
    sql: CAST(NULL AS INT64) ;;
    hidden: yes
    # Original Tableau formula: int(null)
  }

  dimension: empty_9_calc {
    description: "Row-level calculation for empty_9: int(null)"
    type: number
    sql: CAST(NULL AS INT64) ;;
    hidden: yes
    # Original Tableau formula: int(null)
  }

  dimension: empty_8_calc {
    description: "Row-level calculation for empty_8: int(null)"
    type: number
    sql: CAST(NULL AS INT64) ;;
    hidden: yes
    # Original Tableau formula: int(null)
  }

  dimension: empty_7_calc {
    description: "Row-level calculation for empty_7: int(null)"
    type: number
    sql: CAST(NULL AS INT64) ;;
    hidden: yes
    # Original Tableau formula: int(null)
  }

  dimension: empty14_calc {
    description: "Row-level calculation for empty14: int(null)"
    type: number
    sql: CAST(NULL AS INT64) ;;
    hidden: yes
    # Original Tableau formula: int(null)
  }

  dimension: empty13_calc {
    description: "Row-level calculation for empty13: int(null)"
    type: number
    sql: CAST(NULL AS INT64) ;;
    hidden: yes
    # Original Tableau formula: int(null)
  }

  dimension: empty15_calc {
    description: "Row-level calculation for empty15: int(null)"
    type: number
    sql: CAST(NULL AS INT64) ;;
    hidden: yes
    # Original Tableau formula: int(null)
  }

  dimension: empty21_calc {
    description: "Row-level calculation for empty21: int(null)"
    type: number
    sql: CAST(NULL AS INT64) ;;
    hidden: yes
    # Original Tableau formula: int(null)
  }

  dimension: empty20_calc {
    description: "Row-level calculation for empty20: int(null)"
    type: number
    sql: CAST(NULL AS INT64) ;;
    hidden: yes
    # Original Tableau formula: int(null)
  }

  dimension: empty19_calc {
    description: "Row-level calculation for empty19: int(null)"
    type: number
    sql: CAST(NULL AS INT64) ;;
    hidden: yes
    # Original Tableau formula: int(null)
  }

  dimension: empty18_calc {
    description: "Row-level calculation for empty18: int(null)"
    type: number
    sql: CAST(NULL AS INT64) ;;
    hidden: yes
    # Original Tableau formula: int(null)
  }

  dimension: empty17_calc {
    description: "Row-level calculation for empty17: int(null)"
    type: number
    sql: CAST(NULL AS INT64) ;;
    hidden: yes
    # Original Tableau formula: int(null)
  }

  dimension: empty16_calc {
    description: "Row-level calculation for empty16: int(null)"
    type: number
    sql: CAST(NULL AS INT64) ;;
    hidden: yes
    # Original Tableau formula: int(null)
  }

  dimension: p_metrics_list_yoy_top_calc {
    description: "Row-level calculation for p_metrics_list_yoy_top: case [Parameters].[Parameter 4] WHEN 'NP Per Day' then [NPPerDayTop20] when 'Existing Patients Per Day' then [EPPerDayTop20] when 'Avg Days Until First Visit'THEN [AvgDaysUntilFirstVisitPercentTop20] when 'NP Show Rate' THEN [NPShowRateTop20] when 'EP Show Rate' THEN [NPShowRateTop20] when 'NP Yes Today! ' THEN [NPYesTodayTop20] when 'EP Yes Today! ' THEN [EPYesTodayTop20] when 'Percent Credit Applications With Tx Over $500' THEN [CreditApplicationsTop20] when 'New Patient Otc' THEN [NewPatientOtcTop20] when 'NP Tx Presented Per NP' THEN [NPTxPresentedPerNPTop20] when 'NP Tx Accepted Per NP' THEN [NPTxAcceptedPerNPTop20] when 'EP Tx Presented Per EP' THEN [EPTxPresentedPerEPTop20] when 'EP Tx Accepted Per EP' THEN [EPTxAcceptedPerEPTop20] when 'Oral Health Scan%' THEN [OralHealthScanPercentTop20] when 'TAPA/PAR Sales' THEN [TAPASalesTop20] when 'Doctor FTE Per Office' THEN [DoctorFTETop20] when 'MCD Production Per Day' THEN [MCDProductionTop20] when 'Associate Production Per Day' THEN [AssociateProductionTop20] when 'Hygiene Revenue per Day' THEN [HygienistDailyProductionTop20] when 'Ortho Starts Per Office Per Month' THEN [OrthoStartsTop20] when 'Percent Of Schedule' THEN [PercentOfScheduleTop20] when 'NP Same Day Starts%' THEN [NPSameDayStartsTop20] when '% of patient leaving with appt' THEN [PercentofPatientLeavingwithApptTop20] when 'New Patient Tx Plan Completion Rate' THEN [NewPatientTxPlanCompletionRateTop20] when 'Dentures' THEN [DenturesTop20] when 'Dentistry' THEN [DentistryTop20] when 'Hygiene' THEN [HygieneTop20] when 'Specialty' THEN [SpecialtyTop20] when 'Orthodontics' THEN [OrthodonticsTop20] when 'Crown & Bridge' THEN [CrownBridgeTop20] when 'Implants' THEN [ImplantsTop20] when 'Production' THEN [ProductionTop20] when 'Net Promoter Score ALL' THEN [NetPromoterSconumberLTop20] when 'Net Promoter Score' THEN [NetPromoterScoreTop20] when 'Patient Satisfaction' THEN [PatientSatisfactionTop20] when 'Online Review Ratings' THEN [OnlineReviewRatingsTop20] when 'Added to schedule' THEN [AddedtoScheduleTop20] when 'Estimated Production Current Month' THEN [EstimatedProductionCurrentMonthTop20] when 'Estimated Production Budget Variance Current Month' THEN [EstimatedProductionBudgetVarianceCurrentMonthTop20] when 'Total Deposit' THEN [TotalDepositTop20] when 'Percent of Balance Collected' THEN [PercentofBalanceCollectedTop20] when 'NP Appt Per Day' then [NPApptsPerDayPercentTop20] when 'NP Comp to Problem Focused Exams' then [ComptoProblemFocusedExamstTop20] when 'NP ApptLength Adult' then [ApptLength_AdultTop20] when 'PC Block%' then [PCBlockTop20] when 'NP Block%' then [NPBlockTop20] when 'Inefficient%' then [InefficientTop20] END"
    type: number
    sql: CASE WHEN ({% parameter parameter_4 %} = 'NP Per Day') THEN ${TABLE}.`NPPerDayTop20` WHEN ({% parameter parameter_4 %} = 'Existing Patients Per Day') THEN ${TABLE}.`EPPerDayTop20` WHEN ({% parameter parameter_4 %} = 'Avg Days Until First Visit') THEN ${TABLE}.`AvgDaysUntilFirstVisitPercentTop20` WHEN ({% parameter parameter_4 %} = 'NP Show Rate') THEN ${TABLE}.`NPShowRateTop20` WHEN ({% parameter parameter_4 %} = 'EP Show Rate') THEN ${TABLE}.`NPShowRateTop20` WHEN ({% parameter parameter_4 %} = 'NP Yes Today! ') THEN ${TABLE}.`NPYesTodayTop20` WHEN ({% parameter parameter_4 %} = 'EP Yes Today! ') THEN ${TABLE}.`EPYesTodayTop20` WHEN ({% parameter parameter_4 %} = 'Percent Credit Applications With Tx Over $500') THEN ${TABLE}.`CreditApplicationsTop20` WHEN ({% parameter parameter_4 %} = 'New Patient Otc') THEN ${TABLE}.`NewPatientOtcTop20` WHEN ({% parameter parameter_4 %} = 'NP Tx Presented Per NP') THEN ${TABLE}.`NPTxPresentedPerNPTop20` WHEN ({% parameter parameter_4 %} = 'NP Tx Accepted Per NP') THEN ${TABLE}.`NPTxAcceptedPerNPTop20` WHEN ({% parameter parameter_4 %} = 'EP Tx Presented Per EP') THEN ${TABLE}.`EPTxPresentedPerEPTop20` WHEN ({% parameter parameter_4 %} = 'EP Tx Accepted Per EP') THEN ${TABLE}.`EPTxAcceptedPerEPTop20` WHEN ({% parameter parameter_4 %} = 'Oral Health Scan%') THEN ${TABLE}.`OralHealthScanPercentTop20` WHEN ({% parameter parameter_4 %} = 'TAPA/PAR Sales') THEN ${TABLE}.`TAPASalesTop20` WHEN ({% parameter parameter_4 %} = 'Doctor FTE Per Office') THEN ${TABLE}.`DoctorFTETop20` WHEN ({% parameter parameter_4 %} = 'MCD Production Per Day') THEN ${TABLE}.`MCDProductionTop20` WHEN ({% parameter parameter_4 %} = 'Associate Production Per Day') THEN ${TABLE}.`AssociateProductionTop20` WHEN ({% parameter parameter_4 %} = 'Hygiene Revenue per Day') THEN ${TABLE}.`HygienistDailyProductionTop20` WHEN ({% parameter parameter_4 %} = 'Ortho Starts Per Office Per Month') THEN ${TABLE}.`OrthoStartsTop20` WHEN ({% parameter parameter_4 %} = 'Percent Of Schedule') THEN ${TABLE}.`PercentOfScheduleTop20` WHEN ({% parameter parameter_4 %} = 'NP Same Day Starts%') THEN ${TABLE}.`NPSameDayStartsTop20` WHEN ({% parameter parameter_4 %} = '% of patient leaving with appt') THEN ${TABLE}.`PercentofPatientLeavingwithApptTop20` WHEN ({% parameter parameter_4 %} = 'New Patient Tx Plan Completion Rate') THEN ${TABLE}.`NewPatientTxPlanCompletionRateTop20` WHEN ({% parameter parameter_4 %} = 'Dentures') THEN ${TABLE}.`DenturesTop20` WHEN ({% parameter parameter_4 %} = 'Dentistry') THEN ${TABLE}.`DentistryTop20` WHEN ({% parameter parameter_4 %} = 'Hygiene') THEN ${TABLE}.`HygieneTop20` WHEN ({% parameter parameter_4 %} = 'Specialty') THEN ${TABLE}.`SpecialtyTop20` WHEN ({% parameter parameter_4 %} = 'Orthodontics') THEN ${TABLE}.`OrthodonticsTop20` WHEN ({% parameter parameter_4 %} = 'Crown & Bridge') THEN ${TABLE}.`CrownBridgeTop20` WHEN ({% parameter parameter_4 %} = 'Implants') THEN ${TABLE}.`ImplantsTop20` WHEN ({% parameter parameter_4 %} = 'Production') THEN ${TABLE}.`ProductionTop20` WHEN ({% parameter parameter_4 %} = 'Net Promoter Score ALL') THEN ${TABLE}.`NetPromoterSconumberLTop20` WHEN ({% parameter parameter_4 %} = 'Net Promoter Score') THEN ${TABLE}.`NetPromoterScoreTop20` WHEN ({% parameter parameter_4 %} = 'Patient Satisfaction') THEN ${TABLE}.`PatientSatisfactionTop20` WHEN ({% parameter parameter_4 %} = 'Online Review Ratings') THEN ${TABLE}.`OnlineReviewRatingsTop20` WHEN ({% parameter parameter_4 %} = 'Added to schedule') THEN ${TABLE}.`AddedtoScheduleTop20` WHEN ({% parameter parameter_4 %} = 'Estimated Production Current Month') THEN ${TABLE}.`EstimatedProductionCurrentMonthTop20` WHEN ({% parameter parameter_4 %} = 'Estimated Production Budget Variance Current Month') THEN ${TABLE}.`EstimatedProductionBudgetVarianceCurrentMonthTop20` WHEN ({% parameter parameter_4 %} = 'Total Deposit') THEN ${TABLE}.`TotalDepositTop20` WHEN ({% parameter parameter_4 %} = 'Percent of Balance Collected') THEN ${TABLE}.`PercentofBalanceCollectedTop20` WHEN ({% parameter parameter_4 %} = 'NP Appt Per Day') THEN ${TABLE}.`NPApptsPerDayPercentTop20` WHEN ({% parameter parameter_4 %} = 'NP Comp to Problem Focused Exams') THEN ${TABLE}.`ComptoProblemFocusedExamstTop20` WHEN ({% parameter parameter_4 %} = 'NP ApptLength Adult') THEN ${TABLE}.`ApptLength_AdultTop20` WHEN ({% parameter parameter_4 %} = 'PC Block%') THEN ${TABLE}.`PCBlockTop20` WHEN ({% parameter parameter_4 %} = 'NP Block%') THEN ${TABLE}.`NPBlockTop20` WHEN ({% parameter parameter_4 %} = 'Inefficient%') THEN ${TABLE}.`InefficientTop20` END ;;
    hidden: yes
    # Original Tableau formula: case [Parameters].[Parameter 4] WHEN 'NP Per Day' then [NPPerDayTop20] when 'Existing Patients Per Day' then [EPPerDayTop20] when 'Avg Days Until First Visit'THEN [AvgDaysUntilFirstVisitPercentTop20] when 'NP Show Rate' THEN [NPShowRateTop20] when 'EP Show Rate' THEN [NPShowRateTop20] when 'NP Yes Today! ' THEN [NPYesTodayTop20] when 'EP Yes Today! ' THEN [EPYesTodayTop20] when 'Percent Credit Applications With Tx Over $500' THEN [CreditApplicationsTop20] when 'New Patient Otc' THEN [NewPatientOtcTop20] when 'NP Tx Presented Per NP' THEN [NPTxPresentedPerNPTop20] when 'NP Tx Accepted Per NP' THEN [NPTxAcceptedPerNPTop20] when 'EP Tx Presented Per EP' THEN [EPTxPresentedPerEPTop20] when 'EP Tx Accepted Per EP' THEN [EPTxAcceptedPerEPTop20] when 'Oral Health Scan%' THEN [OralHealthScanPercentTop20] when 'TAPA/PAR Sales' THEN [TAPASalesTop20] when 'Doctor FTE Per Office' THEN [DoctorFTETop20] when 'MCD Production Per Day' THEN [MCDProductionTop20] when 'Associate Production Per Day' THEN [AssociateProductionTop20] when 'Hygiene Revenue per Day' THEN [HygienistDailyProductionTop20] when 'Ortho Starts Per Office Per Month' THEN [OrthoStartsTop20] when 'Percent Of Schedule' THEN [PercentOfScheduleTop20] when 'NP Same Day Starts%' THEN [NPSameDayStartsTop20] when '% of patient leaving with appt' THEN [PercentofPatientLeavingwithApptTop20] when 'New Patient Tx Plan Completion Rate' THEN [NewPatientTxPlanCompletionRateTop20] when 'Dentures' THEN [DenturesTop20] when 'Dentistry' THEN [DentistryTop20] when 'Hygiene' THEN [HygieneTop20] when 'Specialty' THEN [SpecialtyTop20] when 'Orthodontics' THEN [OrthodonticsTop20] when 'Crown & Bridge' THEN [CrownBridgeTop20] when 'Implants' THEN [ImplantsTop20] when 'Production' THEN [ProductionTop20] when 'Net Promoter Score ALL' THEN [NetPromoterSconumberLTop20] when 'Net Promoter Score' THEN [NetPromoterScoreTop20] when 'Patient Satisfaction' THEN [PatientSatisfactionTop20] when 'Online Review Ratings' THEN [OnlineReviewRatingsTop20] when 'Added to schedule' THEN [AddedtoScheduleTop20] when 'Estimated Production Current Month' THEN [EstimatedProductionCurrentMonthTop20] when 'Estimated Production Budget Variance Current Month' THEN [EstimatedProductionBudgetVarianceCurrentMonthTop20] when 'Total Deposit' THEN [TotalDepositTop20] when 'Percent of Balance Collected' THEN [PercentofBalanceCollectedTop20] when 'NP Appt Per Day' then [NPApptsPerDayPercentTop20] when 'NP Comp to Problem Focused Exams' then [ComptoProblemFocusedExamstTop20] when 'NP ApptLength Adult' then [ApptLength_AdultTop20] when 'PC Block%' then [PCBlockTop20] when 'NP Block%' then [NPBlockTop20] when 'Inefficient%' then [InefficientTop20] END
  }

  dimension: p_metrics_list_yoy_top_2_calc {
    description: "Row-level calculation for p_metrics_list_yoy_top_2: IF [p.Mertics List YOY (copy)_1990309625774809102] <= 1000 THEN [p.Mertics List YOY (copy)_1990309625774809102] END"
    type: number
    sql: CASE WHEN (${p_metrics_list_yoy_top_calc} <= 1000) THEN ${p_metrics_list_yoy_top_calc} ELSE NULL END ;;
    hidden: yes
    # Original Tableau formula: IF [p.Mertics List YOY (copy)_1990309625774809102] <= 1000 THEN [p.Mertics List YOY (copy)_1990309625774809102] END
  }

  dimension: p_metrics_list_yoy_top_k_calc {
    description: "Row-level calculation for p_metrics_list_yoy_top_k: IF [p.Mertics List YOY (copy)_1990309625774809102] >= 1000 AND [p.Mertics List YOY (copy)_1990309625774809102] < 200000 THEN [p.Mertics List YOY (copy)_1990309625774809102] END"
    type: number
    sql: CASE WHEN ((${p_metrics_list_yoy_top_calc} >= 1000) AND (${p_metrics_list_yoy_top_calc} < 200000)) THEN ${p_metrics_list_yoy_top_calc} ELSE NULL END ;;
    hidden: yes
    # Original Tableau formula: IF [p.Mertics List YOY (copy)_1990309625774809102] >= 1000 AND [p.Mertics List YOY (copy)_1990309625774809102] < 200000 THEN [p.Mertics List YOY (copy)_1990309625774809102] END
  }

  # Calculated Fields (from Tableau formulas)

measure: percent_of_patient_leaving_with_appt_color_flag {
    description: "Calculated field: INT(if ([% of patient leaving with appt Den (copy)_929711906805620757]) >=avg([PercentofPatientLeavingwithApptTop20] )then 2 elseif ([% of patient leaving with appt Den (copy)_929711906805620757]) <= avg([PercentofPatientLeavingwithApptBottom20]) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${percent_of_patient_leaving_with_appt} >= AVG(${TABLE}.`PercentofPatientLeavingwithApptTop20`)) THEN 2 ELSE CASE WHEN (${percent_of_patient_leaving_with_appt} <= AVG(${TABLE}.`PercentofPatientLeavingwithApptBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ([% of patient leaving with appt Den (copy)_929711906805620757]) >=avg([PercentofPatientLeavingwithApptTop20] )then 2 elseif ([% of patient leaving with appt Den (copy)_929711906805620757]) <= avg([PercentofPatientLeavingwithApptBottom20]) then 1 END)
  }

measure: percent_of_patient_leaving_with_appt {
    description: "Calculated field: sum([PercentofPatientleavingwithappt_Num])/SUM([PercentofPatientleavingwithappt_Den])"
    type: number
    sql: (SUM(${TABLE}.`PercentofPatientleavingwithappt_Num`) / NULLIF(SUM(${TABLE}.`PercentofPatientleavingwithappt_Den`), 0)) ;;


    # Original Tableau formula: sum([PercentofPatientleavingwithappt_Num])/SUM([PercentofPatientleavingwithappt_Den])
  }

measure: associate_production_per_day_color_flag {
    description: "Calculated field: INT(if ([Associate Production Per Day Den (copy)_929711906805641239]) >=avg([AssociateProductionTop20] )then 2 elseif ([Associate Production Per Day Den (copy)_929711906805641239]) <= avg([AssociateProductionBottom20]) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${associate_production_per_day} >= AVG(${TABLE}.`AssociateProductionTop20`)) THEN 2 ELSE CASE WHEN (${associate_production_per_day} <= AVG(${TABLE}.`AssociateProductionBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ([Associate Production Per Day Den (copy)_929711906805641239]) >=avg([AssociateProductionTop20] )then 2 elseif ([Associate Production Per Day Den (copy)_929711906805641239]) <= avg([AssociateProductionBottom20]) then 1 END)
  }

measure: associate_production_per_day {
    description: "Calculated field: sum([AssociateProduction_Num])/sum([AssociateProduction_Den])"
    type: number
    sql: (SUM(${TABLE}.`AssociateProduction_Num`) / NULLIF(SUM(${TABLE}.`AssociateProduction_Den`), 0)) ;;


    # Original Tableau formula: sum([AssociateProduction_Num])/sum([AssociateProduction_Den])
  }

measure: avg_days_until_first_visitcolor_flag {
    description: "Calculated field: INT(if ([Avg Days Until First Visit Den (copy)_929711906805768216] ) < avg([AvgDaysUntilFirstVisitPercentTop20] )then 2 elseif ( [Avg Days Until First Visit Den (copy)_929711906805768216]) > avg( [AvgDaysUntilFirstVisitPercentBottom20]) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${avg_days_until_first_visit} < AVG(${TABLE}.`AvgDaysUntilFirstVisitPercentTop20`)) THEN 2 ELSE CASE WHEN (${avg_days_until_first_visit} > AVG(${TABLE}.`AvgDaysUntilFirstVisitPercentBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ([Avg Days Until First Visit Den (copy)_929711906805768216] ) < avg([AvgDaysUntilFirstVisitPercentTop20] )then 2 elseif ( [Avg Days Until First Visit Den (copy)_929711906805768216]) > avg( [AvgDaysUntilFirstVisitPercentBottom20]) then 1 END)
  }

measure: avg_days_until_first_visit {
    description: "Calculated field: sum([AvgDaysUntilFirstVisit_Num])/sum([AvgDaysUntilFirstVisit_Den])"
    type: number
    sql: (SUM(${TABLE}.`AvgDaysUntilFirstVisit_Num`) / NULLIF(SUM(${TABLE}.`AvgDaysUntilFirstVisit_Den`), 0)) ;;


    # Original Tableau formula: sum([AvgDaysUntilFirstVisit_Num])/sum([AvgDaysUntilFirstVisit_Den])
  }

measure: ep_show_rate_same_day_appts {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: ep_yes_today {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: np_days_to_first_appointment {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: avg_ep_per_day {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: c_category_variance_percent {
    description: "Calculated field: (Sum(IF [Calculation_1990309625422495748]='2' THEN [NPPerDay_Num] END)/Sum(IF [Calculation_1990309625422495748]='2' THEN [NPPerDay_Den] END) - Sum(IF [Calculation_1990309625422495748]='1' THEN [NPPerDay_Num] END)/Sum(IF [Calculation_1990309625422495748]='1' THEN [NPPerDay_Den] END) )"
    type: number
    sql: ((SUM(CASE WHEN (${p_yoy_header} = '2') THEN ${TABLE}.`NPPerDay_Num` ELSE NULL END) / NULLIF(SUM(CASE WHEN (${p_yoy_header} = '2') THEN ${TABLE}.`NPPerDay_Den` ELSE NULL END), 0)) - (SUM(CASE WHEN (${p_yoy_header} = '1') THEN ${TABLE}.`NPPerDay_Num` ELSE NULL END) / NULLIF(SUM(CASE WHEN (${p_yoy_header} = '1') THEN ${TABLE}.`NPPerDay_Den` ELSE NULL END), 0))) ;;


    # Original Tableau formula: (Sum(IF [Calculation_1990309625422495748]='2' THEN [NPPerDay_Num] END)/Sum(IF [Calculation_1990309625422495748]='2' THEN [NPPerDay_Den] END) - Sum(IF [Calculation_1990309625422495748]='1' THEN [NPPerDay_Num] END)/Sum(IF [Calculation_1990309625422495748]='1' THEN [NPPerDay_Den] END) )
  }

measure: placeholder {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

  dimension: p_max_date {
    description: "Calculated field: { FIXED : MAX([FirstOfMonth])}"
    type: date_raw
    sql: (SELECT MAX(${TABLE}.`FirstOfMonth`) FROM ${TABLE}) ;;
    # Original Tableau formula: { FIXED : MAX([FirstOfMonth])}
  }

  dimension: p_max_date_last_year {
    description: "Calculated field: { FIXED :DATEADD('year',-1,MAX([FirstOfMonth])) }"
    type: date_raw
    sql: (SELECT DATE_ADD(MAX(${TABLE}.`FirstOfMonth`), INTERVAL -1 YEAR) FROM ${TABLE}) ;;
    # Original Tableau formula: { FIXED :DATEADD('year',-1,MAX([FirstOfMonth])) }
  }

  dimension: p_month_selector {
    description: "Calculated field: if [Parameters].[Parameter 1] = [FirstOfMonth] then \"1\" else \"0\" END"
    type: string
    sql: CASE WHEN ({% parameter parameter_1 %} = ${TABLE}.`FirstOfMonth`) THEN '1' ELSE '0' END ;;
    # Original Tableau formula: if [Parameters].[Parameter 1] = [FirstOfMonth] then "1" else "0" END
  }

measure: p_current_year_var_yoy {
    description: "Calculated field: ZN(([Calculation_1990309625761050636]) - LOOKUP(ZN([Calculation_1990309625761050636]), -1)) / ABS(LOOKUP(ZN([Calculation_1990309625761050636]), -1))"
    type: number
    sql: (IFNULL((${p_metrics_list_yoy} - 'MIGRATION_REQUIRED'), 0) / NULLIF(ABS('MIGRATION_REQUIRED'), 0)) ;;


    # Original Tableau formula: ZN(([Calculation_1990309625761050636]) - LOOKUP(ZN([Calculation_1990309625761050636]), -1)) / ABS(LOOKUP(ZN([Calculation_1990309625761050636]), -1))
  }

  dimension: year_of_first_of_month {
    description: "Calculated field: DATE(YEAR([FirstOfMonth]))"
    type: date
    sql: TIMESTAMP(DATE(EXTRACT(YEAR FROM ${TABLE}.`FirstOfMonth`))) ;;
    # Original Tableau formula: DATE(YEAR([FirstOfMonth]))
  }

  dimension: p_username_filter {
    description: "Calculated field: [Parameters].[Parameter 7] = \"Switch to All Aspen View\" and UPPER([UserName]) = 'ALL' OR [Parameters].[Parameter 7] = \"Switch to My Office(s) View\" and UPPER([UserName]) = UPPER(USERNAME())"
    type: yesno
    sql: ((({% parameter parameter_7 %} = 'Switch to All Aspen View') AND (UPPER(${TABLE}.`UserName`) = 'ALL')) OR (({% parameter parameter_7 %} = 'Switch to My Office(s) View') AND (UPPER(${TABLE}.`UserName`) = UPPER('{{ _user_attributes['name']}}')))) ;;
    # Original Tableau formula: [Parameters].[Parameter 7] = "Switch to All Aspen View" and UPPER([UserName]) = 'ALL' OR [Parameters].[Parameter 7] = "Switch to My Office(s) View" and UPPER([UserName]) = UPPER(USERNAME())
  }

  dimension: blank {
    description: "Calculated field: \"\""
    type: string
    sql: '' ;;
    # Original Tableau formula: ""
  }

measure: show_rank {
    description: "Calculated field: IF COUNTD([Facility Code (copy)_1833246535353614354]) = 1 then [Calculation_1990309626125324305] ELSEIF COUNTD([POPOwner]) = 1 then [Calculation_1990309626125324305] ELSEIF COUNTD([DMA]) = 1 then [Calculation_1990309626125324305] ELSEIF COUNTD([RegionDescription]) = 1 then [Calculation_1990309626125324305] ELSEIF COUNTD([Territory]) = 1 then [Calculation_1990309626125324305] ELSEIF COUNTD([DivisionVP]) = 1 then [Calculation_1990309626125324305] ELSE [TRUE (copy)_1990309626125467666] END"
    type: number
    sql: ${show_rank_calc} ;;


    # Original Tableau formula: IF COUNTD([Facility Code (copy)_1833246535353614354]) = 1 then [Calculation_1990309626125324305] ELSEIF COUNTD([POPOwner]) = 1 then [Calculation_1990309626125324305] ELSEIF COUNTD([DMA]) = 1 then [Calculation_1990309626125324305] ELSEIF COUNTD([RegionDescription]) = 1 then [Calculation_1990309626125324305] ELSEIF COUNTD([Territory]) = 1 then [Calculation_1990309626125324305] ELSEIF COUNTD([DivisionVP]) = 1 then [Calculation_1990309626125324305] ELSE [TRUE (copy)_1990309626125467666] END
  }

measure: p_metrics_rank {
    description: "Calculated field: case [Parameters].[Select Metric (copy)_1176846891754504196] WHEN 'Avg. NP Per Day Rank' then AVG([NPPerDay_Rank]) when 'Avg. EP Per Day Rank' then avg( [EPPerDay_Rank]) when 'Avg. NP Days to 1st Appointment'THEN AVG([AvgDaysUntilFirstVisit_Rank]) when 'Avg. NP Show Rate Rank' THEN AVG( [NPShowRate_Rank]) when 'Avg. EP Show Rate Rank' THEN AVG([EPShowRate_Rank]) when 'Avg. NP Yes Today! Rank' THEN AVG([NPYesToday_Rank]) when 'Avg. EP Yes Today! Rank' THEN AVG([EPYesToday_Rank]) when 'Avg. Percent Credit Applications With Tx Over $500 Rank' THEN AVG( [PercentCreditApplications_Rank]) when 'Avg. New Patient Otc Rank' THEN AVG([NewPatientOtc_Rank]) when 'Avg. NP Tx Presented Per NP Rank' THEN AVG([NPTxPresentedPerNP_Rank]) when 'Avg. NP Tx Accepted Per NP Rank' THEN AVG( [NPTxAcceptedPerNP_Rank]) when 'Avg. EP Tx Presented Per EP Rank' THEN AVG( [EPTxPresentedPerEP_Rank]) when 'Avg. EP Tx Accepted Per EP Rank' THEN AVG([EPTxAcceptedPerEP_Rank]) when 'Avg. Oral Health Scan% Rank' THEN AVG( [OralHealthScan_Rank]) when 'Avg. TAPA/PAR Sales Rank' THEN AVG( [TAPASales_Rank]) when 'Avg. Doctor FTE Per Office Rank' THEN AVG([DoctorFTEPerOffice_Rank]) when 'Avg. MCD Production Per Day Rank' THEN AVG([MCDProduction_Rank]) when 'Avg. Associate Production Per Day Rank' THEN AVG([AssociateProductionPerDay_Rank]) when 'Avg. Hygiene Revenue per Day Rank' THEN AVG([HygieneRevenueperDayProduction_Rank]) when 'Avg. Ortho Starts Per Office Per Month Rank' THEN AVG([OrthoStartsPerOfficePerMonth_Rank]) when 'Avg. Percent Of Schedule Rank' THEN AVG([PercentOfSchedule_Rank]) when 'Avg. NP Same Day Starts% Rank' THEN AVG([NPSameDayStarts_Rank]) when 'Avg. % of patient leaving with appt Rank' THEN AVG([PercentofPatientLeavingwithAppt_Rank]) when 'Avg. New Patient Tx Plan Completion Rate Rank' THEN AVG([NewPatientTxPlanCompletionRate_Rank]) when 'Avg. Dentures Rank' THEN AVG([Dentures_Rank]) when 'Avg. Dentistry Rank' THEN AVG([Dentistry_Rank]) when 'Avg. Hygiene Rank' THEN AVG([Hygiene_Rank]) when 'Avg. Specialty Rank' THEN AVG([Specialty_Rank]) when 'Avg. Orthodontics Rank' THEN AVG([Orthodontics_Rank]) when 'Avg. Crown & Bridge Rank' THEN AVG([CrownBridge_Rank]) when 'Avg. Implants Rank' THEN AVG([Implants_Rank]) when 'Avg. Production Rank' THEN AVG([Production_Rank]) when 'Avg. Net Promoter Score ALL Rank' THEN AVG([NetPromoterSconumberL_Rank]) when 'Avg. Net Promoter Score Rank' THEN AVG([NetPromoterScore_Rank]) when 'Avg. Patient Satisfaction Rank' THEN AVG([PatientSatisfaction_Rank]) when 'Avg. Online Review Ratings Rank' THEN AVG([OnlineReviewRatings_Rank]) when 'Avg. added to schedule Rank' THEN AVG([addedtoschedule_Rank]) when 'Avg. Estimated Production Current Month Rank' THEN AVG([EstimatedProductionBudgetVarianceCurrentMonth_Rank]) when 'Avg. Estimated Production Budget Variance Current Month Rank' THEN AVG([EstimatedProductionBudgetVarianceCurrentMonth_Rank]) when 'Avg. Total Deposit Rank' THEN AVG([TotalDeposit_Rank]) when 'Avg. Percent of Balance Collected Rank' THEN AVG([PercentofBalanceCollected_Rank]) when 'Avg. NP Appt Per Day Rank' then avg([NPApptsPerDay_Rank]) when 'Avg. NP Comp to Problem Focused Exams Rank' then avg([ComptoProblemFocusedExams_Rank]) when 'Avg. NP ApptLength Adult Rank' then AVG([ApptLength_Adult_Rank]) when 'Avg. PC Block% Rank' then avg([PCBlock_Rank]) when 'Avg. NP Block% Rank' then avg([NPBlock_Rank]) when 'Avg. Inefficient% Rank' then avg([Inefficiency_Rank]) END"
    type: number
    sql: CASE WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. NP Per Day Rank') THEN AVG(${TABLE}.`NPPerDay_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. EP Per Day Rank') THEN AVG(${TABLE}.`EPPerDay_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. NP Days to 1st Appointment') THEN AVG(${TABLE}.`AvgDaysUntilFirstVisit_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. NP Show Rate Rank') THEN AVG(${TABLE}.`NPShowRate_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. EP Show Rate Rank') THEN AVG(${TABLE}.`EPShowRate_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. NP Yes Today! Rank') THEN AVG(${TABLE}.`NPYesToday_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. EP Yes Today! Rank') THEN AVG(${TABLE}.`EPYesToday_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Percent Credit Applications With Tx Over $500 Rank') THEN AVG(${TABLE}.`PercentCreditApplications_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. New Patient Otc Rank') THEN AVG(${TABLE}.`NewPatientOtc_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. NP Tx Presented Per NP Rank') THEN AVG(${TABLE}.`NPTxPresentedPerNP_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. NP Tx Accepted Per NP Rank') THEN AVG(${TABLE}.`NPTxAcceptedPerNP_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. EP Tx Presented Per EP Rank') THEN AVG(${TABLE}.`EPTxPresentedPerEP_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. EP Tx Accepted Per EP Rank') THEN AVG(${TABLE}.`EPTxAcceptedPerEP_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Oral Health Scan% Rank') THEN AVG(${TABLE}.`OralHealthScan_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. TAPA/PAR Sales Rank') THEN AVG(${TABLE}.`TAPASales_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Doctor FTE Per Office Rank') THEN AVG(${TABLE}.`DoctorFTEPerOffice_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. MCD Production Per Day Rank') THEN AVG(${TABLE}.`MCDProduction_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Associate Production Per Day Rank') THEN AVG(${TABLE}.`AssociateProductionPerDay_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Hygiene Revenue per Day Rank') THEN AVG(${TABLE}.`HygieneRevenueperDayProduction_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Ortho Starts Per Office Per Month Rank') THEN AVG(${TABLE}.`OrthoStartsPerOfficePerMonth_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Percent Of Schedule Rank') THEN AVG(${TABLE}.`PercentOfSchedule_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. NP Same Day Starts% Rank') THEN AVG(${TABLE}.`NPSameDayStarts_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. % of patient leaving with appt Rank') THEN AVG(${TABLE}.`PercentofPatientLeavingwithAppt_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. New Patient Tx Plan Completion Rate Rank') THEN AVG(${TABLE}.`NewPatientTxPlanCompletionRate_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Dentures Rank') THEN AVG(${TABLE}.`Dentures_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Dentistry Rank') THEN AVG(${TABLE}.`Dentistry_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Hygiene Rank') THEN AVG(${TABLE}.`Hygiene_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Specialty Rank') THEN AVG(${TABLE}.`Specialty_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Orthodontics Rank') THEN AVG(${TABLE}.`Orthodontics_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Crown & Bridge Rank') THEN AVG(${TABLE}.`CrownBridge_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Implants Rank') THEN AVG(${TABLE}.`Implants_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Production Rank') THEN AVG(${TABLE}.`Production_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Net Promoter Score ALL Rank') THEN AVG(${TABLE}.`NetPromoterSconumberL_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Net Promoter Score Rank') THEN AVG(${TABLE}.`NetPromoterScore_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Patient Satisfaction Rank') THEN AVG(${TABLE}.`PatientSatisfaction_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Online Review Ratings Rank') THEN AVG(${TABLE}.`OnlineReviewRatings_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. added to schedule Rank') THEN AVG(${TABLE}.`addedtoschedule_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Estimated Production Current Month Rank') THEN AVG(${TABLE}.`EstimatedProductionBudgetVarianceCurrentMonth_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Estimated Production Budget Variance Current Month Rank') THEN AVG(${TABLE}.`EstimatedProductionBudgetVarianceCurrentMonth_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Total Deposit Rank') THEN AVG(${TABLE}.`TotalDeposit_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Percent of Balance Collected Rank') THEN AVG(${TABLE}.`PercentofBalanceCollected_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. NP Appt Per Day Rank') THEN AVG(${TABLE}.`NPApptsPerDay_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. NP Comp to Problem Focused Exams Rank') THEN AVG(${TABLE}.`ComptoProblemFocusedExams_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. NP ApptLength Adult Rank') THEN AVG(${TABLE}.`ApptLength_Adult_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. PC Block% Rank') THEN AVG(${TABLE}.`PCBlock_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. NP Block% Rank') THEN AVG(${TABLE}.`NPBlock_Rank`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Inefficient% Rank') THEN AVG(${TABLE}.`Inefficiency_Rank`) END ;;


    # Original Tableau formula: case [Parameters].[Select Metric (copy)_1176846891754504196] WHEN 'Avg. NP Per Day Rank' then AVG([NPPerDay_Rank]) when 'Avg. EP Per Day Rank' then avg( [EPPerDay_Rank]) when 'Avg. NP Days to 1st Appointment'THEN AVG([AvgDaysUntilFirstVisit_Rank]) when 'Avg. NP Show Rate Rank' THEN AVG( [NPShowRate_Rank]) when 'Avg. EP Show Rate Rank' THEN AVG([EPShowRate_Rank]) when 'Avg. NP Yes Today! Rank' THEN AVG([NPYesToday_Rank]) when 'Avg. EP Yes Today! Rank' THEN AVG([EPYesToday_Rank]) when 'Avg. Percent Credit Applications With Tx Over $500 Rank' THEN AVG( [PercentCreditApplications_Rank]) when 'Avg. New Patient Otc Rank' THEN AVG([NewPatientOtc_Rank]) when 'Avg. NP Tx Presented Per NP Rank' THEN AVG([NPTxPresentedPerNP_Rank]) when 'Avg. NP Tx Accepted Per NP Rank' THEN AVG( [NPTxAcceptedPerNP_Rank]) when 'Avg. EP Tx Presented Per EP Rank' THEN AVG( [EPTxPresentedPerEP_Rank]) when 'Avg. EP Tx Accepted Per EP Rank' THEN AVG([EPTxAcceptedPerEP_Rank]) when 'Avg. Oral Health Scan% Rank' THEN AVG( [OralHealthScan_Rank]) when 'Avg. TAPA/PAR Sales Rank' THEN AVG( [TAPASales_Rank]) when 'Avg. Doctor FTE Per Office Rank' THEN AVG([DoctorFTEPerOffice_Rank]) when 'Avg. MCD Production Per Day Rank' THEN AVG([MCDProduction_Rank]) when 'Avg. Associate Production Per Day Rank' THEN AVG([AssociateProductionPerDay_Rank]) when 'Avg. Hygiene Revenue per Day Rank' THEN AVG([HygieneRevenueperDayProduction_Rank]) when 'Avg. Ortho Starts Per Office Per Month Rank' THEN AVG([OrthoStartsPerOfficePerMonth_Rank]) when 'Avg. Percent Of Schedule Rank' THEN AVG([PercentOfSchedule_Rank]) when 'Avg. NP Same Day Starts% Rank' THEN AVG([NPSameDayStarts_Rank]) when 'Avg. % of patient leaving with appt Rank' THEN AVG([PercentofPatientLeavingwithAppt_Rank]) when 'Avg. New Patient Tx Plan Completion Rate Rank' THEN AVG([NewPatientTxPlanCompletionRate_Rank]) when 'Avg. Dentures Rank' THEN AVG([Dentures_Rank]) when 'Avg. Dentistry Rank' THEN AVG([Dentistry_Rank]) when 'Avg. Hygiene Rank' THEN AVG([Hygiene_Rank]) when 'Avg. Specialty Rank' THEN AVG([Specialty_Rank]) when 'Avg. Orthodontics Rank' THEN AVG([Orthodontics_Rank]) when 'Avg. Crown & Bridge Rank' THEN AVG([CrownBridge_Rank]) when 'Avg. Implants Rank' THEN AVG([Implants_Rank]) when 'Avg. Production Rank' THEN AVG([Production_Rank]) when 'Avg. Net Promoter Score ALL Rank' THEN AVG([NetPromoterSconumberL_Rank]) when 'Avg. Net Promoter Score Rank' THEN AVG([NetPromoterScore_Rank]) when 'Avg. Patient Satisfaction Rank' THEN AVG([PatientSatisfaction_Rank]) when 'Avg. Online Review Ratings Rank' THEN AVG([OnlineReviewRatings_Rank]) when 'Avg. added to schedule Rank' THEN AVG([addedtoschedule_Rank]) when 'Avg. Estimated Production Current Month Rank' THEN AVG([EstimatedProductionBudgetVarianceCurrentMonth_Rank]) when 'Avg. Estimated Production Budget Variance Current Month Rank' THEN AVG([EstimatedProductionBudgetVarianceCurrentMonth_Rank]) when 'Avg. Total Deposit Rank' THEN AVG([TotalDeposit_Rank]) when 'Avg. Percent of Balance Collected Rank' THEN AVG([PercentofBalanceCollected_Rank]) when 'Avg. NP Appt Per Day Rank' then avg([NPApptsPerDay_Rank]) when 'Avg. NP Comp to Problem Focused Exams Rank' then avg([ComptoProblemFocusedExams_Rank]) when 'Avg. NP ApptLength Adult Rank' then AVG([ApptLength_Adult_Rank]) when 'Avg. PC Block% Rank' then avg([PCBlock_Rank]) when 'Avg. NP Block% Rank' then avg([NPBlock_Rank]) when 'Avg. Inefficient% Rank' then avg([Inefficiency_Rank]) END
  }

  dimension: p_aggregation {
    description: "Calculated field: case [Parameters].[Parameter 6] when \"Division VP\" then [DivisionVP] when \"Territory\" then [Territory] when \"Region Description\" then [RegionDescription] when \"Pop Owner\" then [POPOwner] when \"DMA\" then [DMA] when \"Facility\" then [Facility Code (copy)_1833246535353614354] END"
    type: string
    sql: CASE WHEN ({% parameter parameter_6 %} = 'Division VP') THEN ${TABLE}.`DivisionVP` WHEN ({% parameter parameter_6 %} = 'Territory') THEN ${TABLE}.`Territory` WHEN ({% parameter parameter_6 %} = 'Region Description') THEN ${TABLE}.`RegionDescription` WHEN ({% parameter parameter_6 %} = 'Pop Owner') THEN ${TABLE}.`POPOwner` WHEN ({% parameter parameter_6 %} = 'DMA') THEN ${TABLE}.`DMA` WHEN ({% parameter parameter_6 %} = 'Facility') THEN ${facility_code_name} END ;;
    # Original Tableau formula: case [Parameters].[Parameter 6] when "Division VP" then [DivisionVP] when "Territory" then [Territory] when "Region Description" then [RegionDescription] when "Pop Owner" then [POPOwner] when "DMA" then [DMA] when "Facility" then [Facility Code (copy)_1833246535353614354] END
  }

measure: c_gt_category {
    description: "Calculated field: (If [Calculation_985162433627725827]=1 THEN [C_variance (copy)_1246089764049227796] ELSE ROUND([Calculation_1246089764055609367],2) END)"
    type: number
    sql: CASE WHEN (${c_size_calc} = 1) THEN ${c_category_variance_percent} ELSE ROUND(${c_category_sumtotal}, 2) END ;;


    # Original Tableau formula: (If [Calculation_985162433627725827]=1 THEN [C_variance (copy)_1246089764049227796] ELSE ROUND([Calculation_1246089764055609367],2) END)
  }

measure: c_category_sumtotal {
    description: "Calculated field: SUM([NPPerDay_Num])/Sum([NPPerDay_Den])"
    type: number
    sql: (SUM(${TABLE}.`NPPerDay_Num`) / NULLIF(SUM(${TABLE}.`NPPerDay_Den`), 0)) ;;


    # Original Tableau formula: SUM([NPPerDay_Num])/Sum([NPPerDay_Den])
  }

measure: schedule_efficiency {
    description: "Calculated field: SUM([Efficiency_Num])/SUM([Efficiency_Den])"
    type: number
    sql: (SUM(${TABLE}.`Efficiency_Num`) / NULLIF(SUM(${TABLE}.`Efficiency_Den`), 0)) ;;


    # Original Tableau formula: SUM([Efficiency_Num])/SUM([Efficiency_Den])
  }

measure: last {
    description: "Calculated field: if last() <=12 then 'show' else 'hide' END"
    type: sum
    sql: ${last_calc} ;;


    # Original Tableau formula: if last() <=12 then 'show' else 'hide' END
  }

  dimension: data_through {
    description: "Calculated field: 'Data Through '+STR(MONTH({ FIXED : MAX([LastDay])}))+'/'+STR(DAY({ FIXED : MAX([LastDay])}))+'/'+STR(YEAR({ FIXED : MAX([LastDay])}))"
    type: string
    sql: ((((('Data Through ' || CAST(EXTRACT(MONTH FROM (SELECT MAX(${TABLE}.`LastDay`) FROM ${TABLE})) AS STRING)) || '/') || CAST(EXTRACT(DAY FROM (SELECT MAX(${TABLE}.`LastDay`) FROM ${TABLE})) AS STRING)) || '/') || CAST(EXTRACT(YEAR FROM (SELECT MAX(${TABLE}.`LastDay`) FROM ${TABLE})) AS STRING)) ;;
    # Original Tableau formula: 'Data Through '+STR(MONTH({ FIXED : MAX([LastDay])}))+'/'+STR(DAY({ FIXED : MAX([LastDay])}))+'/'+STR(YEAR({ FIXED : MAX([LastDay])}))
  }

  dimension: filter_aggregation2 {
    description: "Calculated field: [Parameters].[Parameter 6] = [AGGREGATION]"
    type: yesno
    sql: ({% parameter parameter_6 %} = ${TABLE}.`AGGREGATION`) ;;
    # Original Tableau formula: [Parameters].[Parameter 6] = [AGGREGATION]
  }

  dimension: p_office_group {
    description: "Calculated field: if [Parameters].[Parameter 5] = [Mature] then \"1\" else \"0\" END"
    type: string
    sql: CASE WHEN ({% parameter parameter_5 %} = ${TABLE}.`Mature`) THEN '1' ELSE '0' END ;;
    # Original Tableau formula: if [Parameters].[Parameter 5] = [Mature] then "1" else "0" END
  }

measure: pc_block_percent {
    description: "Calculated field: SUM([PCBlockHours])/SUM([PCScheduleHours])"
    type: number
    sql: (SUM(${TABLE}.`PCBlockHours`) / NULLIF(SUM(${TABLE}.`PCScheduleHours`), 0)) ;;


    # Original Tableau formula: SUM([PCBlockHours])/SUM([PCScheduleHours])
  }

measure: inefficient_percent {
    description: "Calculated field: SUM([TotalInefficientHoursPCandNP])/SUM([TotalScheduleHoursPCandNP])"
    type: number
    sql: (SUM(${TABLE}.`TotalInefficientHoursPCandNP`) / NULLIF(SUM(${TABLE}.`TotalScheduleHoursPCandNP`), 0)) ;;


    # Original Tableau formula: SUM([TotalInefficientHoursPCandNP])/SUM([TotalScheduleHoursPCandNP])
  }

measure: nppc_blocked {
    description: "Calculated field: [PCBlockHours]+ [PCBlockHours]"
    type: sum
    sql: ${nppc_blocked_calc} ;;


    # Original Tableau formula: [PCBlockHours]+ [PCBlockHours]
  }

measure: blank_number {
    description: "Calculated field: sum(null)"
    type: number
    sql: SUM(NULL) ;;


    # Original Tableau formula: sum(null)
  }

  dimension: p_np_pop_up {
    description: "Calculated field: IF [Parameters].[Parameter 9] = 'Show' THEN TRUE ELSE FALSE END"
    type: yesno
    sql: CASE WHEN ({% parameter parameter_9 %} = 'Show') THEN TRUE ELSE FALSE END ;;
    # Original Tableau formula: IF [Parameters].[Parameter 9] = 'Show' THEN TRUE ELSE FALSE END
  }

measure: comptoproblemfocusedexams {
    description: "Calculated field: sum([ComptoProblemFocusedExams_Num])/sum([ComptoProblemFocusedExams_Den])"
    type: number
    sql: (SUM(${TABLE}.`ComptoProblemFocusedExams_Num`) / NULLIF(SUM(${TABLE}.`ComptoProblemFocusedExams_Den`), 0)) ;;


    # Original Tableau formula: sum([ComptoProblemFocusedExams_Num])/sum([ComptoProblemFocusedExams_Den])
  }

measure: npapptperday {
    description: "Calculated field: sum([NPShowRate_Den]) /sum([NPPerDay_Den])"
    type: number
    sql: (SUM(${TABLE}.`NPShowRate_Den`) / NULLIF(SUM(${TABLE}.`NPPerDay_Den`), 0)) ;;


    # Original Tableau formula: sum([NPShowRate_Den]) /sum([NPPerDay_Den])
  }

  dimension: p_close_np_pop_up {
    description: "Calculated field: IF [Parameters].[Parameter 9]= 'Hide' THEN TRUE ELSE FALSE END"
    type: yesno
    sql: CASE WHEN ({% parameter parameter_9 %} = 'Hide') THEN TRUE ELSE FALSE END ;;
    # Original Tableau formula: IF [Parameters].[Parameter 9]= 'Hide' THEN TRUE ELSE FALSE END
  }

  dimension: key_1 {
    description: "Calculated field: FLOAT(\"Yesterday\")"
    type: number
    sql: CAST('Yesterday' AS FLOAT64) ;;
    # Original Tableau formula: FLOAT("Yesterday")
  }

  dimension: yesterday {
    description: "Calculated field: \" \""
    type: string
    sql: ' ' ;;
    # Original Tableau formula: " "
  }

  dimension: mtd {
    description: "Calculated field: \"\""
    type: string
    sql: '' ;;
    # Original Tableau formula: ""
  }

  dimension: mtd_rank {
    description: "Calculated field: \"\""
    type: string
    sql: '' ;;
    # Original Tableau formula: ""
  }

  dimension: mtd_t20_percent {
    description: "Calculated field: \"\""
    type: string
    sql: '' ;;
    # Original Tableau formula: ""
  }

  dimension: ytd_t20_percent {
    description: "Calculated field: \"\""
    type: string
    sql: '' ;;
    # Original Tableau formula: ""
  }

  dimension: ytd {
    description: "Calculated field: \"\""
    type: string
    sql: '' ;;
    # Original Tableau formula: ""
  }

  dimension: ytd_rank {
    description: "Calculated field: \"\""
    type: string
    sql: '' ;;
    # Original Tableau formula: ""
  }

  dimension: filter_aggregation {
    description: "Calculated field: [Parameters].[Parameter 6]= [AGGREGATION] OR [AGGREGATION] = NULL"
    type: yesno
    sql: (({% parameter parameter_6 %} = ${TABLE}.`AGGREGATION`) OR (${TABLE}.`AGGREGATION` IS NULL)) ;;
    # Original Tableau formula: [Parameters].[Parameter 6]= [AGGREGATION] OR [AGGREGATION] = NULL
  }

measure: show_title {
    description: "Calculated field: IF [Calculation_119908351402987520] = [Calculation_1990309626125324305] THEN TRUE ELSE FALSE END"
    type: sum
    sql: ${show_title_calc} ;;


    # Original Tableau formula: IF [Calculation_119908351402987520] = [Calculation_1990309626125324305] THEN TRUE ELSE FALSE END
  }

  dimension: graph_filter_number {
    description: "Calculated field: if [Parameters].[Parameter 4] IN ('NP Per Day' ,'EP Per Day' ,'NP Days to 1st Appointment ', 'NP Appt Per Day' ,'NP ApptLength Adult' ) then TRUE ELSE FALSE END"
    type: yesno
    sql: CASE WHEN ({% parameter parameter_4 %} IN ('NP Per Day', 'EP Per Day', 'NP Days to 1st Appointment ', 'NP Appt Per Day', 'NP ApptLength Adult')) THEN TRUE ELSE FALSE END ;;
    # Original Tableau formula: if [Parameters].[Parameter 4] IN ('NP Per Day' ,'EP Per Day' ,'NP Days to 1st Appointment ', 'NP Appt Per Day' ,'NP ApptLength Adult' ) then TRUE ELSE FALSE END
  }

measure: avg_np_per_day {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

  dimension: p_yoy_header {
    description: "Calculated field: if [Parameters].[Parameter 1] = [FirstOfMonth] and [Parameters].[Parameter 3] = [MtdOrYtdCode] then '1' ELSEIF [Parameters].[Month Selector (copy)_1990309625421819904]= [FirstOfMonth] and [Parameters].[MTD or YTD (copy)_1990309625422229507] = [MtdOrYtdCode] then '2' ELSE \"0\" END"
    type: string
    sql: CASE WHEN (({% parameter parameter_1 %} = ${TABLE}.`FirstOfMonth`) AND ({% parameter parameter_3 %} = ${TABLE}.`MtdOrYtdCode`)) THEN '1' ELSE CASE WHEN (({% parameter month_selector_copy_1990309625421819904 %} = ${TABLE}.`FirstOfMonth`) AND ({% parameter mtd_or_ytd_copy_1990309625422229507 %} = ${TABLE}.`MtdOrYtdCode`)) THEN '2' ELSE '0' END END ;;
    # Original Tableau formula: if [Parameters].[Parameter 1] = [FirstOfMonth] and [Parameters].[Parameter 3] = [MtdOrYtdCode] then '1' ELSEIF [Parameters].[Month Selector (copy)_1990309625421819904]= [FirstOfMonth] and [Parameters].[MTD or YTD (copy)_1990309625422229507] = [MtdOrYtdCode] then '2' ELSE "0" END
  }

  dimension: icon1 {
    description: "Calculated field: \"Metrics YOY\""
    type: string
    sql: 'Metrics YOY' ;;
    # Original Tableau formula: "Metrics YOY"
  }

measure: p_metrics_list_yoy {
    description: "Calculated field: case [Parameters].[Parameter 4] WHEN 'NP Per Day' then [NP Per Day Den (copy)_929711906806022187] when 'EP Per Day' then [Existing Patients Per Day Den (copy)_929711906805882914] when 'Avg Days Until First Visit'THEN [Avg Days Until First Visit Den (copy)_929711906805768216] when 'NP Show Rate' THEN [NP Show Rate Den (copy)_929711906806100013] when 'EP Show Rate' THEN [EP Show Rate Den (copy)_929711906805817372] when 'NP Yes Today! ' THEN [NP Yes Today! Den (copy)_929711906806132784] when 'EP Yes Today! ' THEN [EP Yes Today! Den (copy)_929711906805854239] when 'Percent Credit Applications With Tx Over $500' THEN [Percent Credit Applications With Tx Over $500 Den (copy)_929711906806194230] when 'New Patient Otc' THEN [New Patient Otc Den (copy)_929711906805993513] when 'NP Tx Presented Per NP' THEN [NP Tx Presented Per NP Den (copy)_929711906806120495] when 'NP Tx Accepted Per NP' THEN [NP Tx Accepted Per NP Den (copy)_929711906806108206] when 'EP Tx Presented Per EP' THEN [EP Tx Presented Per EP Den (copy)_929711906805837854] when 'EP Tx Accepted Per EP' THEN [EP Tx Accepted Per EP Den (copy)_929711906805829661] when 'Oral Health Scan%' THEN [Oral Health Scan% Den (copy)_929711906806149170] when 'TAPA/PAR Sales' THEN [TAPA/PAR Sales Den (copy)_929711906806247483] when 'Doctor FTE Per Office' THEN [Doctor FTE Per Office Den (copy)_929711906805809179] when 'MCD Production Per Day' THEN [MCD Production Per Day Den (copy)_929711906805960742] when 'Associate Production Per Day' THEN [Associate Production Per Day Den (copy)_929711906805641239] when 'Hygiene Revenue per Day' THEN [Hygiene Revenue per Day Den (copy)_929711906805915684] when 'Ortho Starts Per Office Per Month' THEN [Ortho Starts Per Office Per Month Den (copy)_929711906806157363] when 'Percent Of Schedule' THEN [Percent Of Schedule Den (copy)_929711906806218808] when 'NP Same Day Starts%' THEN [NP Same Day Starts% Den (copy)_929711906806030380] when '% of patient leaving with appt' THEN [% of patient leaving with appt Den (copy)_929711906805620757] when 'New Patient Tx Plan Completion Rate' THEN [New Patient Tx Plan Completion Rate Den (copy)_929711906806005802] when 'Dentures' THEN [Dentures Den (copy)_929711906808074301] when 'Dentistry' THEN [Dentistry Den (copy)_929711906805800986] when 'Hygiene' THEN [Hygiene Den (copy)_929711906805891107] when 'Specialty' THEN [Specialty Den (copy)_929711906806239290] when 'Orthodontics' THEN [Orthodontics Den (copy)_929711906806177844] when 'Crown & Bridge' THEN [Crown & Bridge Den (copy)_929711906805784601] when 'Implants' THEN [Implants Den (copy)_929711906805952549] when 'Production' THEN [Production Den (copy)_929711906806231097] when 'Net Promoter Score ALL' THEN [Net Promoter Score ALL Den (copy)_929711906805973031] when 'Net Promoter Score' THEN [Net Promoter Score Den (copy)_929711906805981224] when 'Patient Satisfaction' THEN [Patient Satisfaction Den (copy)_929711906806186037] when 'Online Review Ratings' THEN [Online Review Ratings Den (copy)_929711906806140977] when 'Added to schedule' THEN [added to schedule Den (copy)_929711906805628950] when 'Estimated Production Current Month' THEN [Estimated Production Current Month Den (copy)_929711906805874721] when 'Estimated Production Budget Variance Current Month' THEN [Estimated Production Budget Variance Current Month Den (copy)_929711906805862432] when 'Total Deposit' THEN [Total Deposit Den (copy)_929711906806259772] when 'Percent of Balance Collected' THEN [Percent of Balance Collected Den (copy)_929711906806206519] when 'NP Appt Per Day' then [Calculation_1724878671933485065] when 'NP Comp to Problem Focused Exams' then [Calculation_1724878671933153287] when 'NP ApptLength Adult' then AVG([ApptLength_Adult]) when 'PC Block%' then [Calculation_1724878671912910848] when 'NP Block%' then [PC Block Percent (copy)_1724878671913291777] when 'Inefficient%' then [Calculation_1724878671913504770] END"
    type: number
    sql: CASE WHEN ({% parameter parameter_4 %} = 'NP Per Day') THEN ${np_per_day} WHEN ({% parameter parameter_4 %} = 'EP Per Day') THEN ${existing_patients_per_day} WHEN ({% parameter parameter_4 %} = 'Avg Days Until First Visit') THEN ${avg_days_until_first_visit} WHEN ({% parameter parameter_4 %} = 'NP Show Rate') THEN ${np_show_rate} WHEN ({% parameter parameter_4 %} = 'EP Show Rate') THEN ${ep_show_rate} WHEN ({% parameter parameter_4 %} = 'NP Yes Today! ') THEN ${np_yes_today_2} WHEN ({% parameter parameter_4 %} = 'EP Yes Today! ') THEN ${ep_yes_today_2} WHEN ({% parameter parameter_4 %} = 'Percent Credit Applications With Tx Over $500') THEN ${percent_credit_applications_with_tx_over_500} WHEN ({% parameter parameter_4 %} = 'New Patient Otc') THEN ${new_patient_otc} WHEN ({% parameter parameter_4 %} = 'NP Tx Presented Per NP') THEN ${np_tx_presented_per_np} WHEN ({% parameter parameter_4 %} = 'NP Tx Accepted Per NP') THEN ${np_tx_accepted_per_np} WHEN ({% parameter parameter_4 %} = 'EP Tx Presented Per EP') THEN ${ep_tx_presented_per_ep} WHEN ({% parameter parameter_4 %} = 'EP Tx Accepted Per EP') THEN ${ep_tx_accepted_per_ep} WHEN ({% parameter parameter_4 %} = 'Oral Health Scan%') THEN ${oral_health_scan_percent} WHEN ({% parameter parameter_4 %} = 'TAPA/PAR Sales') THEN ${tapa_par_sales} WHEN ({% parameter parameter_4 %} = 'Doctor FTE Per Office') THEN ${doctor_fte_per_office} WHEN ({% parameter parameter_4 %} = 'MCD Production Per Day') THEN ${mcd_production_per_day} WHEN ({% parameter parameter_4 %} = 'Associate Production Per Day') THEN ${associate_production_per_day} WHEN ({% parameter parameter_4 %} = 'Hygiene Revenue per Day') THEN ${hygiene_revenue_per_day} WHEN ({% parameter parameter_4 %} = 'Ortho Starts Per Office Per Month') THEN ${ortho_starts_per_office_per_month} WHEN ({% parameter parameter_4 %} = 'Percent Of Schedule') THEN ${percent_of_schedule} WHEN ({% parameter parameter_4 %} = 'NP Same Day Starts%') THEN ${np_same_day_starts_percent} WHEN ({% parameter parameter_4 %} = '% of patient leaving with appt') THEN ${percent_of_patient_leaving_with_appt} WHEN ({% parameter parameter_4 %} = 'New Patient Tx Plan Completion Rate') THEN ${new_patient_tx_plan_completion_rate} WHEN ({% parameter parameter_4 %} = 'Dentures') THEN ${dentures} WHEN ({% parameter parameter_4 %} = 'Dentistry') THEN ${dentistry} WHEN ({% parameter parameter_4 %} = 'Hygiene') THEN ${hygiene} WHEN ({% parameter parameter_4 %} = 'Specialty') THEN ${specialty} WHEN ({% parameter parameter_4 %} = 'Orthodontics') THEN ${orthodontics} WHEN ({% parameter parameter_4 %} = 'Crown & Bridge') THEN ${crown_bridge} WHEN ({% parameter parameter_4 %} = 'Implants') THEN ${implants} WHEN ({% parameter parameter_4 %} = 'Production') THEN ${production} WHEN ({% parameter parameter_4 %} = 'Net Promoter Score ALL') THEN ${net_promoter_score_all} WHEN ({% parameter parameter_4 %} = 'Net Promoter Score') THEN ${net_promoter_score} WHEN ({% parameter parameter_4 %} = 'Patient Satisfaction') THEN ${patient_satisfaction} WHEN ({% parameter parameter_4 %} = 'Online Review Ratings') THEN ${online_review_ratings} WHEN ({% parameter parameter_4 %} = 'Added to schedule') THEN ${added_to_schedule} WHEN ({% parameter parameter_4 %} = 'Estimated Production Current Month') THEN ${estimated_production_current_month} WHEN ({% parameter parameter_4 %} = 'Estimated Production Budget Variance Current Month') THEN ${estimated_production_budget_variance_current_month} WHEN ({% parameter parameter_4 %} = 'Total Deposit') THEN ${total_deposit} WHEN ({% parameter parameter_4 %} = 'Percent of Balance Collected') THEN ${percent_of_balance_collected} WHEN ({% parameter parameter_4 %} = 'NP Appt Per Day') THEN ${npapptperday} WHEN ({% parameter parameter_4 %} = 'NP Comp to Problem Focused Exams') THEN ${comptoproblemfocusedexams} WHEN ({% parameter parameter_4 %} = 'NP ApptLength Adult') THEN AVG(${TABLE}.`ApptLength_Adult`) WHEN ({% parameter parameter_4 %} = 'PC Block%') THEN ${pc_block_percent} WHEN ({% parameter parameter_4 %} = 'NP Block%') THEN ${np_block_percent} WHEN ({% parameter parameter_4 %} = 'Inefficient%') THEN ${inefficient_percent} END ;;


    # Original Tableau formula: case [Parameters].[Parameter 4] WHEN 'NP Per Day' then [NP Per Day Den (copy)_929711906806022187] when 'EP Per Day' then [Existing Patients Per Day Den (copy)_929711906805882914] when 'Avg Days Until First Visit'THEN [Avg Days Until First Visit Den (copy)_929711906805768216] when 'NP Show Rate' THEN [NP Show Rate Den (copy)_929711906806100013] when 'EP Show Rate' THEN [EP Show Rate Den (copy)_929711906805817372] when 'NP Yes Today! ' THEN [NP Yes Today! Den (copy)_929711906806132784] when 'EP Yes Today! ' THEN [EP Yes Today! Den (copy)_929711906805854239] when 'Percent Credit Applications With Tx Over $500' THEN [Percent Credit Applications With Tx Over $500 Den (copy)_929711906806194230] when 'New Patient Otc' THEN [New Patient Otc Den (copy)_929711906805993513] when 'NP Tx Presented Per NP' THEN [NP Tx Presented Per NP Den (copy)_929711906806120495] when 'NP Tx Accepted Per NP' THEN [NP Tx Accepted Per NP Den (copy)_929711906806108206] when 'EP Tx Presented Per EP' THEN [EP Tx Presented Per EP Den (copy)_929711906805837854] when 'EP Tx Accepted Per EP' THEN [EP Tx Accepted Per EP Den (copy)_929711906805829661] when 'Oral Health Scan%' THEN [Oral Health Scan% Den (copy)_929711906806149170] when 'TAPA/PAR Sales' THEN [TAPA/PAR Sales Den (copy)_929711906806247483] when 'Doctor FTE Per Office' THEN [Doctor FTE Per Office Den (copy)_929711906805809179] when 'MCD Production Per Day' THEN [MCD Production Per Day Den (copy)_929711906805960742] when 'Associate Production Per Day' THEN [Associate Production Per Day Den (copy)_929711906805641239] when 'Hygiene Revenue per Day' THEN [Hygiene Revenue per Day Den (copy)_929711906805915684] when 'Ortho Starts Per Office Per Month' THEN [Ortho Starts Per Office Per Month Den (copy)_929711906806157363] when 'Percent Of Schedule' THEN [Percent Of Schedule Den (copy)_929711906806218808] when 'NP Same Day Starts%' THEN [NP Same Day Starts% Den (copy)_929711906806030380] when '% of patient leaving with appt' THEN [% of patient leaving with appt Den (copy)_929711906805620757] when 'New Patient Tx Plan Completion Rate' THEN [New Patient Tx Plan Completion Rate Den (copy)_929711906806005802] when 'Dentures' THEN [Dentures Den (copy)_929711906808074301] when 'Dentistry' THEN [Dentistry Den (copy)_929711906805800986] when 'Hygiene' THEN [Hygiene Den (copy)_929711906805891107] when 'Specialty' THEN [Specialty Den (copy)_929711906806239290] when 'Orthodontics' THEN [Orthodontics Den (copy)_929711906806177844] when 'Crown & Bridge' THEN [Crown & Bridge Den (copy)_929711906805784601] when 'Implants' THEN [Implants Den (copy)_929711906805952549] when 'Production' THEN [Production Den (copy)_929711906806231097] when 'Net Promoter Score ALL' THEN [Net Promoter Score ALL Den (copy)_929711906805973031] when 'Net Promoter Score' THEN [Net Promoter Score Den (copy)_929711906805981224] when 'Patient Satisfaction' THEN [Patient Satisfaction Den (copy)_929711906806186037] when 'Online Review Ratings' THEN [Online Review Ratings Den (copy)_929711906806140977] when 'Added to schedule' THEN [added to schedule Den (copy)_929711906805628950] when 'Estimated Production Current Month' THEN [Estimated Production Current Month Den (copy)_929711906805874721] when 'Estimated Production Budget Variance Current Month' THEN [Estimated Production Budget Variance Current Month Den (copy)_929711906805862432] when 'Total Deposit' THEN [Total Deposit Den (copy)_929711906806259772] when 'Percent of Balance Collected' THEN [Percent of Balance Collected Den (copy)_929711906806206519] when 'NP Appt Per Day' then [Calculation_1724878671933485065] when 'NP Comp to Problem Focused Exams' then [Calculation_1724878671933153287] when 'NP ApptLength Adult' then AVG([ApptLength_Adult]) when 'PC Block%' then [Calculation_1724878671912910848] when 'NP Block%' then [PC Block Percent (copy)_1724878671913291777] when 'Inefficient%' then [Calculation_1724878671913504770] END
  }

  dimension: true {
    description: "Calculated field: TRUE"
    type: yesno
    sql: TRUE ;;
    # Original Tableau formula: TRUE
  }

  dimension: maxmonth_lastbd {
    description: "Calculated field: { FIXED : MAX([FirstOfMonth_LastBD])}"
    type: date_raw
    sql: (SELECT MAX(${TABLE}.`FirstOfMonth_LastBD`) FROM ${TABLE}) ;;
    # Original Tableau formula: { FIXED : MAX([FirstOfMonth_LastBD])}
  }

  dimension: p_close {
    description: "Calculated field: IF [Parameters].[Parameter 9] = 'Hide' THEN TRUE ELSE FALSE END"
    type: yesno
    sql: CASE WHEN ({% parameter parameter_9 %} = 'Hide') THEN TRUE ELSE FALSE END ;;
    # Original Tableau formula: IF [Parameters].[Parameter 9] = 'Hide' THEN TRUE ELSE FALSE END
  }

  dimension: highlight_true {
    description: "Calculated field: [Calculation_1990309626125324305]"
    type: yesno
    sql: ${true} ;;
    # Original Tableau formula: [Calculation_1990309626125324305]
  }

measure: p_show_hide {
    description: "Calculated field: if [Calculation_119908351402987520] = [Calculation_1990309626125324305] then [Calculation_1990309626125324305] ELSE [TRUE (copy)_1990309626125467666] end"
    type: sum
    sql: ${p_show_hide_calc} ;;


    # Original Tableau formula: if [Calculation_119908351402987520] = [Calculation_1990309626125324305] then [Calculation_1990309626125324305] ELSE [TRUE (copy)_1990309626125467666] end
  }

measure: estimatedproductioncurrentmonthrank {
    description: "Calculated field: IF [Parameters].[Parameter 8] THEN NULL ELSE [EstimatedProductionCurrentMonth_Rank] END"
    type: sum
    sql: ${estimatedproductioncurrentmonthrank_calc} ;;


    # Original Tableau formula: IF [Parameters].[Parameter 8] THEN NULL ELSE [EstimatedProductionCurrentMonth_Rank] END
  }

measure: estimatedproductionbudgetvariancecurrentmonthrank {
    description: "Calculated field: IF [Parameters].[Parameter 8] THEN NULL ELSE [EstimatedProductionBudgetVarianceCurrentMonth_Rank] END"
    type: sum
    sql: ${estimatedproductionbudgetvariancecurrentmonthrank_calc} ;;


    # Original Tableau formula: IF [Parameters].[Parameter 8] THEN NULL ELSE [EstimatedProductionBudgetVarianceCurrentMonth_Rank] END
  }

  dimension: heat_map_ytd_rank {
    description: "Calculated field: [Parameters].[Parameter 6]"
    type: string
    sql: {% parameter parameter_6 %} ;;
    # Original Tableau formula: [Parameters].[Parameter 6]
  }

measure: empty_1 {
    description: "Calculated field: int(null)"
    type: sum
    sql: ${empty_1_calc} ;;


    # Original Tableau formula: int(null)
  }

measure: mtd_percent_estimated_prod_var_to_bud {
    description: "Calculated field: [Estimated Production Budget Variance Current Month Den (copy)_929711906805862432]/[Estimated Production Current Month Den (copy)_929711906805874721]"
    type: number
    sql: (${estimated_production_budget_variance_current_month} / NULLIF(${estimated_production_current_month}, 0)) ;;


    # Original Tableau formula: [Estimated Production Budget Variance Current Month Den (copy)_929711906805862432]/[Estimated Production Current Month Den (copy)_929711906805874721]
  }

measure: c_size {
    description: "Calculated field: SIZE()"
    type: number
    sql: ${c_size_calc} ;;


    # Original Tableau formula: SIZE()
  }

measure: npperday_variance {
    description: "Calculated field: IF [Calculation_985162433627725827] = 1 then ( ((Sum(IF [Calculation_1990309625422495748]='1' THEN [NPPerDay_Num] END)/Sum(IF [Calculation_1990309625422495748]='1' THEN [NPPerDay_Den] END)) - (Sum(IF [Calculation_1990309625422495748]='2' THEN [NPPerDay_Num] END)/Sum(IF [Calculation_1990309625422495748]='2' THEN [NPPerDay_Den] END))) / (Sum(IF [Calculation_1990309625422495748]='2' THEN [NPPerDay_Num] END)/Sum(IF [Calculation_1990309625422495748]='2' THEN [NPPerDay_Den] END)) ) ELSE [NP Per Day Den (copy)_929711906806022187] END"
    type: number
    sql: CASE WHEN (${c_size_calc} = 1) THEN (((SUM(CASE WHEN (${p_yoy_header} = '1') THEN ${TABLE}.`NPPerDay_Num` ELSE NULL END) / NULLIF(SUM(CASE WHEN (${p_yoy_header} = '1') THEN ${TABLE}.`NPPerDay_Den` ELSE NULL END), 0)) - (SUM(CASE WHEN (${p_yoy_header} = '2') THEN ${TABLE}.`NPPerDay_Num` ELSE NULL END) / NULLIF(SUM(CASE WHEN (${p_yoy_header} = '2') THEN ${TABLE}.`NPPerDay_Den` ELSE NULL END), 0))) / NULLIF((SUM(CASE WHEN (${p_yoy_header} = '2') THEN ${TABLE}.`NPPerDay_Num` ELSE NULL END) / NULLIF(SUM(CASE WHEN (${p_yoy_header} = '2') THEN ${TABLE}.`NPPerDay_Den` ELSE NULL END), 0)), 0)) ELSE ${np_per_day} END ;;


    # Original Tableau formula: IF [Calculation_985162433627725827] = 1 then ( ((Sum(IF [Calculation_1990309625422495748]='1' THEN [NPPerDay_Num] END)/Sum(IF [Calculation_1990309625422495748]='1' THEN [NPPerDay_Den] END)) - (Sum(IF [Calculation_1990309625422495748]='2' THEN [NPPerDay_Num] END)/Sum(IF [Calculation_1990309625422495748]='2' THEN [NPPerDay_Den] END))) / (Sum(IF [Calculation_1990309625422495748]='2' THEN [NPPerDay_Num] END)/Sum(IF [Calculation_1990309625422495748]='2' THEN [NPPerDay_Den] END)) ) ELSE [NP Per Day Den (copy)_929711906806022187] END
  }

  dimension: p_click_to_view {
    description: "Calculated field: case [Parameters].[Parameter 7] when \"Switch to All Aspen View\" THEN \"Switch to My Office(s) View\" when \"Switch to My Office(s) View\" then \"Switch to All Aspen View\" END"
    type: string
    sql: CASE WHEN ({% parameter parameter_7 %} = 'Switch to All Aspen View') THEN 'Switch to My Office(s) View' WHEN ({% parameter parameter_7 %} = 'Switch to My Office(s) View') THEN 'Switch to All Aspen View' END ;;
    # Original Tableau formula: case [Parameters].[Parameter 7] when "Switch to All Aspen View" THEN "Switch to My Office(s) View" when "Switch to My Office(s) View" then "Switch to All Aspen View" END
  }

measure: crown_bridgecolor_flag {
    description: "Calculated field: INT(if (sum([CrownBridge_Num])/sum([CrownBridge_Den])) >=AVG([CrownBridgeTop20] )then 2 elseif ( [Crown & Bridge Den (copy)_929711906805784601]) <= AVG([CrownBridgeBottom20] ) then 1 END)"
    type: number
    sql: CAST(CASE WHEN ((SUM(${TABLE}.`CrownBridge_Num`) / NULLIF(SUM(${TABLE}.`CrownBridge_Den`), 0)) >= AVG(${TABLE}.`CrownBridgeTop20`)) THEN 2 ELSE CASE WHEN (${crown_bridge} <= AVG(${TABLE}.`CrownBridgeBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if (sum([CrownBridge_Num])/sum([CrownBridge_Den])) >=AVG([CrownBridgeTop20] )then 2 elseif ( [Crown & Bridge Den (copy)_929711906805784601]) <= AVG([CrownBridgeBottom20] ) then 1 END)
  }

measure: crown_bridge {
    description: "Calculated field: sum([CrownBridge_Num])"
    type: number
    sql: SUM(${TABLE}.`CrownBridge_Num`) ;;


    # Original Tableau formula: sum([CrownBridge_Num])
  }

measure: crown_bridgecolor_flag_copy {
    description: "Calculated field: INT(if (sum([CrownBridge_Num])/sum([CrownBridge_Den])) >=SUM([CrownBridgeTop20] )then 2 elseif ( sum([CrownBridge_Num])/sum([CrownBridge_Den])) <= SUM([CrownBridgeBottom20] ) then 1 END)"
    type: number
    sql: CAST(CASE WHEN ((SUM(${TABLE}.`CrownBridge_Num`) / NULLIF(SUM(${TABLE}.`CrownBridge_Den`), 0)) >= SUM(${TABLE}.`CrownBridgeTop20`)) THEN 2 ELSE CASE WHEN ((SUM(${TABLE}.`CrownBridge_Num`) / NULLIF(SUM(${TABLE}.`CrownBridge_Den`), 0)) <= SUM(${TABLE}.`CrownBridgeBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if (sum([CrownBridge_Num])/sum([CrownBridge_Den])) >=SUM([CrownBridgeTop20] )then 2 elseif ( sum([CrownBridge_Num])/sum([CrownBridge_Den])) <= SUM([CrownBridgeBottom20] ) then 1 END)
  }

measure: dentistrycolor_flag {
    description: "Calculated field: INT(if (SUM([Dentistry_Num])/SUM([Dentistry_Den] ) >=AVG( [DentistryTop20]))then 2 elseif (SUM([Dentistry_Num])/SUM([Dentistry_Den] ) ) <= AVG( [DentistryBottom20] ) then 1 END)"
    type: number
    sql: CAST(CASE WHEN ((SUM(${TABLE}.`Dentistry_Num`) / NULLIF(SUM(${TABLE}.`Dentistry_Den`), 0)) >= AVG(${TABLE}.`DentistryTop20`)) THEN 2 ELSE CASE WHEN ((SUM(${TABLE}.`Dentistry_Num`) / NULLIF(SUM(${TABLE}.`Dentistry_Den`), 0)) <= AVG(${TABLE}.`DentistryBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if (SUM([Dentistry_Num])/SUM([Dentistry_Den] ) >=AVG( [DentistryTop20]))then 2 elseif (SUM([Dentistry_Num])/SUM([Dentistry_Den] ) ) <= AVG( [DentistryBottom20] ) then 1 END)
  }

measure: dentistry {
    description: "Calculated field: sum([Dentistry_Num])"
    type: number
    sql: SUM(${TABLE}.`Dentistry_Num`) ;;


    # Original Tableau formula: sum([Dentistry_Num])
  }

measure: denturescolor_flag {
    description: "Calculated field: INT(if SUM([Dentures_Num])/SUM([Dentures_Den]) >AVG( [DenturesTop20])then 2 elseif ([Dentures Den (copy)_929711906808074301] ) < AVG( [DenturesBottom20]) then 1 END)"
    type: number
    sql: CAST(CASE WHEN ((SUM(${TABLE}.`Dentures_Num`) / NULLIF(SUM(${TABLE}.`Dentures_Den`), 0)) > AVG(${TABLE}.`DenturesTop20`)) THEN 2 ELSE CASE WHEN (${dentures} < AVG(${TABLE}.`DenturesBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if SUM([Dentures_Num])/SUM([Dentures_Den]) >AVG( [DenturesTop20])then 2 elseif ([Dentures Den (copy)_929711906808074301] ) < AVG( [DenturesBottom20]) then 1 END)
  }

measure: dentures {
    description: "Calculated field: SUM([Dentures_Num])"
    type: number
    sql: SUM(${TABLE}.`Dentures_Num`) ;;


    # Original Tableau formula: SUM([Dentures_Num])
  }

measure: doctor_fte_per_officecolor_flag {
    description: "Calculated field: INT(if ([Doctor FTE Per Office Den (copy)_929711906805809179] ) >=avg([DoctorFTETop20] )then 2 elseif ( [Doctor FTE Per Office Den (copy)_929711906805809179]) <= avg( [DoctorFTEBottom20]) THEN 1 END)"
    type: number
    sql: CAST(CASE WHEN (${doctor_fte_per_office} >= AVG(${TABLE}.`DoctorFTETop20`)) THEN 2 ELSE CASE WHEN (${doctor_fte_per_office} <= AVG(${TABLE}.`DoctorFTEBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ([Doctor FTE Per Office Den (copy)_929711906805809179] ) >=avg([DoctorFTETop20] )then 2 elseif ( [Doctor FTE Per Office Den (copy)_929711906805809179]) <= avg( [DoctorFTEBottom20]) THEN 1 END)
  }

measure: doctor_fte_per_office {
    description: "Calculated field: sum([DoctorFTE_Num])/sum([DoctorFTE_Den])"
    type: number
    sql: (SUM(${TABLE}.`DoctorFTE_Num`) / NULLIF(SUM(${TABLE}.`DoctorFTE_Den`), 0)) ;;


    # Original Tableau formula: sum([DoctorFTE_Num])/sum([DoctorFTE_Den])
  }

measure: np_show_rate_same_day_appts {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: ep_show_ratecolor_flag {
    description: "Calculated field: INT(if (sum([EPShowRate_Num])/sum([EPShowRate_Den]) ) >avg([EPShowRateTop20] )then 2 elseif (sum([EPShowRate_Num])/sum([EPShowRate_Den]) ) < avg([EPShowRateBottom20] ) then 1 END)"
    type: number
    sql: CAST(CASE WHEN ((SUM(${TABLE}.`EPShowRate_Num`) / NULLIF(SUM(${TABLE}.`EPShowRate_Den`), 0)) > AVG(${TABLE}.`EPShowRateTop20`)) THEN 2 ELSE CASE WHEN ((SUM(${TABLE}.`EPShowRate_Num`) / NULLIF(SUM(${TABLE}.`EPShowRate_Den`), 0)) < AVG(${TABLE}.`EPShowRateBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if (sum([EPShowRate_Num])/sum([EPShowRate_Den]) ) >avg([EPShowRateTop20] )then 2 elseif (sum([EPShowRate_Num])/sum([EPShowRate_Den]) ) < avg([EPShowRateBottom20] ) then 1 END)
  }

measure: ep_show_rate {
    description: "Calculated field: sum([EPShowRate_Num])/sum([EPShowRate_Den])"
    type: number
    sql: (SUM(${TABLE}.`EPShowRate_Num`) / NULLIF(SUM(${TABLE}.`EPShowRate_Den`), 0)) ;;


    # Original Tableau formula: sum([EPShowRate_Num])/sum([EPShowRate_Den])
  }

measure: ep_tx_accepted_per_epcolor_flag {
    description: "Calculated field: INT(if ([EP Tx Accepted Per EP Den (copy)_929711906805829661]) >=avg( [EPTxAcceptedPerEPTop20] )then 2 elseif ([EP Tx Accepted Per EP Den (copy)_929711906805829661] ) <= avg([EPTxAcceptedPerEPBottom20] ) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${ep_tx_accepted_per_ep} >= AVG(${TABLE}.`EPTxAcceptedPerEPTop20`)) THEN 2 ELSE CASE WHEN (${ep_tx_accepted_per_ep} <= AVG(${TABLE}.`EPTxAcceptedPerEPBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ([EP Tx Accepted Per EP Den (copy)_929711906805829661]) >=avg( [EPTxAcceptedPerEPTop20] )then 2 elseif ([EP Tx Accepted Per EP Den (copy)_929711906805829661] ) <= avg([EPTxAcceptedPerEPBottom20] ) then 1 END)
  }

measure: ep_tx_accepted_per_ep {
    description: "Calculated field: sum([EPTxAcceptedPerEP_Num])/sum([EPTxAcceptedPerEP_Den])"
    type: number
    sql: (SUM(${TABLE}.`EPTxAcceptedPerEP_Num`) / NULLIF(SUM(${TABLE}.`EPTxAcceptedPerEP_Den`), 0)) ;;


    # Original Tableau formula: sum([EPTxAcceptedPerEP_Num])/sum([EPTxAcceptedPerEP_Den])
  }

measure: ep_tx_presented_per_ep_color_flag {
    description: "Calculated field: INT(if ([EP Tx Presented Per EP Den (copy)_929711906805837854]) >=avg([EPTxPresentedPerEPTop20] )then 2 elseif ([EP Tx Presented Per EP Den (copy)_929711906805837854]) <= avg([EPTxPresentedPerEPBottom20]) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${ep_tx_presented_per_ep} >= AVG(${TABLE}.`EPTxPresentedPerEPTop20`)) THEN 2 ELSE CASE WHEN (${ep_tx_presented_per_ep} <= AVG(${TABLE}.`EPTxPresentedPerEPBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ([EP Tx Presented Per EP Den (copy)_929711906805837854]) >=avg([EPTxPresentedPerEPTop20] )then 2 elseif ([EP Tx Presented Per EP Den (copy)_929711906805837854]) <= avg([EPTxPresentedPerEPBottom20]) then 1 END)
  }

measure: ep_tx_presented_per_ep {
    description: "Calculated field: sum([EPTxPresentedPerEP_Num])/sum([EPTxPresentedPerEP_Den])"
    type: number
    sql: (SUM(${TABLE}.`EPTxPresentedPerEP_Num`) / NULLIF(SUM(${TABLE}.`EPTxPresentedPerEP_Den`), 0)) ;;


    # Original Tableau formula: sum([EPTxPresentedPerEP_Num])/sum([EPTxPresentedPerEP_Den])
  }

measure: ep_yes_today_color_flag {
    description: "Calculated field: INT(if ([EP Yes Today! Den (copy)_929711906805854239]) >=avg([EPYesTodayTop20] )then 2 elseif ([EP Yes Today! Den (copy)_929711906805854239]) <= avg([EPYesTodayBottom20]) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${ep_yes_today_2} >= AVG(${TABLE}.`EPYesTodayTop20`)) THEN 2 ELSE CASE WHEN (${ep_yes_today_2} <= AVG(${TABLE}.`EPYesTodayBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ([EP Yes Today! Den (copy)_929711906805854239]) >=avg([EPYesTodayTop20] )then 2 elseif ([EP Yes Today! Den (copy)_929711906805854239]) <= avg([EPYesTodayBottom20]) then 1 END)
  }

measure: ep_yes_today_2 {
    description: "Calculated field: sum([EPYesToday_Num])/sum([EPYesToday_Den])"
    type: number
    sql: (SUM(${TABLE}.`EPYesToday_Num`) / NULLIF(SUM(${TABLE}.`EPYesToday_Den`), 0)) ;;


    # Original Tableau formula: sum([EPYesToday_Num])/sum([EPYesToday_Den])
  }

measure: empty_2 {
    description: "Calculated field: int(null)"
    type: sum
    sql: ${empty_2_calc} ;;


    # Original Tableau formula: int(null)
  }

measure: empty_5 {
    description: "Calculated field: int(null)"
    type: sum
    sql: ${empty_5_calc} ;;


    # Original Tableau formula: int(null)
  }

measure: empty_6 {
    description: "Calculated field: int(null)"
    type: sum
    sql: ${empty_6_calc} ;;


    # Original Tableau formula: int(null)
  }

measure: empty_4 {
    description: "Calculated field: int(null)"
    type: sum
    sql: ${empty_4_calc} ;;


    # Original Tableau formula: int(null)
  }

measure: empty_3 {
    description: "Calculated field: int(null)"
    type: sum
    sql: ${empty_3_calc} ;;


    # Original Tableau formula: int(null)
  }

measure: empty11 {
    description: "Calculated field: int(null)"
    type: sum
    sql: ${empty11_calc} ;;


    # Original Tableau formula: int(null)
  }

measure: empty12 {
    description: "Calculated field: int(null)"
    type: sum
    sql: ${empty12_calc} ;;


    # Original Tableau formula: int(null)
  }

measure: empty_10 {
    description: "Calculated field: int(null)"
    type: sum
    sql: ${empty_10_calc} ;;


    # Original Tableau formula: int(null)
  }

measure: empty_9 {
    description: "Calculated field: int(null)"
    type: sum
    sql: ${empty_9_calc} ;;


    # Original Tableau formula: int(null)
  }

measure: empty_8 {
    description: "Calculated field: int(null)"
    type: sum
    sql: ${empty_8_calc} ;;


    # Original Tableau formula: int(null)
  }

measure: empty_7 {
    description: "Calculated field: int(null)"
    type: sum
    sql: ${empty_7_calc} ;;


    # Original Tableau formula: int(null)
  }

measure: empty14 {
    description: "Calculated field: int(null)"
    type: sum
    sql: ${empty14_calc} ;;


    # Original Tableau formula: int(null)
  }

measure: empty13 {
    description: "Calculated field: int(null)"
    type: sum
    sql: ${empty13_calc} ;;


    # Original Tableau formula: int(null)
  }

measure: empty15 {
    description: "Calculated field: int(null)"
    type: sum
    sql: ${empty15_calc} ;;


    # Original Tableau formula: int(null)
  }

measure: empty21 {
    description: "Calculated field: int(null)"
    type: sum
    sql: ${empty21_calc} ;;


    # Original Tableau formula: int(null)
  }

measure: empty20 {
    description: "Calculated field: int(null)"
    type: sum
    sql: ${empty20_calc} ;;


    # Original Tableau formula: int(null)
  }

measure: empty19 {
    description: "Calculated field: int(null)"
    type: sum
    sql: ${empty19_calc} ;;


    # Original Tableau formula: int(null)
  }

measure: empty18 {
    description: "Calculated field: int(null)"
    type: sum
    sql: ${empty18_calc} ;;


    # Original Tableau formula: int(null)
  }

measure: empty17 {
    description: "Calculated field: int(null)"
    type: sum
    sql: ${empty17_calc} ;;


    # Original Tableau formula: int(null)
  }

measure: empty16 {
    description: "Calculated field: int(null)"
    type: sum
    sql: ${empty16_calc} ;;


    # Original Tableau formula: int(null)
  }

measure: estimated_production_budget_variance_current_month_color_flag {
    description: "Calculated field: INT(if ( [Estimated Production Budget Variance Current Month Den (copy)_929711906805862432]) >0 THEN 2 ELSEif ( [Estimated Production Budget Variance Current Month Den (copy)_929711906805862432]) <0 THEN 1 END)"
    type: number
    sql: CAST(CASE WHEN (${estimated_production_budget_variance_current_month} > 0) THEN 2 ELSE CASE WHEN (${estimated_production_budget_variance_current_month} < 0) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ( [Estimated Production Budget Variance Current Month Den (copy)_929711906805862432]) >0 THEN 2 ELSEif ( [Estimated Production Budget Variance Current Month Den (copy)_929711906805862432]) <0 THEN 1 END)
  }

measure: estimated_production_budget_variance_current_month {
    description: "Calculated field: IF [Parameters].[Parameter 8] THEN NULL ELSE sum([EstimatedProductionBudgetVariance_Num]) END"
    type: number
    sql: CASE WHEN {% parameter parameter_8 %} THEN NULL ELSE SUM(${TABLE}.`EstimatedProductionBudgetVariance_Num`) END ;;


    # Original Tableau formula: IF [Parameters].[Parameter 8] THEN NULL ELSE sum([EstimatedProductionBudgetVariance_Num]) END
  }

measure: estimated_production_current_month {
    description: "Calculated field: IF [Parameters].[Parameter 8] THEN NULL ELSE sum([EstimatedProductionCurrentMonth_Num]) END"
    type: number
    sql: CASE WHEN {% parameter parameter_8 %} THEN NULL ELSE SUM(${TABLE}.`EstimatedProductionCurrentMonth_Num`) END ;;


    # Original Tableau formula: IF [Parameters].[Parameter 8] THEN NULL ELSE sum([EstimatedProductionCurrentMonth_Num]) END
  }

measure: existing_patients_per_day_color_flag {
    description: "Calculated field: INT(if ([Existing Patients Per Day Den (copy)_929711906805882914] ) >avg([EPPerDayTop20] )THEN 2 elseif ([Existing Patients Per Day Den (copy)_929711906805882914] ) <= avg( [EPPerDayBottom20]) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${existing_patients_per_day} > AVG(${TABLE}.`EPPerDayTop20`)) THEN 2 ELSE CASE WHEN (${existing_patients_per_day} <= AVG(${TABLE}.`EPPerDayBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ([Existing Patients Per Day Den (copy)_929711906805882914] ) >avg([EPPerDayTop20] )THEN 2 elseif ([Existing Patients Per Day Den (copy)_929711906805882914] ) <= avg( [EPPerDayBottom20]) then 1 END)
  }

measure: existing_patients_per_day {
    description: "Calculated field: SUM([ExistingPatientsPerDay_Num])/sum([ExistingPatientsPerDay_Den])"
    type: number
    sql: (SUM(${TABLE}.`ExistingPatientsPerDay_Num`) / NULLIF(SUM(${TABLE}.`ExistingPatientsPerDay_Den`), 0)) ;;


    # Original Tableau formula: SUM([ExistingPatientsPerDay_Num])/sum([ExistingPatientsPerDay_Den])
  }

  dimension: false_copy {
    description: "Calculated field: FALSE"
    type: yesno
    sql: FALSE ;;
    # Original Tableau formula: FALSE
  }

  dimension: facility_code_name {
    description: "Calculated field: [FacilityName]+\" - \"+[FacilityCode]"
    type: string
    sql: ((${TABLE}.`FacilityName` || ' - ') || ${TABLE}.`FacilityCode`) ;;
    # Original Tableau formula: [FacilityName]+" - "+[FacilityCode]
  }

  dimension: facility_code_name_dnu {
    description: "Calculated field: [FacilityName]+\" - \"+[FacilityCode]"
    type: string
    sql: ((${TABLE}.`FacilityName` || ' - ') || ${TABLE}.`FacilityCode`) ;;
    # Original Tableau formula: [FacilityName]+" - "+[FacilityCode]
  }

  dimension: graph_filter_comp {
    description: "Calculated field: if [Parameters].[Select Metric (copy)_188025298506096641] IN ('New Patient Otc' ,'NP Tx Accepted Per NP' , 'NP Tx Presented Per NP' ,'EP Tx Accepted Per EP' ,'EP Tx Presented Per EP' ,'MCD Production Per Day' , 'Associate Production Per Day' , 'Hygiene Revenue per Day' ) then TRUE ELSE FALSE END"
    type: yesno
    sql: CASE WHEN ({% parameter select_metric_copy_188025298506096641 %} IN ('New Patient Otc', 'NP Tx Accepted Per NP', 'NP Tx Presented Per NP', 'EP Tx Accepted Per EP', 'EP Tx Presented Per EP', 'MCD Production Per Day', 'Associate Production Per Day', 'Hygiene Revenue per Day')) THEN TRUE ELSE FALSE END ;;
    # Original Tableau formula: if [Parameters].[Select Metric (copy)_188025298506096641] IN ('New Patient Otc' ,'NP Tx Accepted Per NP' , 'NP Tx Presented Per NP' ,'EP Tx Accepted Per EP' ,'EP Tx Presented Per EP' ,'MCD Production Per Day' , 'Associate Production Per Day' , 'Hygiene Revenue per Day' ) then TRUE ELSE FALSE END
  }

  dimension: graph_filter_copy {
    description: "Calculated field: if [Parameters].[Select Metric (copy)_1176846891754504196] IN ('Avg. New Patient Otc Rank' ,'Avg. NP Tx Presented Per NP Rank' , 'Avg. NP Tx Accepted Per NP Rank' ,'Avg. EP Tx Presented Per EP Rank' ,'Avg. EP Tx Accepted Per EP Rank' ,'Avg. MCD Production Per Day Rank' , 'Avg. Associate Production Per Day Rank' , 'Avg. Hygiene Revenue per Day Rank' ) then TRUE ELSE FALSE END"
    type: yesno
    sql: CASE WHEN ({% parameter select_metric_copy_1176846891754504196 %} IN ('Avg. New Patient Otc Rank', 'Avg. NP Tx Presented Per NP Rank', 'Avg. NP Tx Accepted Per NP Rank', 'Avg. EP Tx Presented Per EP Rank', 'Avg. EP Tx Accepted Per EP Rank', 'Avg. MCD Production Per Day Rank', 'Avg. Associate Production Per Day Rank', 'Avg. Hygiene Revenue per Day Rank')) THEN TRUE ELSE FALSE END ;;
    # Original Tableau formula: if [Parameters].[Select Metric (copy)_1176846891754504196] IN ('Avg. New Patient Otc Rank' ,'Avg. NP Tx Presented Per NP Rank' , 'Avg. NP Tx Accepted Per NP Rank' ,'Avg. EP Tx Presented Per EP Rank' ,'Avg. EP Tx Accepted Per EP Rank' ,'Avg. MCD Production Per Day Rank' , 'Avg. Associate Production Per Day Rank' , 'Avg. Hygiene Revenue per Day Rank' ) then TRUE ELSE FALSE END
  }

  dimension: graph_filter_m {
    description: "Calculated field: if [Parameters].[Parameter 4] IN ('TAPA/PAR Sales' , 'Dentures','Dentistry' , 'Hygiene' ,'Specialty' ,'Orthodontics' ,'Crown & Bridge' ,'Implants' ,'Production' , 'Added to schedule' , 'Estimated Production Current Month' ,'Estimated Production Budget Variance Current Month' ,'Total Deposit' ) then TRUE ELSE FALSE END"
    type: yesno
    sql: CASE WHEN ({% parameter parameter_4 %} IN ('TAPA/PAR Sales', 'Dentures', 'Dentistry', 'Hygiene', 'Specialty', 'Orthodontics', 'Crown & Bridge', 'Implants', 'Production', 'Added to schedule', 'Estimated Production Current Month', 'Estimated Production Budget Variance Current Month', 'Total Deposit')) THEN TRUE ELSE FALSE END ;;
    # Original Tableau formula: if [Parameters].[Parameter 4] IN ('TAPA/PAR Sales' , 'Dentures','Dentistry' , 'Hygiene' ,'Specialty' ,'Orthodontics' ,'Crown & Bridge' ,'Implants' ,'Production' , 'Added to schedule' , 'Estimated Production Current Month' ,'Estimated Production Budget Variance Current Month' ,'Total Deposit' ) then TRUE ELSE FALSE END
  }

  dimension: graph_filter_m_comp {
    description: "Calculated field: if [Parameters].[Select Metric (copy)_188025298506096641] IN ('TAPA/PAR Sales' , 'Dentures','Dentistry' , 'Hygiene' ,'Specialty' ,'Orthodontics' ,'Crown & Bridge' ,'Implants' ,'Production' , 'Added to schedule' , 'Estimated Production Current Month' ,'Estimated Production Budget Variance Current Month' ,'Total Deposit' ) then TRUE ELSE FALSE END"
    type: yesno
    sql: CASE WHEN ({% parameter select_metric_copy_188025298506096641 %} IN ('TAPA/PAR Sales', 'Dentures', 'Dentistry', 'Hygiene', 'Specialty', 'Orthodontics', 'Crown & Bridge', 'Implants', 'Production', 'Added to schedule', 'Estimated Production Current Month', 'Estimated Production Budget Variance Current Month', 'Total Deposit')) THEN TRUE ELSE FALSE END ;;
    # Original Tableau formula: if [Parameters].[Select Metric (copy)_188025298506096641] IN ('TAPA/PAR Sales' , 'Dentures','Dentistry' , 'Hygiene' ,'Specialty' ,'Orthodontics' ,'Crown & Bridge' ,'Implants' ,'Production' , 'Added to schedule' , 'Estimated Production Current Month' ,'Estimated Production Budget Variance Current Month' ,'Total Deposit' ) then TRUE ELSE FALSE END
  }

  dimension: graph_filter_m_copy {
    description: "Calculated field: if [Parameters].[Select Metric (copy)_1176846891754504196] IN ( 'Avg. TAPA/PAR Sales Rank' , 'Avg. Dentures Rank' ,'Avg. Dentistry Rank' , 'Avg. Hygiene Rank' ,'Avg. Specialty Rank' ,'Avg. Orthodontics Rank' ,'Avg. Crown & Bridge Rank' ,'Avg. Implants Rank' ,'Avg. Production Rank' , 'Avg. added to schedule Rank' , 'Avg. Estimated Production Budget Variance Current Month Rank' ,'Avg. Estimated Production Current Month Rank' ,'Avg. Total Deposit Rank' ) then TRUE ELSE FALSE END"
    type: yesno
    sql: CASE WHEN ({% parameter select_metric_copy_1176846891754504196 %} IN ('Avg. TAPA/PAR Sales Rank', 'Avg. Dentures Rank', 'Avg. Dentistry Rank', 'Avg. Hygiene Rank', 'Avg. Specialty Rank', 'Avg. Orthodontics Rank', 'Avg. Crown & Bridge Rank', 'Avg. Implants Rank', 'Avg. Production Rank', 'Avg. added to schedule Rank', 'Avg. Estimated Production Budget Variance Current Month Rank', 'Avg. Estimated Production Current Month Rank', 'Avg. Total Deposit Rank')) THEN TRUE ELSE FALSE END ;;
    # Original Tableau formula: if [Parameters].[Select Metric (copy)_1176846891754504196] IN ( 'Avg. TAPA/PAR Sales Rank' , 'Avg. Dentures Rank' ,'Avg. Dentistry Rank' , 'Avg. Hygiene Rank' ,'Avg. Specialty Rank' ,'Avg. Orthodontics Rank' ,'Avg. Crown & Bridge Rank' ,'Avg. Implants Rank' ,'Avg. Production Rank' , 'Avg. added to schedule Rank' , 'Avg. Estimated Production Budget Variance Current Month Rank' ,'Avg. Estimated Production Current Month Rank' ,'Avg. Total Deposit Rank' ) then TRUE ELSE FALSE END
  }

  dimension: graph_filter_percent_comp {
    description: "Calculated field: if [Parameters].[Select Metric (copy)_188025298506096641] IN ('NP Show Rate' ,'EP Show Rate','NP Yes Today!' ,'EP Yes Today!' ,'Percent Credit Applications With Tx Over $500' ,'Oral Health Scan%' ,'Percent Of Schedule' ,'NP Same Day Starts%' ,'% of patient leaving with appt' ,'New Patient Tx Plan Completion Rate' ,'Net Promoter Score ALL' , 'Net Promoter Score' ,'Percent of Balance Collected', 'NP Comp to Problem Focused Exams', 'PC Block%','NP Block%','Inefficient%' ) then TRUE ELSE FALSE END"
    type: yesno
    sql: CASE WHEN ({% parameter select_metric_copy_188025298506096641 %} IN ('NP Show Rate', 'EP Show Rate', 'NP Yes Today!', 'EP Yes Today!', 'Percent Credit Applications With Tx Over $500', 'Oral Health Scan%', 'Percent Of Schedule', 'NP Same Day Starts%', '% of patient leaving with appt', 'New Patient Tx Plan Completion Rate', 'Net Promoter Score ALL', 'Net Promoter Score', 'Percent of Balance Collected', 'NP Comp to Problem Focused Exams', 'PC Block%', 'NP Block%', 'Inefficient%')) THEN TRUE ELSE FALSE END ;;
    # Original Tableau formula: if [Parameters].[Select Metric (copy)_188025298506096641] IN ('NP Show Rate' ,'EP Show Rate','NP Yes Today!' ,'EP Yes Today!' ,'Percent Credit Applications With Tx Over $500' ,'Oral Health Scan%' ,'Percent Of Schedule' ,'NP Same Day Starts%' ,'% of patient leaving with appt' ,'New Patient Tx Plan Completion Rate' ,'Net Promoter Score ALL' , 'Net Promoter Score' ,'Percent of Balance Collected', 'NP Comp to Problem Focused Exams', 'PC Block%','NP Block%','Inefficient%' ) then TRUE ELSE FALSE END
  }

  dimension: graph_filter_percent_copy {
    description: "Calculated field: if [Parameters].[Select Metric (copy)_1176846891754504196] IN ('Avg. NP Show Rate Rank' ,'Avg. EP Show Rate Rank' ,'Avg. NP Yes Today! Rank' ,'Avg. EP Yes Today! Rank' ,'Avg. Percent Credit Applications With Tx Over $500 Rank' ,'Avg. Oral Health Scan% Rank' ,'Avg. Percent Of Schedule Rank' ,'Avg. NP Same Day Starts% Rank' ,'Avg. % of patient leaving with appt Rank' ,'Avg. New Patient Tx Plan Completion Rate Rank' ,'Avg. Net Promoter Score ALL Rank' ,'Avg. Net Promoter Score Rank' , 'Net Promoter Score ALL' , 'Net Promoter Score' ,'Avg. Percent of Balance Collected Rank' ,'Avg. NP Comp to Problem Focused Exams Rank' ,'Avg. PC Block% Rank' ,'Avg. NP Block% Rank' ,'Avg. Inefficient% Rank' ) then TRUE ELSE FALSE END"
    type: yesno
    sql: CASE WHEN ({% parameter select_metric_copy_1176846891754504196 %} IN ('Avg. NP Show Rate Rank', 'Avg. EP Show Rate Rank', 'Avg. NP Yes Today! Rank', 'Avg. EP Yes Today! Rank', 'Avg. Percent Credit Applications With Tx Over $500 Rank', 'Avg. Oral Health Scan% Rank', 'Avg. Percent Of Schedule Rank', 'Avg. NP Same Day Starts% Rank', 'Avg. % of patient leaving with appt Rank', 'Avg. New Patient Tx Plan Completion Rate Rank', 'Avg. Net Promoter Score ALL Rank', 'Avg. Net Promoter Score Rank', 'Net Promoter Score ALL', 'Net Promoter Score', 'Avg. Percent of Balance Collected Rank', 'Avg. NP Comp to Problem Focused Exams Rank', 'Avg. PC Block% Rank', 'Avg. NP Block% Rank', 'Avg. Inefficient% Rank')) THEN TRUE ELSE FALSE END ;;
    # Original Tableau formula: if [Parameters].[Select Metric (copy)_1176846891754504196] IN ('Avg. NP Show Rate Rank' ,'Avg. EP Show Rate Rank' ,'Avg. NP Yes Today! Rank' ,'Avg. EP Yes Today! Rank' ,'Avg. Percent Credit Applications With Tx Over $500 Rank' ,'Avg. Oral Health Scan% Rank' ,'Avg. Percent Of Schedule Rank' ,'Avg. NP Same Day Starts% Rank' ,'Avg. % of patient leaving with appt Rank' ,'Avg. New Patient Tx Plan Completion Rate Rank' ,'Avg. Net Promoter Score ALL Rank' ,'Avg. Net Promoter Score Rank' , 'Net Promoter Score ALL' , 'Net Promoter Score' ,'Avg. Percent of Balance Collected Rank' ,'Avg. NP Comp to Problem Focused Exams Rank' ,'Avg. PC Block% Rank' ,'Avg. NP Block% Rank' ,'Avg. Inefficient% Rank' ) then TRUE ELSE FALSE END
  }

  dimension: graph_filter_number_comp {
    description: "Calculated field: if [Parameters].[Select Metric (copy)_188025298506096641] IN ('NP Per Day' ,'Existing Patients Per Day' ,'Avg Days Until First Visit' ) then TRUE ELSE FALSE END"
    type: yesno
    sql: CASE WHEN ({% parameter select_metric_copy_188025298506096641 %} IN ('NP Per Day', 'Existing Patients Per Day', 'Avg Days Until First Visit')) THEN TRUE ELSE FALSE END ;;
    # Original Tableau formula: if [Parameters].[Select Metric (copy)_188025298506096641] IN ('NP Per Day' ,'Existing Patients Per Day' ,'Avg Days Until First Visit' ) then TRUE ELSE FALSE END
  }

  dimension: graph_filter_percent {
    description: "Calculated field: if [Parameters].[Parameter 4] IN ('NP Show Rate' ,'EP Show Rate','NP Yes Today! ' ,'EP Yes Today! ' ,'Percent Credit Applications With Tx Over $500' ,'Oral Health Scan%' ,'Percent Of Schedule' ,'NP Same Day Starts%' ,'% of patient leaving with appt' ,'New Patient Tx Plan Completion Rate' ,'Net Promoter Score ALL' , 'Net Promoter Score' ,'Percent of Balance Collected' , 'NP Comp to Problem Focused Exams', 'PC Block%','NP Block%','Inefficient%' ) then TRUE ELSE FALSE END"
    type: yesno
    sql: CASE WHEN ({% parameter parameter_4 %} IN ('NP Show Rate', 'EP Show Rate', 'NP Yes Today! ', 'EP Yes Today! ', 'Percent Credit Applications With Tx Over $500', 'Oral Health Scan%', 'Percent Of Schedule', 'NP Same Day Starts%', '% of patient leaving with appt', 'New Patient Tx Plan Completion Rate', 'Net Promoter Score ALL', 'Net Promoter Score', 'Percent of Balance Collected', 'NP Comp to Problem Focused Exams', 'PC Block%', 'NP Block%', 'Inefficient%')) THEN TRUE ELSE FALSE END ;;
    # Original Tableau formula: if [Parameters].[Parameter 4] IN ('NP Show Rate' ,'EP Show Rate','NP Yes Today! ' ,'EP Yes Today! ' ,'Percent Credit Applications With Tx Over $500' ,'Oral Health Scan%' ,'Percent Of Schedule' ,'NP Same Day Starts%' ,'% of patient leaving with appt' ,'New Patient Tx Plan Completion Rate' ,'Net Promoter Score ALL' , 'Net Promoter Score' ,'Percent of Balance Collected' , 'NP Comp to Problem Focused Exams', 'PC Block%','NP Block%','Inefficient%' ) then TRUE ELSE FALSE END
  }

  dimension: graph_filter_number_copy {
    description: "Calculated field: if [Parameters].[Select Metric (copy)_1176846891754504196] IN ('Avg. NP Per Day Rank' , 'Avg. EP Per Day Rank','Avg. NP ApptLength Adult Rank' ,'Avg. NP Appt Per Day Rank' ,'Avg. NP Days to 1st Appointment' ) then TRUE ELSE FALSE END"
    type: yesno
    sql: CASE WHEN ({% parameter select_metric_copy_1176846891754504196 %} IN ('Avg. NP Per Day Rank', 'Avg. EP Per Day Rank', 'Avg. NP ApptLength Adult Rank', 'Avg. NP Appt Per Day Rank', 'Avg. NP Days to 1st Appointment')) THEN TRUE ELSE FALSE END ;;
    # Original Tableau formula: if [Parameters].[Select Metric (copy)_1176846891754504196] IN ('Avg. NP Per Day Rank' , 'Avg. EP Per Day Rank','Avg. NP ApptLength Adult Rank' ,'Avg. NP Appt Per Day Rank' ,'Avg. NP Days to 1st Appointment' ) then TRUE ELSE FALSE END
  }

  dimension: graph_filter {
    description: "Calculated field: if [Parameters].[Parameter 4] IN ('New Patient Otc' ,'NP Tx Accepted Per NP' , 'NP Tx Presented Per NP' ,'EP Tx Accepted Per EP' ,'EP Tx Presented Per EP' ,'MCD Production Per Day' , 'Associate Production Per Day' , 'Hygiene Revenue per Day' ) then TRUE ELSE FALSE END"
    type: yesno
    sql: CASE WHEN ({% parameter parameter_4 %} IN ('New Patient Otc', 'NP Tx Accepted Per NP', 'NP Tx Presented Per NP', 'EP Tx Accepted Per EP', 'EP Tx Presented Per EP', 'MCD Production Per Day', 'Associate Production Per Day', 'Hygiene Revenue per Day')) THEN TRUE ELSE FALSE END ;;
    # Original Tableau formula: if [Parameters].[Parameter 4] IN ('New Patient Otc' ,'NP Tx Accepted Per NP' , 'NP Tx Presented Per NP' ,'EP Tx Accepted Per EP' ,'EP Tx Presented Per EP' ,'MCD Production Per Day' , 'Associate Production Per Day' , 'Hygiene Revenue per Day' ) then TRUE ELSE FALSE END
  }

  dimension: graph_filter_number_2_deci {
    description: "Calculated field: if [Parameters].[Parameter 4] IN ('Doctor FTE Per Office' ,'Ortho Starts Per Office Per Month' , 'Patient Satisfaction' ,'Online Review Ratings' ) then TRUE ELSE FALSE END"
    type: yesno
    sql: CASE WHEN ({% parameter parameter_4 %} IN ('Doctor FTE Per Office', 'Ortho Starts Per Office Per Month', 'Patient Satisfaction', 'Online Review Ratings')) THEN TRUE ELSE FALSE END ;;
    # Original Tableau formula: if [Parameters].[Parameter 4] IN ('Doctor FTE Per Office' ,'Ortho Starts Per Office Per Month' , 'Patient Satisfaction' ,'Online Review Ratings' ) then TRUE ELSE FALSE END
  }

  dimension: graph_filter_number_2_deci_comp {
    description: "Calculated field: if [Parameters].[Select Metric (copy)_188025298506096641] IN ('Doctor FTE Per Office' ,'Ortho Starts Per Office Per Month' , 'Patient Satisfaction' ,'Online Review Ratings' ) then TRUE ELSE FALSE END"
    type: yesno
    sql: CASE WHEN ({% parameter select_metric_copy_188025298506096641 %} IN ('Doctor FTE Per Office', 'Ortho Starts Per Office Per Month', 'Patient Satisfaction', 'Online Review Ratings')) THEN TRUE ELSE FALSE END ;;
    # Original Tableau formula: if [Parameters].[Select Metric (copy)_188025298506096641] IN ('Doctor FTE Per Office' ,'Ortho Starts Per Office Per Month' , 'Patient Satisfaction' ,'Online Review Ratings' ) then TRUE ELSE FALSE END
  }

  dimension: graph_filter_number_2_deci_copy {
    description: "Calculated field: if [Parameters].[Select Metric (copy)_1176846891754504196] IN ('Avg. Doctor FTE Per Office Rank' ,'Avg. Ortho Starts Per Office Per Month Rank' , 'Avg. Patient Satisfaction Rank' ,'Avg. Online Review Ratings Rank' ) then TRUE ELSE FALSE END"
    type: yesno
    sql: CASE WHEN ({% parameter select_metric_copy_1176846891754504196 %} IN ('Avg. Doctor FTE Per Office Rank', 'Avg. Ortho Starts Per Office Per Month Rank', 'Avg. Patient Satisfaction Rank', 'Avg. Online Review Ratings Rank')) THEN TRUE ELSE FALSE END ;;
    # Original Tableau formula: if [Parameters].[Select Metric (copy)_1176846891754504196] IN ('Avg. Doctor FTE Per Office Rank' ,'Avg. Ortho Starts Per Office Per Month Rank' , 'Avg. Patient Satisfaction Rank' ,'Avg. Online Review Ratings Rank' ) then TRUE ELSE FALSE END
  }

  dimension: highlight_false {
    description: "Calculated field: [TRUE (copy)_1990309626125467666]"
    type: yesno
    sql: ${false} ;;
    # Original Tableau formula: [TRUE (copy)_1990309626125467666]
  }

measure: hygienecolor_flag {
    description: "Calculated field: INT(if ( SUM([Hygiene_Num])/SUM([Hygiene_Den]) >AVG( [HygieneTop20]))then 2 elseif ( SUM([Hygiene_Num])/SUM([Hygiene_Den]) < AVG( [HygieneBottom20])) then 1 END)"
    type: number
    sql: CAST(CASE WHEN ((SUM(${TABLE}.`Hygiene_Num`) / NULLIF(SUM(${TABLE}.`Hygiene_Den`), 0)) > AVG(${TABLE}.`HygieneTop20`)) THEN 2 ELSE CASE WHEN ((SUM(${TABLE}.`Hygiene_Num`) / NULLIF(SUM(${TABLE}.`Hygiene_Den`), 0)) < AVG(${TABLE}.`HygieneBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ( SUM([Hygiene_Num])/SUM([Hygiene_Den]) >AVG( [HygieneTop20]))then 2 elseif ( SUM([Hygiene_Num])/SUM([Hygiene_Den]) < AVG( [HygieneBottom20])) then 1 END)
  }

measure: hygiene {
    description: "Calculated field: sum([Hygiene_Num])"
    type: number
    sql: SUM(${TABLE}.`Hygiene_Num`) ;;


    # Original Tableau formula: sum([Hygiene_Num])
  }

measure: hygiene_rank_copy {
    description: "Calculated field: AVG([Hygiene_Rank])"
    type: number
    sql: AVG(${TABLE}.`Hygiene_Rank`) ;;


    # Original Tableau formula: AVG([Hygiene_Rank])
  }

measure: hygiene_revenue_per_day_color_flag {
    description: "Calculated field: INT(if ( [Hygiene Revenue per Day Den (copy)_929711906805915684]) >=avg( [HygienistDailyProductionTop20])then 2 elseif( [Hygiene Revenue per Day Den (copy)_929711906805915684]) <= avg( [HygienistDailyProductionBottom20]) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${hygiene_revenue_per_day} >= AVG(${TABLE}.`HygienistDailyProductionTop20`)) THEN 2 ELSE CASE WHEN (${hygiene_revenue_per_day} <= AVG(${TABLE}.`HygienistDailyProductionBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ( [Hygiene Revenue per Day Den (copy)_929711906805915684]) >=avg( [HygienistDailyProductionTop20])then 2 elseif( [Hygiene Revenue per Day Den (copy)_929711906805915684]) <= avg( [HygienistDailyProductionBottom20]) then 1 END)
  }

measure: hygiene_revenue_per_day {
    description: "Calculated field: sum([HygienistProduction_Num])/sum([HygienistProduction_Den])"
    type: number
    sql: (SUM(${TABLE}.`HygienistProduction_Num`) / NULLIF(SUM(${TABLE}.`HygienistProduction_Den`), 0)) ;;


    # Original Tableau formula: sum([HygienistProduction_Num])/sum([HygienistProduction_Den])
  }

  dimension: icon1_copy {
    description: "Calculated field: \"Metrics YOY\""
    type: string
    sql: 'Metrics YOY' ;;
    # Original Tableau formula: "Metrics YOY"
  }

measure: implants_color_flag {
    description: "Calculated field: INT(if (sum([Implants_Num])/sum([Implants_Den]) ) >SUM([ImplantsTop20] )then 2 elseif ([Implants Den (copy)_929711906805952549]) < SUM([ImplantsBottom20] ) then 1 END)"
    type: number
    sql: CAST(CASE WHEN ((SUM(${TABLE}.`Implants_Num`) / NULLIF(SUM(${TABLE}.`Implants_Den`), 0)) > SUM(${TABLE}.`ImplantsTop20`)) THEN 2 ELSE CASE WHEN (${implants} < SUM(${TABLE}.`ImplantsBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if (sum([Implants_Num])/sum([Implants_Den]) ) >SUM([ImplantsTop20] )then 2 elseif ([Implants Den (copy)_929711906805952549]) < SUM([ImplantsBottom20] ) then 1 END)
  }

measure: implants {
    description: "Calculated field: sum([Implants_Num])"
    type: number
    sql: SUM(${TABLE}.`Implants_Num`) ;;


    # Original Tableau formula: sum([Implants_Num])
  }

measure: mcd_production_per_daycolor_flag {
    description: "Calculated field: INT(if ([MCD Production Per Day Den (copy)_929711906805960742] ) >=avg([MCDProductionTop20] )then 2 elseif ([MCD Production Per Day Den (copy)_929711906805960742] ) <= avg( [MCDProductionBottom20] ) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${mcd_production_per_day} >= AVG(${TABLE}.`MCDProductionTop20`)) THEN 2 ELSE CASE WHEN (${mcd_production_per_day} <= AVG(${TABLE}.`MCDProductionBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ([MCD Production Per Day Den (copy)_929711906805960742] ) >=avg([MCDProductionTop20] )then 2 elseif ([MCD Production Per Day Den (copy)_929711906805960742] ) <= avg( [MCDProductionBottom20] ) then 1 END)
  }

measure: mcd_production_per_day {
    description: "Calculated field: sum([MCDProduction_Num])/sum([MCDProduction_Den])"
    type: number
    sql: (SUM(${TABLE}.`MCDProduction_Num`) / NULLIF(SUM(${TABLE}.`MCDProduction_Den`), 0)) ;;


    # Original Tableau formula: sum([MCDProduction_Num])/sum([MCDProduction_Den])
  }

  dimension: mtd_copy_copy {
    description: "Calculated field: \"\""
    type: string
    sql: '' ;;
    # Original Tableau formula: ""
  }

  dimension: mtd_copy {
    description: "Calculated field: \"\""
    type: string
    sql: '' ;;
    # Original Tableau formula: ""
  }

  dimension: mtd_t20_percent_copy {
    description: "Calculated field: \"\""
    type: string
    sql: '' ;;
    # Original Tableau formula: ""
  }



measure: np_per_day_colorflag {
    description: "Calculated field: INT(IF([NP Per Day Den (copy)_929711906806022187]) >= avg([NPPerDayTop20]) THEN 2 ELSEIF ([NP Per Day Den (copy)_929711906806022187]) <= avg([NPPerDayBottom20]) THEN 1 END)"
    type: number
    sql: CAST(CASE WHEN (${np_per_day} >= AVG(${TABLE}.`NPPerDayTop20`)) THEN 2 ELSE CASE WHEN (${np_per_day} <= AVG(${TABLE}.`NPPerDayBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(IF([NP Per Day Den (copy)_929711906806022187]) >= avg([NPPerDayTop20]) THEN 2 ELSEIF ([NP Per Day Den (copy)_929711906806022187]) <= avg([NPPerDayBottom20]) THEN 1 END)
  }

measure: np_per_day {
    description: "Calculated field: sum([NPPerDay_Num])/sum([NPPerDay_Den])"
    type: number
    sql: (SUM(${TABLE}.`NPPerDay_Num`) / NULLIF(SUM(${TABLE}.`NPPerDay_Den`), 0)) ;;


    # Original Tableau formula: sum([NPPerDay_Num])/sum([NPPerDay_Den])
  }

measure: np_same_day_starts_percent_color_flag {
    description: "Calculated field: INT(if ([NP Same Day Starts% Den (copy)_929711906806030380] ) >=avg([NPSameDayStartsTop20] )then 2 elseif [NP Same Day Starts% Den (copy)_929711906806030380] <= avg([NPSameDayStartsBottom20] ) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${np_same_day_starts_percent} >= AVG(${TABLE}.`NPSameDayStartsTop20`)) THEN 2 ELSE CASE WHEN (${np_same_day_starts_percent} <= AVG(${TABLE}.`NPSameDayStartsBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ([NP Same Day Starts% Den (copy)_929711906806030380] ) >=avg([NPSameDayStartsTop20] )then 2 elseif [NP Same Day Starts% Den (copy)_929711906806030380] <= avg([NPSameDayStartsBottom20] ) then 1 END)
  }

measure: np_same_day_starts_percent {
    description: "Calculated field: sum([NPSameDayStarts_Num])/sum([NPSameDayStarts_Den])"
    type: number
    sql: (SUM(${TABLE}.`NPSameDayStarts_Num`) / NULLIF(SUM(${TABLE}.`NPSameDayStarts_Den`), 0)) ;;


    # Original Tableau formula: sum([NPSameDayStarts_Num])/sum([NPSameDayStarts_Den])
  }

measure: np_treatment_accepted_per_np {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: np_treatment_presented_per_np {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: np_otc_per_np {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: percent_of_credit_apps_wtx_500 {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: np_yes_today {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: np_show_ratecolor_flag {
    description: "Calculated field: INT(if ( [NP Show Rate Den (copy)_929711906806100013]) >=avg( [NPShowRateTop20])then 2 elseif ( [NP Show Rate Den (copy)_929711906806100013]) <= avg([NPShowRateBottom20] ) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${np_show_rate} >= AVG(${TABLE}.`NPShowRateTop20`)) THEN 2 ELSE CASE WHEN (${np_show_rate} <= AVG(${TABLE}.`NPShowRateBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ( [NP Show Rate Den (copy)_929711906806100013]) >=avg( [NPShowRateTop20])then 2 elseif ( [NP Show Rate Den (copy)_929711906806100013]) <= avg([NPShowRateBottom20] ) then 1 END)
  }

measure: np_show_rate {
    description: "Calculated field: sum([NPShowRate_Num])/sum([NPShowRate_Den])"
    type: number
    sql: (SUM(${TABLE}.`NPShowRate_Num`) / NULLIF(SUM(${TABLE}.`NPShowRate_Den`), 0)) ;;


    # Original Tableau formula: sum([NPShowRate_Num])/sum([NPShowRate_Den])
  }

measure: ep_treatment_accepted_per_ep {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: ep_treatment_presented_per_ep {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: np_tx_accepted_per_np_color_flag {
    description: "Calculated field: INT(if ( [NP Tx Accepted Per NP Den (copy)_929711906806108206] ) >=avg([NPTxAcceptedPerNPTop20] )then 2 elseif ( [NP Tx Accepted Per NP Den (copy)_929711906806108206]) <= avg([NPTxAcceptedPerNPBottom20] ) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${np_tx_accepted_per_np} >= AVG(${TABLE}.`NPTxAcceptedPerNPTop20`)) THEN 2 ELSE CASE WHEN (${np_tx_accepted_per_np} <= AVG(${TABLE}.`NPTxAcceptedPerNPBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ( [NP Tx Accepted Per NP Den (copy)_929711906806108206] ) >=avg([NPTxAcceptedPerNPTop20] )then 2 elseif ( [NP Tx Accepted Per NP Den (copy)_929711906806108206]) <= avg([NPTxAcceptedPerNPBottom20] ) then 1 END)
  }

measure: np_tx_accepted_per_np {
    description: "Calculated field: sum([NPTxAcceptedPerNP_Num])/sum([NPTxAcceptedPerNP_Den])"
    type: number
    sql: (SUM(${TABLE}.`NPTxAcceptedPerNP_Num`) / NULLIF(SUM(${TABLE}.`NPTxAcceptedPerNP_Den`), 0)) ;;


    # Original Tableau formula: sum([NPTxAcceptedPerNP_Num])/sum([NPTxAcceptedPerNP_Den])
  }

measure: np_tx_presented_per_np_color_flag {
    description: "Calculated field: INT(if ( [NP Tx Presented Per NP Den (copy)_929711906806120495]) >=avg([NPTxPresentedPerNPTop20] )then 2 elseif ( [NP Tx Presented Per NP Den (copy)_929711906806120495]) <= avg([NPTxPresentedPerNPBottom20] ) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${np_tx_presented_per_np} >= AVG(${TABLE}.`NPTxPresentedPerNPTop20`)) THEN 2 ELSE CASE WHEN (${np_tx_presented_per_np} <= AVG(${TABLE}.`NPTxPresentedPerNPBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ( [NP Tx Presented Per NP Den (copy)_929711906806120495]) >=avg([NPTxPresentedPerNPTop20] )then 2 elseif ( [NP Tx Presented Per NP Den (copy)_929711906806120495]) <= avg([NPTxPresentedPerNPBottom20] ) then 1 END)
  }

measure: np_tx_presented_per_np {
    description: "Calculated field: sum([NPTxPresentedPerNP_Num])/sum([NPTxPresentedPerNP_Den])"
    type: number
    sql: (SUM(${TABLE}.`NPTxPresentedPerNP_Num`) / NULLIF(SUM(${TABLE}.`NPTxPresentedPerNP_Den`), 0)) ;;


    # Original Tableau formula: sum([NPTxPresentedPerNP_Num])/sum([NPTxPresentedPerNP_Den])
  }

measure: np_yes_today_color_flag {
    description: "Calculated field: INT(if ([NP Yes Today! Den (copy)_929711906806132784] ) >=avg( [NPYesTodayTop20])then 2 elseif ([NP Yes Today! Den (copy)_929711906806132784] ) <= avg([NPYesTodayBottom20] ) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${np_yes_today_2} >= AVG(${TABLE}.`NPYesTodayTop20`)) THEN 2 ELSE CASE WHEN (${np_yes_today_2} <= AVG(${TABLE}.`NPYesTodayBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ([NP Yes Today! Den (copy)_929711906806132784] ) >=avg( [NPYesTodayTop20])then 2 elseif ([NP Yes Today! Den (copy)_929711906806132784] ) <= avg([NPYesTodayBottom20] ) then 1 END)
  }

measure: tapa_per_par_sales {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: percent_oral_health_scan {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: np_yes_today_2 {
    description: "Calculated field: sum([NPYesToday_Num])/sum([NPYesToday_Den])"
    type: number
    sql: (SUM(${TABLE}.`NPYesToday_Num`) / NULLIF(SUM(${TABLE}.`NPYesToday_Den`), 0)) ;;


    # Original Tableau formula: sum([NPYesToday_Num])/sum([NPYesToday_Den])
  }

measure: epperday_variance {
    description: "Calculated field: IF [Calculation_985162433627725827] = 1 then ( ((Sum(IF [Calculation_1990309625422495748]='1' THEN [ExistingPatientsPerDay_Num] END)/Sum(IF [Calculation_1990309625422495748]='1' THEN [ExistingPatientsPerDay_Den] END)) - (Sum(IF [Calculation_1990309625422495748]='2' THEN [ExistingPatientsPerDay_Num] END)/Sum(IF [Calculation_1990309625422495748]='2' THEN [ExistingPatientsPerDay_Den] END))) / (Sum(IF [Calculation_1990309625422495748]='2' THEN [ExistingPatientsPerDay_Num] END)/Sum(IF [Calculation_1990309625422495748]='2' THEN [ExistingPatientsPerDay_Den] END)) ) ELSE [Existing Patients Per Day Den (copy)_929711906805882914] END"
    type: number
    sql: CASE WHEN (${c_size_calc} = 1) THEN (((SUM(CASE WHEN (${p_yoy_header} = '1') THEN ${TABLE}.`ExistingPatientsPerDay_Num` ELSE NULL END) / NULLIF(SUM(CASE WHEN (${p_yoy_header} = '1') THEN ${TABLE}.`ExistingPatientsPerDay_Den` ELSE NULL END), 0)) - (SUM(CASE WHEN (${p_yoy_header} = '2') THEN ${TABLE}.`ExistingPatientsPerDay_Num` ELSE NULL END) / NULLIF(SUM(CASE WHEN (${p_yoy_header} = '2') THEN ${TABLE}.`ExistingPatientsPerDay_Den` ELSE NULL END), 0))) / NULLIF((SUM(CASE WHEN (${p_yoy_header} = '2') THEN ${TABLE}.`ExistingPatientsPerDay_Num` ELSE NULL END) / NULLIF(SUM(CASE WHEN (${p_yoy_header} = '2') THEN ${TABLE}.`ExistingPatientsPerDay_Den` ELSE NULL END), 0)), 0)) ELSE ${existing_patients_per_day} END ;;


    # Original Tableau formula: IF [Calculation_985162433627725827] = 1 then ( ((Sum(IF [Calculation_1990309625422495748]='1' THEN [ExistingPatientsPerDay_Num] END)/Sum(IF [Calculation_1990309625422495748]='1' THEN [ExistingPatientsPerDay_Den] END)) - (Sum(IF [Calculation_1990309625422495748]='2' THEN [ExistingPatientsPerDay_Num] END)/Sum(IF [Calculation_1990309625422495748]='2' THEN [ExistingPatientsPerDay_Den] END))) / (Sum(IF [Calculation_1990309625422495748]='2' THEN [ExistingPatientsPerDay_Num] END)/Sum(IF [Calculation_1990309625422495748]='2' THEN [ExistingPatientsPerDay_Den] END)) ) ELSE [Existing Patients Per Day Den (copy)_929711906805882914] END
  }

measure: net_promoter_score_color_flag {
    description: "Calculated field: INT(if ([Net Promoter Score Den (copy)_929711906805981224] ) >=avg( [NetPromoterScoreTop20])then 2 elseif ([Net Promoter Score Den (copy)_929711906805981224] ) <= avg([NetPromoterScoreBottom20] ) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${net_promoter_score} >= AVG(${TABLE}.`NetPromoterScoreTop20`)) THEN 2 ELSE CASE WHEN (${net_promoter_score} <= AVG(${TABLE}.`NetPromoterScoreBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ([Net Promoter Score Den (copy)_929711906805981224] ) >=avg( [NetPromoterScoreTop20])then 2 elseif ([Net Promoter Score Den (copy)_929711906805981224] ) <= avg([NetPromoterScoreBottom20] ) then 1 END)
  }

measure: net_promoter_score_all_color_flag {
    description: "Calculated field: INT(if ( [Net Promoter Score ALL Den (copy)_929711906805973031]) >=avg( [NetPromoterSconumberLTop20])then 2 elseif ([Net Promoter Score ALL Den (copy)_929711906805973031] ) <= avg([NetPromoterSconumberLBottom20] ) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${net_promoter_score_all} >= AVG(${TABLE}.`NetPromoterSconumberLTop20`)) THEN 2 ELSE CASE WHEN (${net_promoter_score_all} <= AVG(${TABLE}.`NetPromoterSconumberLBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ( [Net Promoter Score ALL Den (copy)_929711906805973031]) >=avg( [NetPromoterSconumberLTop20])then 2 elseif ([Net Promoter Score ALL Den (copy)_929711906805973031] ) <= avg([NetPromoterSconumberLBottom20] ) then 1 END)
  }

measure: net_promoter_score_all {
    description: "Calculated field: sum([NetPromoterSconumberL_Num])/sum([NetPromoterSconumberL_Den])"
    type: number
    sql: (SUM(${TABLE}.NetPromoterSconumberL_Num) / NULLIF(SUM(${TABLE}.`NetPromoterSconumberL_Den`), 0)) ;;


    # Original Tableau formula: sum([NetPromoterSconumberL_Num])/sum([NetPromoterSconumberL_Den])
  }

measure: net_promoter_score {
    description: "Calculated field: sum([NetPromoterScore_Num])/sum([NetPromoterScore_Den])"
    type: number
    sql: (SUM(${TABLE}.`NetPromoterScore_Num`) / NULLIF(SUM(${TABLE}.`NetPromoterScore_Den`), 0)) ;;


    # Original Tableau formula: sum([NetPromoterScore_Num])/sum([NetPromoterScore_Den])
  }

measure: new_patient_otccolor_flag {
    description: "Calculated field: INT(if ([New Patient Otc Den (copy)_929711906805993513] ) >=avg( [NewPatientOtcTop20])then 2 elseif ( [New Patient Otc Den (copy)_929711906805993513]) <= avg([NewPatientOtcBottom20] ) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${new_patient_otc} >= AVG(${TABLE}.`NewPatientOtcTop20`)) THEN 2 ELSE CASE WHEN (${new_patient_otc} <= AVG(${TABLE}.`NewPatientOtcBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ([New Patient Otc Den (copy)_929711906805993513] ) >=avg( [NewPatientOtcTop20])then 2 elseif ( [New Patient Otc Den (copy)_929711906805993513]) <= avg([NewPatientOtcBottom20] ) then 1 END)
  }

measure: new_patient_otc {
    description: "Calculated field: sum([NewPatientOtc_Num])/sum([NewPatientOtc_Den])"
    type: number
    sql: (SUM(${TABLE}.`NewPatientOtc_Num`) / NULLIF(SUM(${TABLE}.`NewPatientOtc_Den`), 0)) ;;


    # Original Tableau formula: sum([NewPatientOtc_Num])/sum([NewPatientOtc_Den])
  }

measure: new_patient_tx_plan_completion_rate_color_flag {
    description: "Calculated field: INT(if ( [New Patient Tx Plan Completion Rate Den (copy)_929711906806005802]) >=avg([NewPatientTxPlanCompletionRateTop20] ) THEN 2 elseif [New Patient Tx Plan Completion Rate Den (copy)_929711906806005802] <= avg( [NewPatientTxPlanCompletionRateBottom20]) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${new_patient_tx_plan_completion_rate} >= AVG(${TABLE}.`NewPatientTxPlanCompletionRateTop20`)) THEN 2 ELSE CASE WHEN (${new_patient_tx_plan_completion_rate} <= AVG(${TABLE}.`NewPatientTxPlanCompletionRateBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ( [New Patient Tx Plan Completion Rate Den (copy)_929711906806005802]) >=avg([NewPatientTxPlanCompletionRateTop20] ) THEN 2 elseif [New Patient Tx Plan Completion Rate Den (copy)_929711906806005802] <= avg( [NewPatientTxPlanCompletionRateBottom20]) then 1 END)
  }

measure: new_patient_tx_plan_completion_rate {
    description: "Calculated field: sum([NPCompletionRate_Num])/sum([NPCompletionRate_Den])"
    type: number
    sql: (SUM(${TABLE}.`NPCompletionRate_Num`) / NULLIF(SUM(${TABLE}.`NPCompletionRate_Den`), 0)) ;;


    # Original Tableau formula: sum([NPCompletionRate_Num])/sum([NPCompletionRate_Den])
  }

measure: balance_collected_percent {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: deposit {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: prod_added_to_schedule {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: estimated_production_run_rate {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: online_review_ratingscolor_flag {
    description: "Calculated field: INT(if ([Online Review Ratings Den (copy)_929711906806140977] ) >= Avg([OnlineReviewRatingsTop20] )then 2 elseif ([Online Review Ratings Den (copy)_929711906806140977] ) < avg( [OnlineReviewRatingsBottom20]) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${online_review_ratings} >= AVG(${TABLE}.`OnlineReviewRatingsTop20`)) THEN 2 ELSE CASE WHEN (${online_review_ratings} < AVG(${TABLE}.`OnlineReviewRatingsBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ([Online Review Ratings Den (copy)_929711906806140977] ) >= Avg([OnlineReviewRatingsTop20] )then 2 elseif ([Online Review Ratings Den (copy)_929711906806140977] ) < avg( [OnlineReviewRatingsBottom20]) then 1 END)
  }

measure: online_review_ratings {
    description: "Calculated field: sum([OnlineReviewRatings_Num])/sum([OnlineReviewRatings_Den])"
    type: number
    sql: (SUM(${TABLE}.`OnlineReviewRatings_Num`) / NULLIF(SUM(${TABLE}.`OnlineReviewRatings_Den`), 0)) ;;


    # Original Tableau formula: sum([OnlineReviewRatings_Num])/sum([OnlineReviewRatings_Den])
  }

measure: oral_health_scan_percentcolor_flag {
    description: "Calculated field: INT(if ([Oral Health Scan% Den (copy)_929711906806149170] ) >=avg([OralHealthScanPercentTop20] )then 2 elseif ([Oral Health Scan% Den (copy)_929711906806149170] ) <= avg([OralHealthScanPercentBottom20] ) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${oral_health_scan_percent} >= AVG(${TABLE}.`OralHealthScanPercentTop20`)) THEN 2 ELSE CASE WHEN (${oral_health_scan_percent} <= AVG(${TABLE}.`OralHealthScanPercentBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ([Oral Health Scan% Den (copy)_929711906806149170] ) >=avg([OralHealthScanPercentTop20] )then 2 elseif ([Oral Health Scan% Den (copy)_929711906806149170] ) <= avg([OralHealthScanPercentBottom20] ) then 1 END)
  }

measure: oral_health_scan_percent {
    description: "Calculated field: sum([OralHealthScan_Num])/sum([OralHealthScan_Den])"
    type: number
    sql: (SUM(${TABLE}.`OralHealthScan_Num`) / NULLIF(SUM(${TABLE}.`OralHealthScan_Den`), 0)) ;;


    # Original Tableau formula: sum([OralHealthScan_Num])/sum([OralHealthScan_Den])
  }

measure: ortho_starts_per_office_per_month_color_flag {
    description: "Calculated field: INT(if ( [Ortho Starts Per Office Per Month Den (copy)_929711906806157363]) >avg([OrthoStartsTop20] )then 2 elseif ([Ortho Starts Per Office Per Month Den (copy)_929711906806157363] ) < avg( [OrthoStartsBottom20]) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${ortho_starts_per_office_per_month} > AVG(${TABLE}.`OrthoStartsTop20`)) THEN 2 ELSE CASE WHEN (${ortho_starts_per_office_per_month} < AVG(${TABLE}.`OrthoStartsBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ( [Ortho Starts Per Office Per Month Den (copy)_929711906806157363]) >avg([OrthoStartsTop20] )then 2 elseif ([Ortho Starts Per Office Per Month Den (copy)_929711906806157363] ) < avg( [OrthoStartsBottom20]) then 1 END)
  }

measure: ortho_starts_per_office_per_month {
    description: "Calculated field: sum([OrthoStarts_Num])/sum([OrthoStarts_Den])"
    type: number
    sql: (SUM(${TABLE}.`OrthoStarts_Num`) / NULLIF(SUM(${TABLE}.`OrthoStarts_Den`), 0)) ;;


    # Original Tableau formula: sum([OrthoStarts_Num])/sum([OrthoStarts_Den])
  }

measure: orthodontics_color_flag {
    description: "Calculated field: INT(if ( sum([Orthodontics_Num])/sum([Orthodontics_Den])) >AVG( [OrthodonticsTop20])then 2 elseif ([Orthodontics Den (copy)_929711906806177844] ) < avg( [OrthodonticsBottom20]) then 1 END)"
    type: number
    sql: CAST(CASE WHEN ((SUM(${TABLE}.`Orthodontics_Num`) / NULLIF(SUM(${TABLE}.`Orthodontics_Den`), 0)) > AVG(${TABLE}.`OrthodonticsTop20`)) THEN 2 ELSE CASE WHEN (${orthodontics} < AVG(${TABLE}.`OrthodonticsBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ( sum([Orthodontics_Num])/sum([Orthodontics_Den])) >AVG( [OrthodonticsTop20])then 2 elseif ([Orthodontics Den (copy)_929711906806177844] ) < avg( [OrthodonticsBottom20]) then 1 END)
  }

measure: orthodontics {
    description: "Calculated field: sum([Orthodontics_Num])"
    type: number
    sql: SUM(${TABLE}.`Orthodontics_Num`) ;;


    # Original Tableau formula: sum([Orthodontics_Num])
  }

measure: p_current_year_var_yoy_percent_absolutes {
    description: "Calculated field: ZN(([Calculation_1990309625761050636]) - LOOKUP(ZN([Calculation_1990309625761050636]), -1))"
    type: number
    sql: IFNULL((${p_metrics_list_yoy} - 'MIGRATION_REQUIRED'), 0) ;;


    # Original Tableau formula: ZN(([Calculation_1990309625761050636]) - LOOKUP(ZN([Calculation_1990309625761050636]), -1))
  }

measure: np_block_percent {
    description: "Calculated field: SUM([NPBlockHours])/SUM([NPScheduleHours])"
    type: number
    sql: (SUM(${TABLE}.`NPBlockHours`) / NULLIF(SUM(${TABLE}.`NPScheduleHours`), 0)) ;;


    # Original Tableau formula: SUM([NPBlockHours])/SUM([NPScheduleHours])
  }

measure: patient_satisfaction_color_flag {
    description: "Calculated field: INT(if ( [Patient Satisfaction Den (copy)_929711906806186037]) >avg( [PatientSatisfactionTop20])then 2 elseif ([Patient Satisfaction Den (copy)_929711906806186037] ) <avg([PatientSatisfactionBottom20] ) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${patient_satisfaction} > AVG(${TABLE}.`PatientSatisfactionTop20`)) THEN 2 ELSE CASE WHEN (${patient_satisfaction} < AVG(${TABLE}.`PatientSatisfactionBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ( [Patient Satisfaction Den (copy)_929711906806186037]) >avg( [PatientSatisfactionTop20])then 2 elseif ([Patient Satisfaction Den (copy)_929711906806186037] ) <avg([PatientSatisfactionBottom20] ) then 1 END)
  }

measure: patient_satisfaction {
    description: "Calculated field: sum([PatientSatisfaction_Num])/sum([PatientSatisfaction_Den])"
    type: number
    sql: (SUM(${TABLE}.`PatientSatisfaction_Num`) / NULLIF(SUM(${TABLE}.`PatientSatisfaction_Den`), 0)) ;;


    # Original Tableau formula: sum([PatientSatisfaction_Num])/sum([PatientSatisfaction_Den])
  }

measure: percent_credit_applications_with_tx_over_500color_flag {
    description: "Calculated field: INT(if ( [Percent Credit Applications With Tx Over $500 Den (copy)_929711906806194230]) >avg( [CreditApplicationsTop20])then 2 elseif ( [Percent Credit Applications With Tx Over $500 Den (copy)_929711906806194230]) < avg([CreditApplicationsBottom20] ) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${percent_credit_applications_with_tx_over_500} > AVG(${TABLE}.`CreditApplicationsTop20`)) THEN 2 ELSE CASE WHEN (${percent_credit_applications_with_tx_over_500} < AVG(${TABLE}.`CreditApplicationsBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ( [Percent Credit Applications With Tx Over $500 Den (copy)_929711906806194230]) >avg( [CreditApplicationsTop20])then 2 elseif ( [Percent Credit Applications With Tx Over $500 Den (copy)_929711906806194230]) < avg([CreditApplicationsBottom20] ) then 1 END)
  }

measure: percent_credit_applications_with_tx_over_500 {
    description: "Calculated field: sum([PercentCreditApplications_Num])/sum([PercentCreditApplications_Den])"
    type: number
    sql: (SUM(${TABLE}.`PercentCreditApplications_Num`) / NULLIF(SUM(${TABLE}.`PercentCreditApplications_Den`), 0)) ;;


    # Original Tableau formula: sum([PercentCreditApplications_Num])/sum([PercentCreditApplications_Den])
  }

measure: percent_of_schedule_color_flag {
    description: "Calculated field: INT(if ( [Percent Of Schedule Den (copy)_929711906806218808]) >=avg([PercentOfScheduleTop20] )then 2 elseif ( [Percent Of Schedule Den (copy)_929711906806218808]) <= avg( [PercentOfScheduleBottom20]) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${percent_of_schedule} >= AVG(${TABLE}.`PercentOfScheduleTop20`)) THEN 2 ELSE CASE WHEN (${percent_of_schedule} <= AVG(${TABLE}.`PercentOfScheduleBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ( [Percent Of Schedule Den (copy)_929711906806218808]) >=avg([PercentOfScheduleTop20] )then 2 elseif ( [Percent Of Schedule Den (copy)_929711906806218808]) <= avg( [PercentOfScheduleBottom20]) then 1 END)
  }

measure: efficiency_color_flag {
    description: "Calculated field: INT(if ( [Calculation_1313643726020067328]) >=avg([EfficiencyTop20] )then 2 elseif ( [Calculation_1313643726020067328]) <= avg( [EfficiencyPercentBottom20]) then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${schedule_efficiency} >= AVG(${TABLE}.`EfficiencyTop20`)) THEN 2 ELSE CASE WHEN (${schedule_efficiency} <= AVG(${TABLE}.`EfficiencyPercentBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ( [Calculation_1313643726020067328]) >=avg([EfficiencyTop20] )then 2 elseif ( [Calculation_1313643726020067328]) <= avg( [EfficiencyPercentBottom20]) then 1 END)
  }

measure: percent_of_schedule {
    description: "Calculated field: sum([PercentOfSchedule_Num])/sum([PercentOfSchedule_Den])"
    type: number
    sql: (SUM(${TABLE}.`PercentOfSchedule_Num`) / NULLIF(SUM(${TABLE}.`PercentOfSchedule_Den`), 0)) ;;


    # Original Tableau formula: sum([PercentOfSchedule_Num])/sum([PercentOfSchedule_Den])
  }

measure: percent_of_balance_collectedcolor_flag {
    description: "Calculated field: INT(if ( [Percent of Balance Collected Den (copy)_929711906806206519]) > avg([PercentofBalanceCollectedTop20] )then 2 elseif ( [Percent of Balance Collected Den (copy)_929711906806206519]) < avg([PercentofBalanceCollectedBottom20] )then 1 END)"
    type: number
    sql: CAST(CASE WHEN (${percent_of_balance_collected} > AVG(${TABLE}.`PercentofBalanceCollectedTop20`)) THEN 2 ELSE CASE WHEN (${percent_of_balance_collected} < AVG(${TABLE}.`PercentofBalanceCollectedBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ( [Percent of Balance Collected Den (copy)_929711906806206519]) > avg([PercentofBalanceCollectedTop20] )then 2 elseif ( [Percent of Balance Collected Den (copy)_929711906806206519]) < avg([PercentofBalanceCollectedBottom20] )then 1 END)
  }

measure: percent_of_balance_collected {
    description: "Calculated field: sum([PercentofBalanceCollected_Num])/sum([PercentofBalanceCollected_Den])"
    type: number
    sql: (SUM(${TABLE}.`PercentofBalanceCollected_Num`) / NULLIF(SUM(${TABLE}.`PercentofBalanceCollected_Den`), 0)) ;;


    # Original Tableau formula: sum([PercentofBalanceCollected_Num])/sum([PercentofBalanceCollected_Den])
  }

measure: production_color_flag {
    description: "Calculated field: INT(if ( SUM([Production_Num])/SUM([Production_Den]))>=AVG([ProductionTop20]) then 2 elseif (( SUM([Production_Num])/SUM([Production_Den]) )<= AVG([ProductionBottom20]) ) then 1 END)"
    type: number
    sql: CAST(CASE WHEN ((SUM(${TABLE}.`Production_Num`) / NULLIF(SUM(${TABLE}.`Production_Den`), 0)) >= AVG(${TABLE}.`ProductionTop20`)) THEN 2 ELSE CASE WHEN ((SUM(${TABLE}.`Production_Num`) / NULLIF(SUM(${TABLE}.`Production_Den`), 0)) <= AVG(${TABLE}.`ProductionBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if ( SUM([Production_Num])/SUM([Production_Den]))>=AVG([ProductionTop20]) then 2 elseif (( SUM([Production_Num])/SUM([Production_Den]) )<= AVG([ProductionBottom20]) ) then 1 END)
  }

measure: production {
    description: "Calculated field: sum([Production_Num])"
    type: number
    sql: SUM(${TABLE}.`Production_Num`) ;;


    # Original Tableau formula: sum([Production_Num])
  }

measure: specialty_color_flag {
    description: "Calculated field: INT (IF( sum([Specialty_Num])/sum([Specialty_Den]) > avg([SpecialtyTop20] )) then 2 elseif ( sum([Specialty_Num])/sum([Specialty_Den]) <= avg( [SpecialtyBottom20])) then 1 END)"
    type: number
    sql: CAST(CASE WHEN ((SUM(${TABLE}.`Specialty_Num`) / NULLIF(SUM(${TABLE}.`Specialty_Den`), 0)) > AVG(${TABLE}.`SpecialtyTop20`)) THEN 2 ELSE CASE WHEN ((SUM(${TABLE}.`Specialty_Num`) / NULLIF(SUM(${TABLE}.`Specialty_Den`), 0)) <= AVG(${TABLE}.`SpecialtyBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT (IF( sum([Specialty_Num])/sum([Specialty_Den]) > avg([SpecialtyTop20] )) then 2 elseif ( sum([Specialty_Num])/sum([Specialty_Den]) <= avg( [SpecialtyBottom20])) then 1 END)
  }

measure: specialty {
    description: "Calculated field: sum([Specialty_Num])"
    type: number
    sql: SUM(${TABLE}.`Specialty_Num`) ;;


    # Original Tableau formula: sum([Specialty_Num])
  }

measure: hygiene_2 {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: orthodontics_2 {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: implants_2 {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: percent_of_schedule_2 {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: ortho_starts_office {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: total_production {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: hygiene_production_per_day {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: crown_bridge_2 {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: assoc_production_per_day {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: percentnp_tx_completion {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: specialty_2 {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: mcd_production_per_day_2 {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: percent_of_patients_leaving_with_appt {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: dentistry_2 {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: doctor_fte_office {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: percentnp_same_day_starts {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: dentures_2 {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: tapa_par_sales_color_flag {
    description: "Calculated field: INT(if (SUM([TAPASales_Num])/SUM([TAPASales_Den]) ) >=SUM([TAPASalesTop20] )then 1 elseif ([TAPA/PAR Sales Den (copy)_929711906806247483]) < SUM([TAPASalesBottom20] ) then 1 END)"
    type: number
    sql: CAST(CASE WHEN ((SUM(${TABLE}.`TAPASales_Num`) / NULLIF(SUM(${TABLE}.`TAPASales_Den`), 0)) >= SUM(${TABLE}.`TAPASalesTop20`)) THEN 1 ELSE CASE WHEN (${tapa_par_sales} < SUM(${TABLE}.`TAPASalesBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT(if (SUM([TAPASales_Num])/SUM([TAPASales_Den]) ) >=SUM([TAPASalesTop20] )then 1 elseif ([TAPA/PAR Sales Den (copy)_929711906806247483]) < SUM([TAPASalesBottom20] ) then 1 END)
  }

measure: tapa_par_sales {
    description: "Calculated field: sum([TAPASales_Num])"
    type: number
    sql: SUM(${TABLE}.`TAPASales_Num`) ;;


    # Original Tableau formula: sum([TAPASales_Num])
  }

  dimension: titles_with_rank {
    description: "Calculated field: 'MTD RANK' + ' '+ 'YTD'+' ' + 'YTD T20%'+' '+'YTD Rank'"
    type: string
    sql: (((((('MTD RANK' || '       ') || 'YTD') || '            ') || 'YTD T20%') || '          ') || 'YTD Rank') ;;
    # Original Tableau formula: 'MTD RANK' + ' '+ 'YTD'+' ' + 'YTD T20%'+' '+'YTD Rank'
  }

  dimension: true_copy {
    description: "Calculated field: TRUE"
    type: yesno
    sql: TRUE ;;
    # Original Tableau formula: TRUE
  }

  dimension: false {
    description: "Calculated field: FALSE"
    type: yesno
    sql: FALSE ;;
    # Original Tableau formula: FALSE
  }

measure: total_depositcolor_flag {
    description: "Calculated field: INT (IF (sum([TotalDeposit_Num])/sum([TotalDeposit_Den]) ) >=SUM([TotalDepositTop20]) then 2 elseif ( sum([TotalDeposit_Num])/sum([TotalDeposit_Den])) <= SUM([TotalDepositBottom20]) then 1 END)"
    type: number
    sql: CAST(CASE WHEN ((SUM(${TABLE}.`TotalDeposit_Num`) / NULLIF(SUM(${TABLE}.`TotalDeposit_Den`), 0)) >= SUM(${TABLE}.`TotalDepositTop20`)) THEN 2 ELSE CASE WHEN ((SUM(${TABLE}.`TotalDeposit_Num`) / NULLIF(SUM(${TABLE}.`TotalDeposit_Den`), 0)) <= SUM(${TABLE}.`TotalDepositBottom20`)) THEN 1 ELSE NULL END END AS INT64) ;;


    # Original Tableau formula: INT (IF (sum([TotalDeposit_Num])/sum([TotalDeposit_Den]) ) >=SUM([TotalDepositTop20]) then 2 elseif ( sum([TotalDeposit_Num])/sum([TotalDeposit_Den])) <= SUM([TotalDepositBottom20]) then 1 END)
  }

measure: total_deposit {
    description: "Calculated field: sum([TotalDeposit_Num])"
    type: number
    sql: SUM(${TABLE}.`TotalDeposit_Num`) ;;


    # Original Tableau formula: sum([TotalDeposit_Num])
  }

measure: patient_satisfaction_rating {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: np_nps {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: net_promoter_score_all_2 {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

measure: online_review {
    description: "Calculated field: Min(0)"
    type: number
    sql: MIN(0) ;;


    # Original Tableau formula: Min(0)
  }

  dimension: ytd_rank_copy {
    description: "Calculated field: \"\""
    type: string
    sql: '' ;;
    # Original Tableau formula: ""
  }

  dimension: yesterday_copy {
    description: "Calculated field: \" \""
    type: string
    sql: ' ' ;;
    # Original Tableau formula: " "
  }

measure: added_to_schedule {
    description: "Calculated field: IF [Parameters].[Parameter 8] THEN NULL ELSE sum([Addedtoschedule_Num]) END"
    type: number
    sql: CASE WHEN {% parameter parameter_8 %} THEN NULL ELSE SUM(${TABLE}.`Addedtoschedule_Num`) END ;;


    # Original Tableau formula: IF [Parameters].[Parameter 8] THEN NULL ELSE sum([Addedtoschedule_Num]) END
  }

  dimension: icon2 {
    description: "Calculated field: \"Metric Three-Year\""
    type: string
    sql: 'Metric Three-Year' ;;
    # Original Tableau formula: "Metric Three-Year"
  }

  dimension: icon3 {
    description: "Calculated field: \"Metrics Homepage\""
    type: string
    sql: 'Metrics Homepage' ;;
    # Original Tableau formula: "Metrics Homepage"
  }

  dimension: blank_copy_2 {
    description: "Calculated field: \"Show\""
    type: string
    sql: 'Show' ;;
    # Original Tableau formula: "Show"
  }

  dimension: blank_copy_copy {
    description: "Calculated field: \"Hide\""
    type: string
    sql: 'Hide' ;;
    # Original Tableau formula: "Hide"
  }

  dimension: blank_copy {
    description: "Calculated field: \"\""
    type: string
    sql: '' ;;
    # Original Tableau formula: ""
  }

  dimension: blank_detail_icon {
    description: "Calculated field: \"Hide\""
    type: string
    sql: 'Hide' ;;
    # Original Tableau formula: "Hide"
  }

  dimension: blank_detail_icon_copy {
    description: "Calculated field: \"\""
    type: string
    sql: '' ;;
    # Original Tableau formula: ""
  }

measure: blank_number_copy {
    description: "Calculated field: sum(null)"
    type: number
    sql: SUM(NULL) ;;


    # Original Tableau formula: sum(null)
  }

measure: p_metrics_rank_value {
    description: "Calculated field: case [Parameters].[Select Metric (copy)_1176846891754504196] WHEN 'Avg. NP Per Day Rank' then ([NP Per Day Den (copy)_929711906806022187]) when 'Avg. EP Per Day Rank' then ( [Existing Patients Per Day Den (copy)_929711906805882914]) when 'Avg. NP Days to 1st Appointment'THEN ([Avg Days Until First Visit Den (copy)_929711906805768216]) when 'Avg. NP Show Rate Rank' THEN ( [NP Show Rate Den (copy)_929711906806100013]) when 'Avg. EP Show Rate Rank' THEN ([EP Show Rate Den (copy)_929711906805817372]) when 'Avg. NP Yes Today! Rank' THEN [NP Yes Today! Den (copy)_929711906806132784] when 'Avg. EP Yes Today! Rank' THEN([EP Yes Today! Den (copy)_929711906805854239]) when 'Avg. Percent Credit Applications With Tx Over $500 Rank' THEN ( [Percent Credit Applications With Tx Over $500 Den (copy)_929711906806194230]) when 'Avg. New Patient Otc Rank' THEN ([New Patient Otc Den (copy)_929711906805993513]) when 'Avg. NP Tx Presented Per NP Rank' THEN ([NP Tx Presented Per NP Den (copy)_929711906806120495]) when 'Avg. NP Tx Accepted Per NP Rank' THEN ( [NP Tx Accepted Per NP Den (copy)_929711906806108206]) when 'Avg. EP Tx Presented Per EP Rank' THEN ( [EP Tx Presented Per EP Den (copy)_929711906805837854]) when 'Avg. EP Tx Accepted Per EP Rank' THEN ([EP Tx Accepted Per EP Den (copy)_929711906805829661]) when 'Avg. Oral Health Scan% Rank' THEN ( [Oral Health Scan% Den (copy)_929711906806149170]) when 'Avg. TAPA/PAR Sales Rank' THEN ( [TAPA/PAR Sales Den (copy)_929711906806247483]) when 'Avg. Doctor FTE Per Office Rank' THEN [Doctor FTE Per Office Den (copy)_929711906805809179] when 'Avg. MCD Production Per Day Rank' THEN ([MCD Production Per Day Den (copy)_929711906805960742]) when 'Avg. Associate Production Per Day Rank' THEN ([Associate Production Per Day Den (copy)_929711906805641239]) when 'Avg. Hygiene Revenue per Day Rank' THEN ([Hygiene Revenue per Day Den (copy)_929711906805915684]) when 'Avg. Ortho Starts Per Office Per Month Rank' THEN ([Ortho Starts Per Office Per Month Den (copy)_929711906806157363]) when 'Avg. Percent Of Schedule Rank' THEN ([Percent Of Schedule Den (copy)_929711906806218808]) when 'Avg. NP Same Day Starts% Rank' THEN ([NP Same Day Starts% Den (copy)_929711906806030380]) when 'Avg. % of patient leaving with appt Rank' THEN ([% of patient leaving with appt Den (copy)_929711906805620757]) when 'Avg. New Patient Tx Plan Completion Rate Rank' THEN ([New Patient Tx Plan Completion Rate Den (copy)_929711906806005802]) when 'Avg. Dentures Rank' THEN ([Dentures Den (copy)_929711906808074301]) when 'Avg. Dentistry Rank' THEN ([Dentistry Den (copy)_929711906805800986]) when 'Avg. Hygiene Rank' THEN ([Hygiene Den (copy)_929711906805891107]) when 'Avg. Specialty Rank' THEN ([Specialty Den (copy)_929711906806239290]) when 'Avg. Orthodontics Rank' THEN([Orthodontics Den (copy)_929711906806177844]) when 'Avg. Crown & Bridge Rank' THEN ([Crown & Bridge Den (copy)_929711906805784601]) when 'Avg. Implants Rank' THEN ([Implants Den (copy)_929711906805952549]) when 'Avg. Production Rank' THEN ([Production Den (copy)_929711906806231097]) when 'Avg. Net Promoter Score ALL Rank' THEN ([Net Promoter Score ALL Den (copy)_929711906805973031]) when 'Avg. Net Promoter Score Rank' THEN ([Net Promoter Score Den (copy)_929711906805981224]) when 'Avg. Patient Satisfaction Rank' THEN ([Patient Satisfaction Den (copy)_929711906806186037]) when 'Avg. Online Review Ratings Rank' THEN ([Online Review Ratings Den (copy)_929711906806140977]) when 'Avg. added to schedule Rank' THEN ([added to schedule Den (copy)_929711906805628950]) when 'Avg. Estimated Production Current Month Rank' THen([Estimated Production Current Month Den (copy)_929711906805874721]) when 'Avg. Estimated Production Budget Variance Current Month Rank' THEN ([Estimated Production Budget Variance Current Month Den (copy)_929711906805862432]) when 'Avg. Total Deposit Rank' THEN ([Total Deposit Den (copy)_929711906806259772]) when 'Avg. Percent of Balance Collected Rank' THEN ([Percent of Balance Collected Den (copy)_929711906806206519]) when 'Avg. NP Appt Per Day Rank' then [Calculation_1724878671933485065] when 'Avg. NP Comp to Problem Focused Exams Rank' then [Calculation_1724878671933153287] when 'Avg. NP ApptLength Adult Rank' then AVG([ApptLength_Adult]) when 'Avg. PC Block% Rank' then [Calculation_1724878671912910848] when 'Avg. NP Block% Rank' then [PC Block Percent (copy)_1724878671913291777] when 'Avg. Inefficient% Rank' then [Calculation_1724878671913504770] END"
    type: number
    sql: CASE WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. NP Per Day Rank') THEN ${np_per_day} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. EP Per Day Rank') THEN ${existing_patients_per_day} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. NP Days to 1st Appointment') THEN ${avg_days_until_first_visit} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. NP Show Rate Rank') THEN ${np_show_rate} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. EP Show Rate Rank') THEN ${ep_show_rate} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. NP Yes Today! Rank') THEN ${np_yes_today_2} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. EP Yes Today! Rank') THEN ${ep_yes_today_2} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Percent Credit Applications With Tx Over $500 Rank') THEN ${percent_credit_applications_with_tx_over_500} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. New Patient Otc Rank') THEN ${new_patient_otc} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. NP Tx Presented Per NP Rank') THEN ${np_tx_presented_per_np} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. NP Tx Accepted Per NP Rank') THEN ${np_tx_accepted_per_np} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. EP Tx Presented Per EP Rank') THEN ${ep_tx_presented_per_ep} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. EP Tx Accepted Per EP Rank') THEN ${ep_tx_accepted_per_ep} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Oral Health Scan% Rank') THEN ${oral_health_scan_percent} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. TAPA/PAR Sales Rank') THEN ${tapa_par_sales} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Doctor FTE Per Office Rank') THEN ${doctor_fte_per_office} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. MCD Production Per Day Rank') THEN ${mcd_production_per_day} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Associate Production Per Day Rank') THEN ${associate_production_per_day} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Hygiene Revenue per Day Rank') THEN ${hygiene_revenue_per_day} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Ortho Starts Per Office Per Month Rank') THEN ${ortho_starts_per_office_per_month} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Percent Of Schedule Rank') THEN ${percent_of_schedule} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. NP Same Day Starts% Rank') THEN ${np_same_day_starts_percent} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. % of patient leaving with appt Rank') THEN ${percent_of_patient_leaving_with_appt} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. New Patient Tx Plan Completion Rate Rank') THEN ${new_patient_tx_plan_completion_rate} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Dentures Rank') THEN ${dentures} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Dentistry Rank') THEN ${dentistry} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Hygiene Rank') THEN ${hygiene} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Specialty Rank') THEN ${specialty} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Orthodontics Rank') THEN ${orthodontics} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Crown & Bridge Rank') THEN ${crown_bridge} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Implants Rank') THEN ${implants} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Production Rank') THEN ${production} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Net Promoter Score ALL Rank') THEN ${net_promoter_score_all} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Net Promoter Score Rank') THEN ${net_promoter_score} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Patient Satisfaction Rank') THEN ${patient_satisfaction} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Online Review Ratings Rank') THEN ${online_review_ratings} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. added to schedule Rank') THEN ${added_to_schedule} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Estimated Production Current Month Rank') THEN ${estimated_production_current_month} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Estimated Production Budget Variance Current Month Rank') THEN ${estimated_production_budget_variance_current_month} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Total Deposit Rank') THEN ${total_deposit} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Percent of Balance Collected Rank') THEN ${percent_of_balance_collected} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. NP Appt Per Day Rank') THEN ${npapptperday} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. NP Comp to Problem Focused Exams Rank') THEN ${comptoproblemfocusedexams} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. NP ApptLength Adult Rank') THEN AVG(${TABLE}.`ApptLength_Adult`) WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. PC Block% Rank') THEN ${pc_block_percent} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. NP Block% Rank') THEN ${np_block_percent} WHEN ({% parameter select_metric_copy_1176846891754504196 %} = 'Avg. Inefficient% Rank') THEN ${inefficient_percent} END ;;


    # Original Tableau formula: case [Parameters].[Select Metric (copy)_1176846891754504196] WHEN 'Avg. NP Per Day Rank' then ([NP Per Day Den (copy)_929711906806022187]) when 'Avg. EP Per Day Rank' then ( [Existing Patients Per Day Den (copy)_929711906805882914]) when 'Avg. NP Days to 1st Appointment'THEN ([Avg Days Until First Visit Den (copy)_929711906805768216]) when 'Avg. NP Show Rate Rank' THEN ( [NP Show Rate Den (copy)_929711906806100013]) when 'Avg. EP Show Rate Rank' THEN ([EP Show Rate Den (copy)_929711906805817372]) when 'Avg. NP Yes Today! Rank' THEN [NP Yes Today! Den (copy)_929711906806132784] when 'Avg. EP Yes Today! Rank' THEN([EP Yes Today! Den (copy)_929711906805854239]) when 'Avg. Percent Credit Applications With Tx Over $500 Rank' THEN ( [Percent Credit Applications With Tx Over $500 Den (copy)_929711906806194230]) when 'Avg. New Patient Otc Rank' THEN ([New Patient Otc Den (copy)_929711906805993513]) when 'Avg. NP Tx Presented Per NP Rank' THEN ([NP Tx Presented Per NP Den (copy)_929711906806120495]) when 'Avg. NP Tx Accepted Per NP Rank' THEN ( [NP Tx Accepted Per NP Den (copy)_929711906806108206]) when 'Avg. EP Tx Presented Per EP Rank' THEN ( [EP Tx Presented Per EP Den (copy)_929711906805837854]) when 'Avg. EP Tx Accepted Per EP Rank' THEN ([EP Tx Accepted Per EP Den (copy)_929711906805829661]) when 'Avg. Oral Health Scan% Rank' THEN ( [Oral Health Scan% Den (copy)_929711906806149170]) when 'Avg. TAPA/PAR Sales Rank' THEN ( [TAPA/PAR Sales Den (copy)_929711906806247483]) when 'Avg. Doctor FTE Per Office Rank' THEN [Doctor FTE Per Office Den (copy)_929711906805809179] when 'Avg. MCD Production Per Day Rank' THEN ([MCD Production Per Day Den (copy)_929711906805960742]) when 'Avg. Associate Production Per Day Rank' THEN ([Associate Production Per Day Den (copy)_929711906805641239]) when 'Avg. Hygiene Revenue per Day Rank' THEN ([Hygiene Revenue per Day Den (copy)_929711906805915684]) when 'Avg. Ortho Starts Per Office Per Month Rank' THEN ([Ortho Starts Per Office Per Month Den (copy)_929711906806157363]) when 'Avg. Percent Of Schedule Rank' THEN ([Percent Of Schedule Den (copy)_929711906806218808]) when 'Avg. NP Same Day Starts% Rank' THEN ([NP Same Day Starts% Den (copy)_929711906806030380]) when 'Avg. % of patient leaving with appt Rank' THEN ([% of patient leaving with appt Den (copy)_929711906805620757]) when 'Avg. New Patient Tx Plan Completion Rate Rank' THEN ([New Patient Tx Plan Completion Rate Den (copy)_929711906806005802]) when 'Avg. Dentures Rank' THEN ([Dentures Den (copy)_929711906808074301]) when 'Avg. Dentistry Rank' THEN ([Dentistry Den (copy)_929711906805800986]) when 'Avg. Hygiene Rank' THEN ([Hygiene Den (copy)_929711906805891107]) when 'Avg. Specialty Rank' THEN ([Specialty Den (copy)_929711906806239290]) when 'Avg. Orthodontics Rank' THEN([Orthodontics Den (copy)_929711906806177844]) when 'Avg. Crown & Bridge Rank' THEN ([Crown & Bridge Den (copy)_929711906805784601]) when 'Avg. Implants Rank' THEN ([Implants Den (copy)_929711906805952549]) when 'Avg. Production Rank' THEN ([Production Den (copy)_929711906806231097]) when 'Avg. Net Promoter Score ALL Rank' THEN ([Net Promoter Score ALL Den (copy)_929711906805973031]) when 'Avg. Net Promoter Score Rank' THEN ([Net Promoter Score Den (copy)_929711906805981224]) when 'Avg. Patient Satisfaction Rank' THEN ([Patient Satisfaction Den (copy)_929711906806186037]) when 'Avg. Online Review Ratings Rank' THEN ([Online Review Ratings Den (copy)_929711906806140977]) when 'Avg. added to schedule Rank' THEN ([added to schedule Den (copy)_929711906805628950]) when 'Avg. Estimated Production Current Month Rank' THen([Estimated Production Current Month Den (copy)_929711906805874721]) when 'Avg. Estimated Production Budget Variance Current Month Rank' THEN ([Estimated Production Budget Variance Current Month Den (copy)_929711906805862432]) when 'Avg. Total Deposit Rank' THEN ([Total Deposit Den (copy)_929711906806259772]) when 'Avg. Percent of Balance Collected Rank' THEN ([Percent of Balance Collected Den (copy)_929711906806206519]) when 'Avg. NP Appt Per Day Rank' then [Calculation_1724878671933485065] when 'Avg. NP Comp to Problem Focused Exams Rank' then [Calculation_1724878671933153287] when 'Avg. NP ApptLength Adult Rank' then AVG([ApptLength_Adult]) when 'Avg. PC Block% Rank' then [Calculation_1724878671912910848] when 'Avg. NP Block% Rank' then [PC Block Percent (copy)_1724878671913291777] when 'Avg. Inefficient% Rank' then [Calculation_1724878671913504770] END
  }

  dimension: p_click_to_view_title {
    description: "Calculated field: case [Calculation_991917835598254080] when \"Click to view All Aspen\" THEN \"My Office(s)\" when \"Click to view My Office(s)\" then \"All Aspen\" END"
    type: string
    sql: CASE WHEN (${p_click_to_view} = 'Click to view All Aspen') THEN 'My Office(s)' WHEN (${p_click_to_view} = 'Click to view My Office(s)') THEN 'All Aspen' END ;;
    # Original Tableau formula: case [Calculation_991917835598254080] when "Click to view All Aspen" THEN "My Office(s)" when "Click to view My Office(s)" then "All Aspen" END
  }

measure: p_metrics_list_yoy_comp {
    description: "Calculated field: case [Parameters].[Select Metric (copy)_188025298506096641] WHEN 'NP Per Day' then [NP Per Day Den (copy)_929711906806022187] when 'Existing Patients Per Day' then [Existing Patients Per Day Den (copy)_929711906805882914] when 'Avg Days Until First Visit'THEN [Avg Days Until First Visit Den (copy)_929711906805768216] when 'NP Show Rate' THEN [NP Show Rate Den (copy)_929711906806100013] when 'EP Show Rate' THEN [EP Show Rate Den (copy)_929711906805817372] when 'NP Yes Today!' THEN [NP Yes Today! Den (copy)_929711906806132784] when 'EP Yes Today!' THEN [EP Yes Today! Den (copy)_929711906805854239] when 'Percent Credit Applications With Tx Over $500' THEN [Percent Credit Applications With Tx Over $500 Den (copy)_929711906806194230] when 'New Patient Otc' THEN [New Patient Otc Den (copy)_929711906805993513] when 'NP Tx Presented Per NP' THEN [NP Tx Presented Per NP Den (copy)_929711906806120495] when 'NP Tx Accepted Per NP' THEN [NP Tx Accepted Per NP Den (copy)_929711906806108206] when 'EP Tx Presented Per EP' THEN [EP Tx Presented Per EP Den (copy)_929711906805837854] when 'EP Tx Accepted Per EP' THEN [EP Tx Accepted Per EP Den (copy)_929711906805829661] when 'Oral Health Scan%' THEN [Oral Health Scan% Den (copy)_929711906806149170] when 'TAPA/PAR Sales' THEN [TAPA/PAR Sales Den (copy)_929711906806247483] when 'Doctor FTE Per Office' THEN [Doctor FTE Per Office Den (copy)_929711906805809179] when 'MCD Production Per Day' THEN [MCD Production Per Day Den (copy)_929711906805960742] when 'Associate Production Per Day' THEN [Associate Production Per Day Den (copy)_929711906805641239] when 'Hygiene Revenue per Day' THEN [Hygiene Revenue per Day Den (copy)_929711906805915684] when 'Ortho Starts Per Office Per Month' THEN [Ortho Starts Per Office Per Month Den (copy)_929711906806157363] when 'Percent Of Schedule' THEN [Percent Of Schedule Den (copy)_929711906806218808] when 'NP Same Day Starts%' THEN [NP Same Day Starts% Den (copy)_929711906806030380] when '% of patient leaving with appt' THEN [% of patient leaving with appt Den (copy)_929711906805620757] when 'New Patient Tx Plan Completion Rate' THEN [New Patient Tx Plan Completion Rate Den (copy)_929711906806005802] when 'Dentures' THEN [Dentures Den (copy)_929711906808074301] when 'Dentistry' THEN [Dentistry Den (copy)_929711906805800986] when 'Hygiene' THEN [Hygiene Den (copy)_929711906805891107] when 'Specialty' THEN [Specialty Den (copy)_929711906806239290] when 'Orthodontics' THEN [Orthodontics Den (copy)_929711906806177844] when 'Crown & Bridge' THEN [Crown & Bridge Den (copy)_929711906805784601] when 'Implants' THEN [Implants Den (copy)_929711906805952549] when 'Production' THEN [Production Den (copy)_929711906806231097] when 'Net Promoter Score ALL' THEN [Net Promoter Score ALL Den (copy)_929711906805973031] when 'Net Promoter Score' THEN [Net Promoter Score Den (copy)_929711906805981224] when 'Patient Satisfaction' THEN [Patient Satisfaction Den (copy)_929711906806186037] when 'Online Review Ratings' THEN [Online Review Ratings Den (copy)_929711906806140977] when 'Added to schedule' THEN [added to schedule Den (copy)_929711906805628950] when 'Estimated Production Current Month' THEN [Estimated Production Current Month Den (copy)_929711906805874721] when 'Estimated Production Budget Variance Current Month' THEN [Estimated Production Budget Variance Current Month Den (copy)_929711906805862432] when 'Total Deposit' THEN [Total Deposit Den (copy)_929711906806259772] when 'Percent of Balance Collected' THEN [Percent of Balance Collected Den (copy)_929711906806206519] END"
    type: number
    sql: CASE WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'NP Per Day') THEN ${np_per_day} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Existing Patients Per Day') THEN ${existing_patients_per_day} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Avg Days Until First Visit') THEN ${avg_days_until_first_visit} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'NP Show Rate') THEN ${np_show_rate} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'EP Show Rate') THEN ${ep_show_rate} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'NP Yes Today!') THEN ${np_yes_today_2} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'EP Yes Today!') THEN ${ep_yes_today_2} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Percent Credit Applications With Tx Over $500') THEN ${percent_credit_applications_with_tx_over_500} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'New Patient Otc') THEN ${new_patient_otc} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'NP Tx Presented Per NP') THEN ${np_tx_presented_per_np} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'NP Tx Accepted Per NP') THEN ${np_tx_accepted_per_np} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'EP Tx Presented Per EP') THEN ${ep_tx_presented_per_ep} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'EP Tx Accepted Per EP') THEN ${ep_tx_accepted_per_ep} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Oral Health Scan%') THEN ${oral_health_scan_percent} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'TAPA/PAR Sales') THEN ${tapa_par_sales} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Doctor FTE Per Office') THEN ${doctor_fte_per_office} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'MCD Production Per Day') THEN ${mcd_production_per_day} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Associate Production Per Day') THEN ${associate_production_per_day} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Hygiene Revenue per Day') THEN ${hygiene_revenue_per_day} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Ortho Starts Per Office Per Month') THEN ${ortho_starts_per_office_per_month} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Percent Of Schedule') THEN ${percent_of_schedule} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'NP Same Day Starts%') THEN ${np_same_day_starts_percent} WHEN ({% parameter select_metric_copy_188025298506096641 %} = '% of patient leaving with appt') THEN ${percent_of_patient_leaving_with_appt} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'New Patient Tx Plan Completion Rate') THEN ${new_patient_tx_plan_completion_rate} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Dentures') THEN ${dentures} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Dentistry') THEN ${dentistry} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Hygiene') THEN ${hygiene} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Specialty') THEN ${specialty} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Orthodontics') THEN ${orthodontics} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Crown & Bridge') THEN ${crown_bridge} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Implants') THEN ${implants} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Production') THEN ${production} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Net Promoter Score ALL') THEN ${net_promoter_score_all} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Net Promoter Score') THEN ${net_promoter_score} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Patient Satisfaction') THEN ${patient_satisfaction} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Online Review Ratings') THEN ${online_review_ratings} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Added to schedule') THEN ${added_to_schedule} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Estimated Production Current Month') THEN ${estimated_production_current_month} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Estimated Production Budget Variance Current Month') THEN ${estimated_production_budget_variance_current_month} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Total Deposit') THEN ${total_deposit} WHEN ({% parameter select_metric_copy_188025298506096641 %} = 'Percent of Balance Collected') THEN ${percent_of_balance_collected} END ;;


    # Original Tableau formula: case [Parameters].[Select Metric (copy)_188025298506096641] WHEN 'NP Per Day' then [NP Per Day Den (copy)_929711906806022187] when 'Existing Patients Per Day' then [Existing Patients Per Day Den (copy)_929711906805882914] when 'Avg Days Until First Visit'THEN [Avg Days Until First Visit Den (copy)_929711906805768216] when 'NP Show Rate' THEN [NP Show Rate Den (copy)_929711906806100013] when 'EP Show Rate' THEN [EP Show Rate Den (copy)_929711906805817372] when 'NP Yes Today!' THEN [NP Yes Today! Den (copy)_929711906806132784] when 'EP Yes Today!' THEN [EP Yes Today! Den (copy)_929711906805854239] when 'Percent Credit Applications With Tx Over $500' THEN [Percent Credit Applications With Tx Over $500 Den (copy)_929711906806194230] when 'New Patient Otc' THEN [New Patient Otc Den (copy)_929711906805993513] when 'NP Tx Presented Per NP' THEN [NP Tx Presented Per NP Den (copy)_929711906806120495] when 'NP Tx Accepted Per NP' THEN [NP Tx Accepted Per NP Den (copy)_929711906806108206] when 'EP Tx Presented Per EP' THEN [EP Tx Presented Per EP Den (copy)_929711906805837854] when 'EP Tx Accepted Per EP' THEN [EP Tx Accepted Per EP Den (copy)_929711906805829661] when 'Oral Health Scan%' THEN [Oral Health Scan% Den (copy)_929711906806149170] when 'TAPA/PAR Sales' THEN [TAPA/PAR Sales Den (copy)_929711906806247483] when 'Doctor FTE Per Office' THEN [Doctor FTE Per Office Den (copy)_929711906805809179] when 'MCD Production Per Day' THEN [MCD Production Per Day Den (copy)_929711906805960742] when 'Associate Production Per Day' THEN [Associate Production Per Day Den (copy)_929711906805641239] when 'Hygiene Revenue per Day' THEN [Hygiene Revenue per Day Den (copy)_929711906805915684] when 'Ortho Starts Per Office Per Month' THEN [Ortho Starts Per Office Per Month Den (copy)_929711906806157363] when 'Percent Of Schedule' THEN [Percent Of Schedule Den (copy)_929711906806218808] when 'NP Same Day Starts%' THEN [NP Same Day Starts% Den (copy)_929711906806030380] when '% of patient leaving with appt' THEN [% of patient leaving with appt Den (copy)_929711906805620757] when 'New Patient Tx Plan Completion Rate' THEN [New Patient Tx Plan Completion Rate Den (copy)_929711906806005802] when 'Dentures' THEN [Dentures Den (copy)_929711906808074301] when 'Dentistry' THEN [Dentistry Den (copy)_929711906805800986] when 'Hygiene' THEN [Hygiene Den (copy)_929711906805891107] when 'Specialty' THEN [Specialty Den (copy)_929711906806239290] when 'Orthodontics' THEN [Orthodontics Den (copy)_929711906806177844] when 'Crown & Bridge' THEN [Crown & Bridge Den (copy)_929711906805784601] when 'Implants' THEN [Implants Den (copy)_929711906805952549] when 'Production' THEN [Production Den (copy)_929711906806231097] when 'Net Promoter Score ALL' THEN [Net Promoter Score ALL Den (copy)_929711906805973031] when 'Net Promoter Score' THEN [Net Promoter Score Den (copy)_929711906805981224] when 'Patient Satisfaction' THEN [Patient Satisfaction Den (copy)_929711906806186037] when 'Online Review Ratings' THEN [Online Review Ratings Den (copy)_929711906806140977] when 'Added to schedule' THEN [added to schedule Den (copy)_929711906805628950] when 'Estimated Production Current Month' THEN [Estimated Production Current Month Den (copy)_929711906805874721] when 'Estimated Production Budget Variance Current Month' THEN [Estimated Production Budget Variance Current Month Den (copy)_929711906805862432] when 'Total Deposit' THEN [Total Deposit Den (copy)_929711906806259772] when 'Percent of Balance Collected' THEN [Percent of Balance Collected Den (copy)_929711906806206519] END
  }

measure: p_metrics_list_yoy_top {
    description: "Calculated field: case [Parameters].[Parameter 4] WHEN 'NP Per Day' then [NPPerDayTop20] when 'Existing Patients Per Day' then [EPPerDayTop20] when 'Avg Days Until First Visit'THEN [AvgDaysUntilFirstVisitPercentTop20] when 'NP Show Rate' THEN [NPShowRateTop20] when 'EP Show Rate' THEN [NPShowRateTop20] when 'NP Yes Today! ' THEN [NPYesTodayTop20] when 'EP Yes Today! ' THEN [EPYesTodayTop20] when 'Percent Credit Applications With Tx Over $500' THEN [CreditApplicationsTop20] when 'New Patient Otc' THEN [NewPatientOtcTop20] when 'NP Tx Presented Per NP' THEN [NPTxPresentedPerNPTop20] when 'NP Tx Accepted Per NP' THEN [NPTxAcceptedPerNPTop20] when 'EP Tx Presented Per EP' THEN [EPTxPresentedPerEPTop20] when 'EP Tx Accepted Per EP' THEN [EPTxAcceptedPerEPTop20] when 'Oral Health Scan%' THEN [OralHealthScanPercentTop20] when 'TAPA/PAR Sales' THEN [TAPASalesTop20] when 'Doctor FTE Per Office' THEN [DoctorFTETop20] when 'MCD Production Per Day' THEN [MCDProductionTop20] when 'Associate Production Per Day' THEN [AssociateProductionTop20] when 'Hygiene Revenue per Day' THEN [HygienistDailyProductionTop20] when 'Ortho Starts Per Office Per Month' THEN [OrthoStartsTop20] when 'Percent Of Schedule' THEN [PercentOfScheduleTop20] when 'NP Same Day Starts%' THEN [NPSameDayStartsTop20] when '% of patient leaving with appt' THEN [PercentofPatientLeavingwithApptTop20] when 'New Patient Tx Plan Completion Rate' THEN [NewPatientTxPlanCompletionRateTop20] when 'Dentures' THEN [DenturesTop20] when 'Dentistry' THEN [DentistryTop20] when 'Hygiene' THEN [HygieneTop20] when 'Specialty' THEN [SpecialtyTop20] when 'Orthodontics' THEN [OrthodonticsTop20] when 'Crown & Bridge' THEN [CrownBridgeTop20] when 'Implants' THEN [ImplantsTop20] when 'Production' THEN [ProductionTop20] when 'Net Promoter Score ALL' THEN [NetPromoterSconumberLTop20] when 'Net Promoter Score' THEN [NetPromoterScoreTop20] when 'Patient Satisfaction' THEN [PatientSatisfactionTop20] when 'Online Review Ratings' THEN [OnlineReviewRatingsTop20] when 'Added to schedule' THEN [AddedtoScheduleTop20] when 'Estimated Production Current Month' THEN [EstimatedProductionCurrentMonthTop20] when 'Estimated Production Budget Variance Current Month' THEN [EstimatedProductionBudgetVarianceCurrentMonthTop20] when 'Total Deposit' THEN [TotalDepositTop20] when 'Percent of Balance Collected' THEN [PercentofBalanceCollectedTop20] when 'NP Appt Per Day' then [NPApptsPerDayPercentTop20] when 'NP Comp to Problem Focused Exams' then [ComptoProblemFocusedExamstTop20] when 'NP ApptLength Adult' then [ApptLength_AdultTop20] when 'PC Block%' then [PCBlockTop20] when 'NP Block%' then [NPBlockTop20] when 'Inefficient%' then [InefficientTop20] END"
    type: sum
    sql: ${p_metrics_list_yoy_top_calc} ;;


    # Original Tableau formula: case [Parameters].[Parameter 4] WHEN 'NP Per Day' then [NPPerDayTop20] when 'Existing Patients Per Day' then [EPPerDayTop20] when 'Avg Days Until First Visit'THEN [AvgDaysUntilFirstVisitPercentTop20] when 'NP Show Rate' THEN [NPShowRateTop20] when 'EP Show Rate' THEN [NPShowRateTop20] when 'NP Yes Today! ' THEN [NPYesTodayTop20] when 'EP Yes Today! ' THEN [EPYesTodayTop20] when 'Percent Credit Applications With Tx Over $500' THEN [CreditApplicationsTop20] when 'New Patient Otc' THEN [NewPatientOtcTop20] when 'NP Tx Presented Per NP' THEN [NPTxPresentedPerNPTop20] when 'NP Tx Accepted Per NP' THEN [NPTxAcceptedPerNPTop20] when 'EP Tx Presented Per EP' THEN [EPTxPresentedPerEPTop20] when 'EP Tx Accepted Per EP' THEN [EPTxAcceptedPerEPTop20] when 'Oral Health Scan%' THEN [OralHealthScanPercentTop20] when 'TAPA/PAR Sales' THEN [TAPASalesTop20] when 'Doctor FTE Per Office' THEN [DoctorFTETop20] when 'MCD Production Per Day' THEN [MCDProductionTop20] when 'Associate Production Per Day' THEN [AssociateProductionTop20] when 'Hygiene Revenue per Day' THEN [HygienistDailyProductionTop20] when 'Ortho Starts Per Office Per Month' THEN [OrthoStartsTop20] when 'Percent Of Schedule' THEN [PercentOfScheduleTop20] when 'NP Same Day Starts%' THEN [NPSameDayStartsTop20] when '% of patient leaving with appt' THEN [PercentofPatientLeavingwithApptTop20] when 'New Patient Tx Plan Completion Rate' THEN [NewPatientTxPlanCompletionRateTop20] when 'Dentures' THEN [DenturesTop20] when 'Dentistry' THEN [DentistryTop20] when 'Hygiene' THEN [HygieneTop20] when 'Specialty' THEN [SpecialtyTop20] when 'Orthodontics' THEN [OrthodonticsTop20] when 'Crown & Bridge' THEN [CrownBridgeTop20] when 'Implants' THEN [ImplantsTop20] when 'Production' THEN [ProductionTop20] when 'Net Promoter Score ALL' THEN [NetPromoterSconumberLTop20] when 'Net Promoter Score' THEN [NetPromoterScoreTop20] when 'Patient Satisfaction' THEN [PatientSatisfactionTop20] when 'Online Review Ratings' THEN [OnlineReviewRatingsTop20] when 'Added to schedule' THEN [AddedtoScheduleTop20] when 'Estimated Production Current Month' THEN [EstimatedProductionCurrentMonthTop20] when 'Estimated Production Budget Variance Current Month' THEN [EstimatedProductionBudgetVarianceCurrentMonthTop20] when 'Total Deposit' THEN [TotalDepositTop20] when 'Percent of Balance Collected' THEN [PercentofBalanceCollectedTop20] when 'NP Appt Per Day' then [NPApptsPerDayPercentTop20] when 'NP Comp to Problem Focused Exams' then [ComptoProblemFocusedExamstTop20] when 'NP ApptLength Adult' then [ApptLength_AdultTop20] when 'PC Block%' then [PCBlockTop20] when 'NP Block%' then [NPBlockTop20] when 'Inefficient%' then [InefficientTop20] END
  }

measure: p_metrics_list_yoy_top_2 {
    description: "Calculated field: IF [p.Mertics List YOY (copy)_1990309625774809102] <= 1000 THEN [p.Mertics List YOY (copy)_1990309625774809102] END"
    type: sum
    sql: ${p_metrics_list_yoy_top_2_calc} ;;


    # Original Tableau formula: IF [p.Mertics List YOY (copy)_1990309625774809102] <= 1000 THEN [p.Mertics List YOY (copy)_1990309625774809102] END
  }

measure: p_metrics_list_yoy_top_k {
    description: "Calculated field: IF [p.Mertics List YOY (copy)_1990309625774809102] >= 1000 AND [p.Mertics List YOY (copy)_1990309625774809102] < 200000 THEN [p.Mertics List YOY (copy)_1990309625774809102] END"
    type: sum
    sql: ${p_metrics_list_yoy_top_k_calc} ;;


    # Original Tableau formula: IF [p.Mertics List YOY (copy)_1990309625774809102] >= 1000 AND [p.Mertics List YOY (copy)_1990309625774809102] < 200000 THEN [p.Mertics List YOY (copy)_1990309625774809102] END
  }

measure: p_metrics_list_yoy_2 {
    description: "Calculated field: IF [Calculation_1990309625761050636] <= 1000 THEN [Calculation_1990309625761050636] END"
    type: number
    sql: CASE WHEN (${p_metrics_list_yoy} <= 1000) THEN ${p_metrics_list_yoy} ELSE NULL END ;;


    # Original Tableau formula: IF [Calculation_1990309625761050636] <= 1000 THEN [Calculation_1990309625761050636] END
  }

measure: p_metrics_list_yoy_k {
    description: "Calculated field: IF [Calculation_1990309625761050636] >= 1000 AND [Calculation_1990309625761050636] < 200000 THEN [Calculation_1990309625761050636] END"
    type: number
    sql: CASE WHEN ((${p_metrics_list_yoy} >= 1000) AND (${p_metrics_list_yoy} < 200000)) THEN ${p_metrics_list_yoy} ELSE NULL END ;;


    # Original Tableau formula: IF [Calculation_1990309625761050636] >= 1000 AND [Calculation_1990309625761050636] < 200000 THEN [Calculation_1990309625761050636] END
  }

measure: p_metrics_list_yoy_copy {
    description: "Calculated field: case [Parameters].[Parameter 4] WHEN 'NP Per Day' then [NP Per Day Den (copy)_929711906806022187] when 'Existing Patients Per Day' then [Existing Patients Per Day Den (copy)_929711906805882914] when 'Avg Days Until First Visit'THEN [Avg Days Until First Visit Den (copy)_929711906805768216] when 'NP Show Rate' THEN [NP Show Rate Den (copy)_929711906806100013] when 'EP Show Rate' THEN [EP Show Rate Den (copy)_929711906805817372] when 'NP Yes Today! ' THEN [NP Yes Today! Den (copy)_929711906806132784] when 'EP Yes Today! ' THEN [EP Yes Today! Den (copy)_929711906805854239] when 'Percent Credit Applications With Tx Over $500' THEN [Percent Credit Applications With Tx Over $500 Den (copy)_929711906806194230] when 'New Patient Otc' THEN [New Patient Otc Den (copy)_929711906805993513] when 'NP Tx Presented Per NP' THEN [NP Tx Presented Per NP Den (copy)_929711906806120495] when 'NP Tx Accepted Per NP' THEN [NP Tx Accepted Per NP Den (copy)_929711906806108206] when 'EP Tx Presented Per EP' THEN [EP Tx Presented Per EP Den (copy)_929711906805837854] when 'EP Tx Accepted Per EP' THEN [EP Tx Accepted Per EP Den (copy)_929711906805829661] when 'Oral Health Scan%' THEN [Oral Health Scan% Den (copy)_929711906806149170] when 'TAPA/PAR Sales' THEN [TAPA/PAR Sales Den (copy)_929711906806247483] when 'Doctor FTE Per Office' THEN [Doctor FTE Per Office Den (copy)_929711906805809179] when 'MCD Production Per Day' THEN [MCD Production Per Day Den (copy)_929711906805960742] when 'Associate Production Per Day' THEN [Associate Production Per Day Den (copy)_929711906805641239] when 'Hygiene Revenue per Day' THEN [Hygiene Revenue per Day Den (copy)_929711906805915684] when 'Ortho Starts Per Office Per Month' THEN [Ortho Starts Per Office Per Month Den (copy)_929711906806157363] when 'Percent Of Schedule' THEN [Percent Of Schedule Den (copy)_929711906806218808] when 'NP Same Day Starts%' THEN [NP Same Day Starts% Den (copy)_929711906806030380] when '% of patient leaving with appt' THEN [% of patient leaving with appt Den (copy)_929711906805620757] when 'New Patient Tx Plan Completion Rate' THEN [New Patient Tx Plan Completion Rate Den (copy)_929711906806005802] when 'Dentures' THEN [Dentures Den (copy)_929711906808074301] when 'Dentistry' THEN [Dentistry Den (copy)_929711906805800986] when 'Hygiene' THEN [Hygiene Den (copy)_929711906805891107] when 'Specialty' THEN [Specialty Den (copy)_929711906806239290] when 'Orthodontics' THEN [Orthodontics Den (copy)_929711906806177844] when 'Crown & Bridge' THEN [Crown & Bridge Den (copy)_929711906805784601] when 'Implants' THEN [Implants Den (copy)_929711906805952549] when 'Production' THEN [Production Den (copy)_929711906806231097] when 'Net Promoter Score ALL' THEN [Net Promoter Score ALL Den (copy)_929711906805973031] when 'Net Promoter Score' THEN [Net Promoter Score Den (copy)_929711906805981224] when 'Patient Satisfaction' THEN [Patient Satisfaction Den (copy)_929711906806186037] when 'Online Review Ratings' THEN [Online Review Ratings Den (copy)_929711906806140977] when 'Added to schedule' THEN [added to schedule Den (copy)_929711906805628950] when 'Estimated Production Current Month' THEN [Estimated Production Current Month Den (copy)_929711906805874721] when 'Estimated Production Budget Variance Current Month' THEN [Estimated Production Budget Variance Current Month Den (copy)_929711906805862432] when 'Total Deposit' THEN [Total Deposit Den (copy)_929711906806259772] when 'Percent of Balance Collected' THEN [Percent of Balance Collected Den (copy)_929711906806206519] END"
    type: number
    sql: CASE WHEN ({% parameter parameter_4 %} = 'NP Per Day') THEN ${np_per_day} WHEN ({% parameter parameter_4 %} = 'Existing Patients Per Day') THEN ${existing_patients_per_day} WHEN ({% parameter parameter_4 %} = 'Avg Days Until First Visit') THEN ${avg_days_until_first_visit} WHEN ({% parameter parameter_4 %} = 'NP Show Rate') THEN ${np_show_rate} WHEN ({% parameter parameter_4 %} = 'EP Show Rate') THEN ${ep_show_rate} WHEN ({% parameter parameter_4 %} = 'NP Yes Today! ') THEN ${np_yes_today_2} WHEN ({% parameter parameter_4 %} = 'EP Yes Today! ') THEN ${ep_yes_today_2} WHEN ({% parameter parameter_4 %} = 'Percent Credit Applications With Tx Over $500') THEN ${percent_credit_applications_with_tx_over_500} WHEN ({% parameter parameter_4 %} = 'New Patient Otc') THEN ${new_patient_otc} WHEN ({% parameter parameter_4 %} = 'NP Tx Presented Per NP') THEN ${np_tx_presented_per_np} WHEN ({% parameter parameter_4 %} = 'NP Tx Accepted Per NP') THEN ${np_tx_accepted_per_np} WHEN ({% parameter parameter_4 %} = 'EP Tx Presented Per EP') THEN ${ep_tx_presented_per_ep} WHEN ({% parameter parameter_4 %} = 'EP Tx Accepted Per EP') THEN ${ep_tx_accepted_per_ep} WHEN ({% parameter parameter_4 %} = 'Oral Health Scan%') THEN ${oral_health_scan_percent} WHEN ({% parameter parameter_4 %} = 'TAPA/PAR Sales') THEN ${tapa_par_sales} WHEN ({% parameter parameter_4 %} = 'Doctor FTE Per Office') THEN ${doctor_fte_per_office} WHEN ({% parameter parameter_4 %} = 'MCD Production Per Day') THEN ${mcd_production_per_day} WHEN ({% parameter parameter_4 %} = 'Associate Production Per Day') THEN ${associate_production_per_day} WHEN ({% parameter parameter_4 %} = 'Hygiene Revenue per Day') THEN ${hygiene_revenue_per_day} WHEN ({% parameter parameter_4 %} = 'Ortho Starts Per Office Per Month') THEN ${ortho_starts_per_office_per_month} WHEN ({% parameter parameter_4 %} = 'Percent Of Schedule') THEN ${percent_of_schedule} WHEN ({% parameter parameter_4 %} = 'NP Same Day Starts%') THEN ${np_same_day_starts_percent} WHEN ({% parameter parameter_4 %} = '% of patient leaving with appt') THEN ${percent_of_patient_leaving_with_appt} WHEN ({% parameter parameter_4 %} = 'New Patient Tx Plan Completion Rate') THEN ${new_patient_tx_plan_completion_rate} WHEN ({% parameter parameter_4 %} = 'Dentures') THEN ${dentures} WHEN ({% parameter parameter_4 %} = 'Dentistry') THEN ${dentistry} WHEN ({% parameter parameter_4 %} = 'Hygiene') THEN ${hygiene} WHEN ({% parameter parameter_4 %} = 'Specialty') THEN ${specialty} WHEN ({% parameter parameter_4 %} = 'Orthodontics') THEN ${orthodontics} WHEN ({% parameter parameter_4 %} = 'Crown & Bridge') THEN ${crown_bridge} WHEN ({% parameter parameter_4 %} = 'Implants') THEN ${implants} WHEN ({% parameter parameter_4 %} = 'Production') THEN ${production} WHEN ({% parameter parameter_4 %} = 'Net Promoter Score ALL') THEN ${net_promoter_score_all} WHEN ({% parameter parameter_4 %} = 'Net Promoter Score') THEN ${net_promoter_score} WHEN ({% parameter parameter_4 %} = 'Patient Satisfaction') THEN ${patient_satisfaction} WHEN ({% parameter parameter_4 %} = 'Online Review Ratings') THEN ${online_review_ratings} WHEN ({% parameter parameter_4 %} = 'Added to schedule') THEN ${added_to_schedule} WHEN ({% parameter parameter_4 %} = 'Estimated Production Current Month') THEN ${estimated_production_current_month} WHEN ({% parameter parameter_4 %} = 'Estimated Production Budget Variance Current Month') THEN ${estimated_production_budget_variance_current_month} WHEN ({% parameter parameter_4 %} = 'Total Deposit') THEN ${total_deposit} WHEN ({% parameter parameter_4 %} = 'Percent of Balance Collected') THEN ${percent_of_balance_collected} END ;;


    # Original Tableau formula: case [Parameters].[Parameter 4] WHEN 'NP Per Day' then [NP Per Day Den (copy)_929711906806022187] when 'Existing Patients Per Day' then [Existing Patients Per Day Den (copy)_929711906805882914] when 'Avg Days Until First Visit'THEN [Avg Days Until First Visit Den (copy)_929711906805768216] when 'NP Show Rate' THEN [NP Show Rate Den (copy)_929711906806100013] when 'EP Show Rate' THEN [EP Show Rate Den (copy)_929711906805817372] when 'NP Yes Today! ' THEN [NP Yes Today! Den (copy)_929711906806132784] when 'EP Yes Today! ' THEN [EP Yes Today! Den (copy)_929711906805854239] when 'Percent Credit Applications With Tx Over $500' THEN [Percent Credit Applications With Tx Over $500 Den (copy)_929711906806194230] when 'New Patient Otc' THEN [New Patient Otc Den (copy)_929711906805993513] when 'NP Tx Presented Per NP' THEN [NP Tx Presented Per NP Den (copy)_929711906806120495] when 'NP Tx Accepted Per NP' THEN [NP Tx Accepted Per NP Den (copy)_929711906806108206] when 'EP Tx Presented Per EP' THEN [EP Tx Presented Per EP Den (copy)_929711906805837854] when 'EP Tx Accepted Per EP' THEN [EP Tx Accepted Per EP Den (copy)_929711906805829661] when 'Oral Health Scan%' THEN [Oral Health Scan% Den (copy)_929711906806149170] when 'TAPA/PAR Sales' THEN [TAPA/PAR Sales Den (copy)_929711906806247483] when 'Doctor FTE Per Office' THEN [Doctor FTE Per Office Den (copy)_929711906805809179] when 'MCD Production Per Day' THEN [MCD Production Per Day Den (copy)_929711906805960742] when 'Associate Production Per Day' THEN [Associate Production Per Day Den (copy)_929711906805641239] when 'Hygiene Revenue per Day' THEN [Hygiene Revenue per Day Den (copy)_929711906805915684] when 'Ortho Starts Per Office Per Month' THEN [Ortho Starts Per Office Per Month Den (copy)_929711906806157363] when 'Percent Of Schedule' THEN [Percent Of Schedule Den (copy)_929711906806218808] when 'NP Same Day Starts%' THEN [NP Same Day Starts% Den (copy)_929711906806030380] when '% of patient leaving with appt' THEN [% of patient leaving with appt Den (copy)_929711906805620757] when 'New Patient Tx Plan Completion Rate' THEN [New Patient Tx Plan Completion Rate Den (copy)_929711906806005802] when 'Dentures' THEN [Dentures Den (copy)_929711906808074301] when 'Dentistry' THEN [Dentistry Den (copy)_929711906805800986] when 'Hygiene' THEN [Hygiene Den (copy)_929711906805891107] when 'Specialty' THEN [Specialty Den (copy)_929711906806239290] when 'Orthodontics' THEN [Orthodontics Den (copy)_929711906806177844] when 'Crown & Bridge' THEN [Crown & Bridge Den (copy)_929711906805784601] when 'Implants' THEN [Implants Den (copy)_929711906805952549] when 'Production' THEN [Production Den (copy)_929711906806231097] when 'Net Promoter Score ALL' THEN [Net Promoter Score ALL Den (copy)_929711906805973031] when 'Net Promoter Score' THEN [Net Promoter Score Den (copy)_929711906805981224] when 'Patient Satisfaction' THEN [Patient Satisfaction Den (copy)_929711906806186037] when 'Online Review Ratings' THEN [Online Review Ratings Den (copy)_929711906806140977] when 'Added to schedule' THEN [added to schedule Den (copy)_929711906805628950] when 'Estimated Production Current Month' THEN [Estimated Production Current Month Den (copy)_929711906805874721] when 'Estimated Production Budget Variance Current Month' THEN [Estimated Production Budget Variance Current Month Den (copy)_929711906805862432] when 'Total Deposit' THEN [Total Deposit Den (copy)_929711906806259772] when 'Percent of Balance Collected' THEN [Percent of Balance Collected Den (copy)_929711906806206519] END
  }

measure: p_metrics_list_yoy_m {
    description: "Calculated field: IF [Calculation_1990309625761050636] >= 200000 THEN [Calculation_1990309625761050636] END"
    type: number
    sql: CASE WHEN (${p_metrics_list_yoy} >= 200000) THEN ${p_metrics_list_yoy} ELSE NULL END ;;


    # Original Tableau formula: IF [Calculation_1990309625761050636] >= 200000 THEN [Calculation_1990309625761050636] END
  }

  dimension: p_yoy_header_metrics_homepage {
    description: "Calculated field: if [Parameters].[Parameter 1] = [FirstOfMonth] and [Parameters].[Parameter 3] = [MtdOrYtdCode] then '1' ELSEIF [Parameters].[Month Selector (copy)_1990309625421819904]= [FirstOfMonth] and [Parameters].[MTD or YTD (copy)_1990309625422229507] = [MtdOrYtdCode] then '2' ELSE \"0\" END"
    type: string
    sql: CASE WHEN (({% parameter parameter_1 %} = ${TABLE}.`FirstOfMonth`) AND ({% parameter parameter_3 %} = ${TABLE}.`MtdOrYtdCode`)) THEN '1' ELSE CASE WHEN (({% parameter month_selector_copy_1990309625421819904 %} = ${TABLE}.`FirstOfMonth`) AND ({% parameter mtd_or_ytd_copy_1990309625422229507 %} = ${TABLE}.`MtdOrYtdCode`)) THEN '2' ELSE '0' END END ;;
    # Original Tableau formula: if [Parameters].[Parameter 1] = [FirstOfMonth] and [Parameters].[Parameter 3] = [MtdOrYtdCode] then '1' ELSEIF [Parameters].[Month Selector (copy)_1990309625421819904]= [FirstOfMonth] and [Parameters].[MTD or YTD (copy)_1990309625422229507] = [MtdOrYtdCode] then '2' ELSE "0" END
  }

  dimension: titles_home {
    description: "Calculated field: 'YTD'+' ' + 'YTD T20%'"
    type: string
    sql: (('YTD' || '            ') || 'YTD T20%') ;;
    # Original Tableau formula: 'YTD'+' ' + 'YTD T20%'
  }

  dimension: first_of_month_month_derived {
    description: "Calculated field: DATEPART('month', [FirstOfMonth])"
    type: number
    sql: EXTRACT(MONTH FROM ${TABLE}.`FirstOfMonth`) ;;
    # Original Tableau formula: DATEPART('month', [FirstOfMonth])
  }

  dimension: facility_opening_date_year_derived {
    description: "Calculated field: YEAR([FacilityOpeningDate])"
    type: number
    sql: EXTRACT(YEAR FROM ${TABLE}.`FacilityOpeningDate`) ;;
    # Original Tableau formula: YEAR([FacilityOpeningDate])
  }

  dimension: first_of_month_year_derived {
    description: "Calculated field: YEAR([FirstOfMonth])"
    type: number
    sql: EXTRACT(YEAR FROM ${TABLE}.`FirstOfMonth`) ;;
    # Original Tableau formula: YEAR([FirstOfMonth])
  }

measure: p_metrics_list_yoy_top_avg_derived {
    description: "Calculated field: AVG([p.Mertics List YOY (copy)_1990309625774809102])"
    type: number
    sql: AVG(${p_metrics_list_yoy_top_calc}) ;;


    # Original Tableau formula: AVG([p.Mertics List YOY (copy)_1990309625774809102])
  }

measure: empty_1_sum_derived {
    description: "Calculated field: SUM([Calculation_929711906784206853])"
    type: number
    sql: SUM(${empty_1_calc}) ;;


    # Original Tableau formula: SUM([Calculation_929711906784206853])
  }

measure: empty_2_sum_derived {
    description: "Calculated field: SUM([Empty 1 (copy)_929711906789224454])"
    type: number
    sql: SUM(${empty_2_calc}) ;;


    # Original Tableau formula: SUM([Empty 1 (copy)_929711906789224454])
  }

measure: empty_5_sum_derived {
    description: "Calculated field: SUM([Empty 2 (copy) (copy) (copy) (copy)_929711906789404682])"
    type: number
    sql: SUM(${empty_5_calc}) ;;


    # Original Tableau formula: SUM([Empty 2 (copy) (copy) (copy) (copy)_929711906789404682])
  }

measure: empty_6_sum_derived {
    description: "Calculated field: SUM([Empty 2 (copy) (copy) (copy)_929711906789396489])"
    type: number
    sql: SUM(${empty_6_calc}) ;;


    # Original Tableau formula: SUM([Empty 2 (copy) (copy) (copy)_929711906789396489])
  }

measure: empty_4_sum_derived {
    description: "Calculated field: SUM([Empty 2 (copy) (copy)_929711906789392392])"
    type: number
    sql: SUM(${empty_4_calc}) ;;


    # Original Tableau formula: SUM([Empty 2 (copy) (copy)_929711906789392392])
  }

measure: empty_3_sum_derived {
    description: "Calculated field: SUM([Empty 2 (copy)_929711906789380103])"
    type: number
    sql: SUM(${empty_3_calc}) ;;


    # Original Tableau formula: SUM([Empty 2 (copy)_929711906789380103])
  }

measure: empty_10_sum_derived {
    description: "Calculated field: SUM([Empty 6 (copy) (copy) (copy) (copy)_929711906792157198])"
    type: number
    sql: SUM(${empty_10_calc}) ;;


    # Original Tableau formula: SUM([Empty 6 (copy) (copy) (copy) (copy)_929711906792157198])
  }

measure: empty_9_sum_derived {
    description: "Calculated field: SUM([Empty 6 (copy) (copy) (copy)_929711906792153101])"
    type: number
    sql: SUM(${empty_9_calc}) ;;


    # Original Tableau formula: SUM([Empty 6 (copy) (copy) (copy)_929711906792153101])
  }

measure: empty_8_sum_derived {
    description: "Calculated field: SUM([Empty 6 (copy) (copy)_929711906792136716])"
    type: number
    sql: SUM(${empty_8_calc}) ;;


    # Original Tableau formula: SUM([Empty 6 (copy) (copy)_929711906792136716])
  }

measure: empty_7_sum_derived {
    description: "Calculated field: SUM([Empty 6 (copy)_929711906792128523])"
    type: number
    sql: SUM(${empty_7_calc}) ;;


    # Original Tableau formula: SUM([Empty 6 (copy)_929711906792128523])
  }

measure: empty20_sum_derived {
    description: "Calculated field: SUM([Empty15 (copy) (copy) (copy) (copy) (copy)_481322225921089544])"
    type: number
    sql: SUM(${empty20_calc}) ;;


    # Original Tableau formula: SUM([Empty15 (copy) (copy) (copy) (copy) (copy)_481322225921089544])
  }

measure: empty19_sum_derived {
    description: "Calculated field: SUM([Empty15 (copy) (copy) (copy) (copy)_481322225921081351])"
    type: number
    sql: SUM(${empty19_calc}) ;;


    # Original Tableau formula: SUM([Empty15 (copy) (copy) (copy) (copy)_481322225921081351])
  }

measure: empty18_sum_derived {
    description: "Calculated field: SUM([Empty15 (copy) (copy) (copy)_481322225921069062])"
    type: number
    sql: SUM(${empty18_calc}) ;;


    # Original Tableau formula: SUM([Empty15 (copy) (copy) (copy)_481322225921069062])
  }

measure: empty17_sum_derived {
    description: "Calculated field: SUM([Empty15 (copy) (copy)_481322225921056773])"
    type: number
    sql: SUM(${empty17_calc}) ;;


    # Original Tableau formula: SUM([Empty15 (copy) (copy)_481322225921056773])
  }

measure: empty16_sum_derived {
    description: "Calculated field: SUM([Empty15 (copy)_1521653786776162304])"
    type: number
    sql: SUM(${empty16_calc}) ;;


    # Original Tableau formula: SUM([Empty15 (copy)_1521653786776162304])
  }

measure: associateproductionperday_rank_avg_derived {
    description: "Calculated field: AVG([AssociateProductionPerDay_Rank])"
    type: number
    sql: AVG(${TABLE}.`AssociateProductionPerDay_Rank`) ;;


    # Original Tableau formula: AVG([AssociateProductionPerDay_Rank])
  }

measure: avgdaysuntilfirstvisit_rank_avg_derived {
    description: "Calculated field: AVG([AvgDaysUntilFirstVisit_Rank])"
    type: number
    sql: AVG(${TABLE}.`AvgDaysUntilFirstVisit_Rank`) ;;


    # Original Tableau formula: AVG([AvgDaysUntilFirstVisit_Rank])
  }

measure: estimatedproductioncurrentmonthrank_avg_derived {
    description: "Calculated field: AVG([Calculation_6748081138182688768])"
    type: number
    sql: AVG(${estimatedproductioncurrentmonthrank_calc}) ;;


    # Original Tableau formula: AVG([Calculation_6748081138182688768])
  }

measure: estimatedproductionbudgetvariancecurrentmonthrank_avg_derived {
    description: "Calculated field: AVG([Calculation_6748081138183135233])"
    type: number
    sql: AVG(${estimatedproductionbudgetvariancecurrentmonthrank_calc}) ;;


    # Original Tableau formula: AVG([Calculation_6748081138183135233])
  }

measure: crownbridge_rank_avg_derived {
    description: "Calculated field: AVG([CrownBridge_Rank])"
    type: number
    sql: AVG(${TABLE}.`CrownBridge_Rank`) ;;


    # Original Tableau formula: AVG([CrownBridge_Rank])
  }

measure: dentistry_rank_avg_derived {
    description: "Calculated field: AVG([Dentistry_Rank])"
    type: number
    sql: AVG(${TABLE}.`Dentistry_Rank`) ;;


    # Original Tableau formula: AVG([Dentistry_Rank])
  }

measure: dentures_rank_avg_derived {
    description: "Calculated field: AVG([Dentures_Rank])"
    type: number
    sql: AVG(${TABLE}.`Dentures_Rank`) ;;


    # Original Tableau formula: AVG([Dentures_Rank])
  }

measure: doctorfteperoffice_rank_avg_derived {
    description: "Calculated field: AVG([DoctorFTEPerOffice_Rank])"
    type: number
    sql: AVG(${TABLE}.`DoctorFTEPerOffice_Rank`) ;;


    # Original Tableau formula: AVG([DoctorFTEPerOffice_Rank])
  }

measure: epperday_rank_avg_derived {
    description: "Calculated field: AVG([EPPerDay_Rank])"
    type: number
    sql: AVG(${TABLE}.`EPPerDay_Rank`) ;;


    # Original Tableau formula: AVG([EPPerDay_Rank])
  }

measure: epshowrate_rank_avg_derived {
    description: "Calculated field: AVG([EPShowRate_Rank])"
    type: number
    sql: AVG(${TABLE}.`EPShowRate_Rank`) ;;


    # Original Tableau formula: AVG([EPShowRate_Rank])
  }

measure: eptxacceptedperep_rank_avg_derived {
    description: "Calculated field: AVG([EPTxAcceptedPerEP_Rank])"
    type: number
    sql: AVG(${TABLE}.`EPTxAcceptedPerEP_Rank`) ;;


    # Original Tableau formula: AVG([EPTxAcceptedPerEP_Rank])
  }

measure: eptxpresentedperep_rank_avg_derived {
    description: "Calculated field: AVG([EPTxPresentedPerEP_Rank])"
    type: number
    sql: AVG(${TABLE}.`EPTxPresentedPerEP_Rank`) ;;


    # Original Tableau formula: AVG([EPTxPresentedPerEP_Rank])
  }

measure: epyestoday_rank_avg_derived {
    description: "Calculated field: AVG([EPYesToday_Rank])"
    type: number
    sql: AVG(${TABLE}.`EPYesToday_Rank`) ;;


    # Original Tableau formula: AVG([EPYesToday_Rank])
  }

measure: hygienerevenueperdayproduction_rank_avg_derived {
    description: "Calculated field: AVG([HygieneRevenueperDayProduction_Rank])"
    type: number
    sql: AVG(${TABLE}.`HygieneRevenueperDayProduction_Rank`) ;;


    # Original Tableau formula: AVG([HygieneRevenueperDayProduction_Rank])
  }

measure: hygiene_rank_avg_derived {
    description: "Calculated field: AVG([Hygiene_Rank])"
    type: number
    sql: AVG(${TABLE}.`Hygiene_Rank`) ;;


    # Original Tableau formula: AVG([Hygiene_Rank])
  }

measure: implants_rank_avg_derived {
    description: "Calculated field: AVG([Implants_Rank])"
    type: number
    sql: AVG(${TABLE}.`Implants_Rank`) ;;


    # Original Tableau formula: AVG([Implants_Rank])
  }

measure: mcdproduction_rank_avg_derived {
    description: "Calculated field: AVG([MCDProduction_Rank])"
    type: number
    sql: AVG(${TABLE}.`MCDProduction_Rank`) ;;


    # Original Tableau formula: AVG([MCDProduction_Rank])
  }

measure: npperday_rank_avg_derived {
    description: "Calculated field: AVG([NPPerDay_Rank])"
    type: number
    sql: AVG(${TABLE}.`NPPerDay_Rank`) ;;


    # Original Tableau formula: AVG([NPPerDay_Rank])
  }

measure: npsamedaystarts_rank_avg_derived {
    description: "Calculated field: AVG([NPSameDayStarts_Rank])"
    type: number
    sql: AVG(${TABLE}.`NPSameDayStarts_Rank`) ;;


    # Original Tableau formula: AVG([NPSameDayStarts_Rank])
  }

measure: npshowrate_rank_avg_derived {
    description: "Calculated field: AVG([NPShowRate_Rank])"
    type: number
    sql: AVG(${TABLE}.`NPShowRate_Rank`) ;;


    # Original Tableau formula: AVG([NPShowRate_Rank])
  }

measure: nptxacceptedpernp_rank_avg_derived {
    description: "Calculated field: AVG([NPTxAcceptedPerNP_Rank])"
    type: number
    sql: AVG(${TABLE}.`NPTxAcceptedPerNP_Rank`) ;;


    # Original Tableau formula: AVG([NPTxAcceptedPerNP_Rank])
  }

measure: nptxpresentedpernp_rank_avg_derived {
    description: "Calculated field: AVG([NPTxPresentedPerNP_Rank])"
    type: number
    sql: AVG(${TABLE}.`NPTxPresentedPerNP_Rank`) ;;


    # Original Tableau formula: AVG([NPTxPresentedPerNP_Rank])
  }

measure: npyestoday_rank_avg_derived {
    description: "Calculated field: AVG([NPYesToday_Rank])"
    type: number
    sql: AVG(${TABLE}.`NPYesToday_Rank`) ;;


    # Original Tableau formula: AVG([NPYesToday_Rank])
  }

measure: netpromotersconumberl_rank_avg_derived {
    description: "Calculated field: AVG([NetPromoterSconumberL_Rank])"
    type: number
    sql: AVG(${TABLE}.`NetPromoterSconumberL_Rank`) ;;


    # Original Tableau formula: AVG([NetPromoterSconumberL_Rank])
  }

measure: netpromoterscore_rank_avg_derived {
    description: "Calculated field: AVG([NetPromoterScore_Rank])"
    type: number
    sql: AVG(${TABLE}.`NetPromoterScore_Rank`) ;;


    # Original Tableau formula: AVG([NetPromoterScore_Rank])
  }

measure: newpatientotc_rank_avg_derived {
    description: "Calculated field: AVG([NewPatientOtc_Rank])"
    type: number
    sql: AVG(${TABLE}.`NewPatientOtc_Rank`) ;;


    # Original Tableau formula: AVG([NewPatientOtc_Rank])
  }

measure: newpatienttxplancompletionrate_rank_avg_derived {
    description: "Calculated field: AVG([NewPatientTxPlanCompletionRate_Rank])"
    type: number
    sql: AVG(${TABLE}.`NewPatientTxPlanCompletionRate_Rank`) ;;


    # Original Tableau formula: AVG([NewPatientTxPlanCompletionRate_Rank])
  }

measure: onlinereviewratings_rank_avg_derived {
    description: "Calculated field: AVG([OnlineReviewRatings_Rank])"
    type: number
    sql: AVG(${TABLE}.`OnlineReviewRatings_Rank`) ;;


    # Original Tableau formula: AVG([OnlineReviewRatings_Rank])
  }

measure: oralhealthscan_rank_avg_derived {
    description: "Calculated field: AVG([OralHealthScan_Rank])"
    type: number
    sql: AVG(${TABLE}.`OralHealthScan_Rank`) ;;


    # Original Tableau formula: AVG([OralHealthScan_Rank])
  }

measure: orthostartsperofficepermonth_rank_avg_derived {
    description: "Calculated field: AVG([OrthoStartsPerOfficePerMonth_Rank])"
    type: number
    sql: AVG(${TABLE}.`OrthoStartsPerOfficePerMonth_Rank`) ;;


    # Original Tableau formula: AVG([OrthoStartsPerOfficePerMonth_Rank])
  }

measure: orthodontics_rank_avg_derived {
    description: "Calculated field: AVG([Orthodontics_Rank])"
    type: number
    sql: AVG(${TABLE}.`Orthodontics_Rank`) ;;


    # Original Tableau formula: AVG([Orthodontics_Rank])
  }

measure: patientsatisfaction_rank_avg_derived {
    description: "Calculated field: AVG([PatientSatisfaction_Rank])"
    type: number
    sql: AVG(${TABLE}.`PatientSatisfaction_Rank`) ;;


    # Original Tableau formula: AVG([PatientSatisfaction_Rank])
  }

measure: percentcreditapplications_rank_avg_derived {
    description: "Calculated field: AVG([PercentCreditApplications_Rank])"
    type: number
    sql: AVG(${TABLE}.`PercentCreditApplications_Rank`) ;;


    # Original Tableau formula: AVG([PercentCreditApplications_Rank])
  }

measure: percentofschedule_rank_avg_derived {
    description: "Calculated field: AVG([PercentOfSchedule_Rank])"
    type: number
    sql: AVG(${TABLE}.`PercentOfSchedule_Rank`) ;;


    # Original Tableau formula: AVG([PercentOfSchedule_Rank])
  }

measure: percentofbalancecollected_rank_avg_derived {
    description: "Calculated field: AVG([PercentofBalanceCollected_Rank])"
    type: number
    sql: AVG(${TABLE}.`PercentofBalanceCollected_Rank`) ;;


    # Original Tableau formula: AVG([PercentofBalanceCollected_Rank])
  }

measure: percentofpatientleavingwithappt_rank_avg_derived {
    description: "Calculated field: AVG([PercentofPatientLeavingwithAppt_Rank])"
    type: number
    sql: AVG(${TABLE}.`PercentofPatientLeavingwithAppt_Rank`) ;;


    # Original Tableau formula: AVG([PercentofPatientLeavingwithAppt_Rank])
  }

measure: production_rank_avg_derived {
    description: "Calculated field: AVG([Production_Rank])"
    type: number
    sql: AVG(${TABLE}.`Production_Rank`) ;;


    # Original Tableau formula: AVG([Production_Rank])
  }

measure: specialty_rank_avg_derived {
    description: "Calculated field: AVG([Specialty_Rank])"
    type: number
    sql: AVG(${TABLE}.`Specialty_Rank`) ;;


    # Original Tableau formula: AVG([Specialty_Rank])
  }

measure: tapasales_rank_avg_derived {
    description: "Calculated field: AVG([TAPASales_Rank])"
    type: number
    sql: AVG(${TABLE}.`TAPASales_Rank`) ;;


    # Original Tableau formula: AVG([TAPASales_Rank])
  }

measure: totaldeposit_rank_avg_derived {
    description: "Calculated field: AVG([TotalDeposit_Rank])"
    type: number
    sql: AVG(${TABLE}.`TotalDeposit_Rank`) ;;


    # Original Tableau formula: AVG([TotalDeposit_Rank])
  }

measure: addedtoschedule_rank_avg_derived {
    description: "Calculated field: AVG([addedtoschedule_Rank])"
    type: number
    sql: AVG(${TABLE}.`addedtoschedule_Rank`) ;;


    # Original Tableau formula: AVG([addedtoschedule_Rank])
  }

  dimension: show_rank_user_derived {
    description: "Calculated field: [Calculation_119908351402987520]"
    type: string
    sql: ${show_rank_calc} ;;
    # Original Tableau formula: [Calculation_119908351402987520]
  }

measure: empty14_sum_derived {
    description: "Calculated field: SUM([Empty11 (copy) (copy)_929711906804490259])"
    type: number
    sql: SUM(${empty14_calc}) ;;


    # Original Tableau formula: SUM([Empty11 (copy) (copy)_929711906804490259])
  }

measure: empty13_sum_derived {
    description: "Calculated field: SUM([Empty11 (copy)_929711906804482066])"
    type: number
    sql: SUM(${empty13_calc}) ;;


    # Original Tableau formula: SUM([Empty11 (copy)_929711906804482066])
  }

measure: empty15_sum_derived {
    description: "Calculated field: SUM([Empty14 (copy)_1536571959081541638])"
    type: number
    sql: SUM(${empty15_calc}) ;;


    # Original Tableau formula: SUM([Empty14 (copy)_1536571959081541638])
  }

measure: empty21_sum_derived {
    description: "Calculated field: SUM([Empty15 (copy) (copy) (copy) (copy) (copy) (copy)_481322225921101833])"
    type: number
    sql: SUM(${empty21_calc}) ;;


    # Original Tableau formula: SUM([Empty15 (copy) (copy) (copy) (copy) (copy) (copy)_481322225921101833])
  }

measure: apptlength_adult_avg_derived {
    description: "Calculated field: AVG([ApptLength_Adult])"
    type: number
    sql: AVG(${TABLE}.`ApptLength_Adult`) ;;


    # Original Tableau formula: AVG([ApptLength_Adult])
  }

measure: appointedhourspcandnp_sum_derived {
    description: "Calculated field: SUM([AppointedHoursPCandNP])"
    type: number
    sql: SUM(${TABLE}.`AppointedHoursPCandNP`) ;;


    # Original Tableau formula: SUM([AppointedHoursPCandNP])
  }

measure: avaliablehourspcandnp_sum_derived {
    description: "Calculated field: SUM([AvaliableHoursPCandNP])"
    type: number
    sql: SUM(${TABLE}.`AvaliableHoursPCandNP`) ;;


    # Original Tableau formula: SUM([AvaliableHoursPCandNP])
  }

measure: nppc_blocked_sum_derived {
    description: "Calculated field: SUM([Calculation_1724878671913934851])"
    type: number
    sql: SUM(${nppc_blocked_calc}) ;;


    # Original Tableau formula: SUM([Calculation_1724878671913934851])
  }

measure: extendednpappthourspcandnp_sum_derived {
    description: "Calculated field: SUM([ExtendedNPApptHoursPCandNP])"
    type: number
    sql: SUM(${TABLE}.`ExtendedNPApptHoursPCandNP`) ;;


    # Original Tableau formula: SUM([ExtendedNPApptHoursPCandNP])
  }

measure: gaphourspcandnp_sum_derived {
    description: "Calculated field: SUM([GapHoursPCandNP])"
    type: number
    sql: SUM(${TABLE}.`GapHoursPCandNP`) ;;


    # Original Tableau formula: SUM([GapHoursPCandNP])
  }

measure: nonnphourspcandnp_sum_derived {
    description: "Calculated field: SUM([NonNPHoursPCandNP])"
    type: number
    sql: SUM(${TABLE}.`NonNPHoursPCandNP`) ;;


    # Original Tableau formula: SUM([NonNPHoursPCandNP])
  }

measure: remaininghourspcandnp_sum_derived {
    description: "Calculated field: SUM([RemainingHoursPCandNP])"
    type: number
    sql: SUM(${TABLE}.`RemainingHoursPCandNP`) ;;


    # Original Tableau formula: SUM([RemainingHoursPCandNP])
  }

measure: remainingslotspcandnp_sum_derived {
    description: "Calculated field: SUM([RemainingSlotsPCandNP])"
    type: number
    sql: SUM(${TABLE}.`RemainingSlotsPCandNP`) ;;


    # Original Tableau formula: SUM([RemainingSlotsPCandNP])
  }

measure: totalinefficienthourspcandnp_sum_derived {
    description: "Calculated field: SUM([TotalInefficientHoursPCandNP])"
    type: number
    sql: SUM(${TABLE}.`TotalInefficientHoursPCandNP`) ;;


    # Original Tableau formula: SUM([TotalInefficientHoursPCandNP])
  }

measure: totalschedulehourspcandnp_sum_derived {
    description: "Calculated field: SUM([TotalScheduleHoursPCandNP])"
    type: number
    sql: SUM(${TABLE}.`TotalScheduleHoursPCandNP`) ;;


    # Original Tableau formula: SUM([TotalScheduleHoursPCandNP])
  }

measure: apptlength_adulttop20_avg_derived {
    description: "Calculated field: AVG([ApptLength_AdultTop20])"
    type: number
    sql: AVG(${TABLE}.`ApptLength_AdultTop20`) ;;


    # Original Tableau formula: AVG([ApptLength_AdultTop20])
  }

measure: comptoproblemfocusedexamsttop20_avg_derived {
    description: "Calculated field: AVG([ComptoProblemFocusedExamstTop20])"
    type: number
    sql: AVG(${TABLE}.`ComptoProblemFocusedExamstTop20`) ;;


    # Original Tableau formula: AVG([ComptoProblemFocusedExamstTop20])
  }

measure: npapptsperdaypercenttop20_avg_derived {
    description: "Calculated field: AVG([NPApptsPerDayPercentTop20])"
    type: number
    sql: AVG(${TABLE}.`NPApptsPerDayPercentTop20`) ;;


    # Original Tableau formula: AVG([NPApptsPerDayPercentTop20])
  }

measure: npblocktop20_avg_derived {
    description: "Calculated field: AVG([NPBlockTop20])"
    type: number
    sql: AVG(${TABLE}.`NPBlockTop20`) ;;


    # Original Tableau formula: AVG([NPBlockTop20])
  }

measure: pcblocktop20_avg_derived {
    description: "Calculated field: AVG([PCBlockTop20])"
    type: number
    sql: AVG(${TABLE}.`PCBlockTop20`) ;;


    # Original Tableau formula: AVG([PCBlockTop20])
  }

measure: inefficienttop20_sum_derived {
    description: "Calculated field: SUM([InefficientTop20])"
    type: number
    sql: SUM(${TABLE}.`InefficientTop20`) ;;


    # Original Tableau formula: SUM([InefficientTop20])
  }

measure: apptlength_adult_rank_avg_derived {
    description: "Calculated field: AVG([ApptLength_Adult_Rank])"
    type: number
    sql: AVG(${TABLE}.`ApptLength_Adult_Rank`) ;;


    # Original Tableau formula: AVG([ApptLength_Adult_Rank])
  }

measure: comptoproblemfocusedexams_rank_avg_derived {
    description: "Calculated field: AVG([ComptoProblemFocusedExams_Rank])"
    type: number
    sql: AVG(${TABLE}.`ComptoProblemFocusedExams_Rank`) ;;


    # Original Tableau formula: AVG([ComptoProblemFocusedExams_Rank])
  }

measure: inefficiency_rank_avg_derived {
    description: "Calculated field: AVG([Inefficiency_Rank])"
    type: number
    sql: AVG(${TABLE}.`Inefficiency_Rank`) ;;


    # Original Tableau formula: AVG([Inefficiency_Rank])
  }

measure: npapptsperday_rank_avg_derived {
    description: "Calculated field: AVG([NPApptsPerDay_Rank])"
    type: number
    sql: AVG(${TABLE}.`NPApptsPerDay_Rank`) ;;


    # Original Tableau formula: AVG([NPApptsPerDay_Rank])
  }

measure: npblock_rank_avg_derived {
    description: "Calculated field: AVG([NPBlock_Rank])"
    type: number
    sql: AVG(${TABLE}.`NPBlock_Rank`) ;;


    # Original Tableau formula: AVG([NPBlock_Rank])
  }

measure: pcblock_rank_avg_derived {
    description: "Calculated field: AVG([PCBlock_Rank])"
    type: number
    sql: AVG(${TABLE}.`PCBlock_Rank`) ;;


    # Original Tableau formula: AVG([PCBlock_Rank])
  }

measure: inefficienttop20_avg_derived {
    description: "Calculated field: AVG([InefficientTop20])"
    type: number
    sql: AVG(${TABLE}.`InefficientTop20`) ;;


    # Original Tableau formula: AVG([InefficientTop20])
  }

measure: estimatedproductioncurrentmonth_num_sum_derived {
    description: "Calculated field: SUM([EstimatedProductionCurrentMonth_Num])"
    type: number
    sql: SUM(${TABLE}.`EstimatedProductionCurrentMonth_Num`) ;;


    # Original Tableau formula: SUM([EstimatedProductionCurrentMonth_Num])
  }

measure: efficiency_den_sum_derived {
    description: "Calculated field: SUM([Efficiency_Den])"
    type: number
    sql: SUM(${TABLE}.`Efficiency_Den`) ;;


    # Original Tableau formula: SUM([Efficiency_Den])
  }

measure: efficiency_num_sum_derived {
    description: "Calculated field: SUM([Efficiency_Num])"
    type: number
    sql: SUM(${TABLE}.`Efficiency_Num`) ;;


    # Original Tableau formula: SUM([Efficiency_Num])
  }

measure: npshowrate_den_sum_derived {
    description: "Calculated field: SUM([NPShowRate_Den])"
    type: number
    sql: SUM(${TABLE}.`NPShowRate_Den`) ;;


    # Original Tableau formula: SUM([NPShowRate_Den])
  }

  dimension: first_of_month_month_trunc_derived {
    description: "Calculated field: DATETRUNC('month', [FirstOfMonth])"
    type: date_raw
    sql: DATE_TRUNC(${TABLE}.`FirstOfMonth`, month) ;;
    # Original Tableau formula: DATETRUNC('month', [FirstOfMonth])
  }

measure: associateproductiontop20_avg_derived {
    description: "Calculated field: AVG([AssociateProductionTop20])"
    type: number
    sql: AVG(${TABLE}.`AssociateProductionTop20`) ;;


    # Original Tableau formula: AVG([AssociateProductionTop20])
  }

measure: avgdaysuntilfirstvisitpercenttop20_avg_derived {
    description: "Calculated field: AVG([AvgDaysUntilFirstVisitPercentTop20])"
    type: number
    sql: AVG(${TABLE}.`AvgDaysUntilFirstVisitPercentTop20`) ;;


    # Original Tableau formula: AVG([AvgDaysUntilFirstVisitPercentTop20])
  }

measure: creditapplicationstop20_avg_derived {
    description: "Calculated field: AVG([CreditApplicationsTop20])"
    type: number
    sql: AVG(${TABLE}.`CreditApplicationsTop20`) ;;


    # Original Tableau formula: AVG([CreditApplicationsTop20])
  }

measure: crownbridgetop20_avg_derived {
    description: "Calculated field: AVG([CrownBridgeTop20])"
    type: number
    sql: AVG(${TABLE}.`CrownBridgeTop20`) ;;


    # Original Tableau formula: AVG([CrownBridgeTop20])
  }

measure: dentistrytop20_avg_derived {
    description: "Calculated field: AVG([DentistryTop20])"
    type: number
    sql: AVG(${TABLE}.`DentistryTop20`) ;;


    # Original Tableau formula: AVG([DentistryTop20])
  }

measure: denturestop20_avg_derived {
    description: "Calculated field: AVG([DenturesTop20])"
    type: number
    sql: AVG(${TABLE}.`DenturesTop20`) ;;


    # Original Tableau formula: AVG([DenturesTop20])
  }

measure: doctorftetop20_avg_derived {
    description: "Calculated field: AVG([DoctorFTETop20])"
    type: number
    sql: AVG(${TABLE}.`DoctorFTETop20`) ;;


    # Original Tableau formula: AVG([DoctorFTETop20])
  }

measure: epperdaytop20_avg_derived {
    description: "Calculated field: AVG([EPPerDayTop20])"
    type: number
    sql: AVG(${TABLE}.`EPPerDayTop20`) ;;


    # Original Tableau formula: AVG([EPPerDayTop20])
  }

measure: epshowratetop20_avg_derived {
    description: "Calculated field: AVG([EPShowRateTop20])"
    type: number
    sql: AVG(${TABLE}.`EPShowRateTop20`) ;;


    # Original Tableau formula: AVG([EPShowRateTop20])
  }

measure: eptxacceptedpereptop20_avg_derived {
    description: "Calculated field: AVG([EPTxAcceptedPerEPTop20])"
    type: number
    sql: AVG(${TABLE}.`EPTxAcceptedPerEPTop20`) ;;


    # Original Tableau formula: AVG([EPTxAcceptedPerEPTop20])
  }

measure: eptxpresentedpereptop20_avg_derived {
    description: "Calculated field: AVG([EPTxPresentedPerEPTop20])"
    type: number
    sql: AVG(${TABLE}.`EPTxPresentedPerEPTop20`) ;;


    # Original Tableau formula: AVG([EPTxPresentedPerEPTop20])
  }

measure: epyestodaytop20_avg_derived {
    description: "Calculated field: AVG([EPYesTodayTop20])"
    type: number
    sql: AVG(${TABLE}.`EPYesTodayTop20`) ;;


    # Original Tableau formula: AVG([EPYesTodayTop20])
  }

measure: empty11_avg_derived {
    description: "Calculated field: AVG([Empty 6 (copy) (copy) (copy) (copy) (copy 2)_929711906792173584])"
    type: number
    sql: AVG(${empty11_calc}) ;;


    # Original Tableau formula: AVG([Empty 6 (copy) (copy) (copy) (copy) (copy 2)_929711906792173584])
  }

measure: empty12_avg_derived {
    description: "Calculated field: AVG([Empty 6 (copy) (copy) (copy) (copy) (copy)_929711906792165391])"
    type: number
    sql: AVG(${empty12_calc}) ;;


    # Original Tableau formula: AVG([Empty 6 (copy) (copy) (copy) (copy) (copy)_929711906792165391])
  }

measure: empty_10_avg_derived {
    description: "Calculated field: AVG([Empty 6 (copy) (copy) (copy) (copy)_929711906792157198])"
    type: number
    sql: AVG(${empty_10_calc}) ;;


    # Original Tableau formula: AVG([Empty 6 (copy) (copy) (copy) (copy)_929711906792157198])
  }

measure: empty_9_avg_derived {
    description: "Calculated field: AVG([Empty 6 (copy) (copy) (copy)_929711906792153101])"
    type: number
    sql: AVG(${empty_9_calc}) ;;


    # Original Tableau formula: AVG([Empty 6 (copy) (copy) (copy)_929711906792153101])
  }

measure: hygienetop20_avg_derived {
    description: "Calculated field: AVG([HygieneTop20])"
    type: number
    sql: AVG(${TABLE}.`HygieneTop20`) ;;


    # Original Tableau formula: AVG([HygieneTop20])
  }

measure: hygienistdailyproductiontop20_avg_derived {
    description: "Calculated field: AVG([HygienistDailyProductionTop20])"
    type: number
    sql: AVG(${TABLE}.`HygienistDailyProductionTop20`) ;;


    # Original Tableau formula: AVG([HygienistDailyProductionTop20])
  }

measure: implantstop20_avg_derived {
    description: "Calculated field: AVG([ImplantsTop20])"
    type: number
    sql: AVG(${TABLE}.`ImplantsTop20`) ;;


    # Original Tableau formula: AVG([ImplantsTop20])
  }

measure: mcdproductiontop20_avg_derived {
    description: "Calculated field: AVG([MCDProductionTop20])"
    type: number
    sql: AVG(${TABLE}.`MCDProductionTop20`) ;;


    # Original Tableau formula: AVG([MCDProductionTop20])
  }

measure: npperdaytop20_avg_derived {
    description: "Calculated field: AVG([NPPerDayTop20])"
    type: number
    sql: AVG(${TABLE}.`NPPerDayTop20`) ;;


    # Original Tableau formula: AVG([NPPerDayTop20])
  }

measure: npsamedaystartstop20_avg_derived {
    description: "Calculated field: AVG([NPSameDayStartsTop20])"
    type: number
    sql: AVG(${TABLE}.`NPSameDayStartsTop20`) ;;


    # Original Tableau formula: AVG([NPSameDayStartsTop20])
  }

measure: npshowratetop20_avg_derived {
    description: "Calculated field: AVG([NPShowRateTop20])"
    type: number
    sql: AVG(${TABLE}.`NPShowRateTop20`) ;;


    # Original Tableau formula: AVG([NPShowRateTop20])
  }

measure: nptxacceptedpernptop20_avg_derived {
    description: "Calculated field: AVG([NPTxAcceptedPerNPTop20])"
    type: number
    sql: AVG(${TABLE}.`NPTxAcceptedPerNPTop20`) ;;


    # Original Tableau formula: AVG([NPTxAcceptedPerNPTop20])
  }

measure: nptxpresentedpernptop20_avg_derived {
    description: "Calculated field: AVG([NPTxPresentedPerNPTop20])"
    type: number
    sql: AVG(${TABLE}.`NPTxPresentedPerNPTop20`) ;;


    # Original Tableau formula: AVG([NPTxPresentedPerNPTop20])
  }

measure: npyestodaytop20_avg_derived {
    description: "Calculated field: AVG([NPYesTodayTop20])"
    type: number
    sql: AVG(${TABLE}.`NPYesTodayTop20`) ;;


    # Original Tableau formula: AVG([NPYesTodayTop20])
  }

measure: netpromotersconumberltop20_avg_derived {
    description: "Calculated field: AVG([NetPromoterSconumberLTop20])"
    type: number
    sql: AVG(${TABLE}.`NetPromoterSconumberLTop20`) ;;


    # Original Tableau formula: AVG([NetPromoterSconumberLTop20])
  }

measure: netpromoterscoretop20_avg_derived {
    description: "Calculated field: AVG([NetPromoterScoreTop20])"
    type: number
    sql: AVG(${TABLE}.`NetPromoterScoreTop20`) ;;


    # Original Tableau formula: AVG([NetPromoterScoreTop20])
  }

measure: newpatientotctop20_avg_derived {
    description: "Calculated field: AVG([NewPatientOtcTop20])"
    type: number
    sql: AVG(${TABLE}.`NewPatientOtcTop20`) ;;


    # Original Tableau formula: AVG([NewPatientOtcTop20])
  }

measure: newpatienttxplancompletionratetop20_avg_derived {
    description: "Calculated field: AVG([NewPatientTxPlanCompletionRateTop20])"
    type: number
    sql: AVG(${TABLE}.`NewPatientTxPlanCompletionRateTop20`) ;;


    # Original Tableau formula: AVG([NewPatientTxPlanCompletionRateTop20])
  }

measure: onlinereviewratingstop20_avg_derived {
    description: "Calculated field: AVG([OnlineReviewRatingsTop20])"
    type: number
    sql: AVG(${TABLE}.`OnlineReviewRatingsTop20`) ;;


    # Original Tableau formula: AVG([OnlineReviewRatingsTop20])
  }

measure: oralhealthscanpercenttop20_avg_derived {
    description: "Calculated field: AVG([OralHealthScanPercentTop20])"
    type: number
    sql: AVG(${TABLE}.`OralHealthScanPercentTop20`) ;;


    # Original Tableau formula: AVG([OralHealthScanPercentTop20])
  }

measure: orthostartstop20_avg_derived {
    description: "Calculated field: AVG([OrthoStartsTop20])"
    type: number
    sql: AVG(${TABLE}.`OrthoStartsTop20`) ;;


    # Original Tableau formula: AVG([OrthoStartsTop20])
  }

measure: orthodonticstop20_avg_derived {
    description: "Calculated field: AVG([OrthodonticsTop20])"
    type: number
    sql: AVG(${TABLE}.`OrthodonticsTop20`) ;;


    # Original Tableau formula: AVG([OrthodonticsTop20])
  }

measure: patientsatisfactiontop20_avg_derived {
    description: "Calculated field: AVG([PatientSatisfactionTop20])"
    type: number
    sql: AVG(${TABLE}.`PatientSatisfactionTop20`) ;;


    # Original Tableau formula: AVG([PatientSatisfactionTop20])
  }

measure: percentofscheduletop20_avg_derived {
    description: "Calculated field: AVG([PercentOfScheduleTop20])"
    type: number
    sql: AVG(${TABLE}.`PercentOfScheduleTop20`) ;;


    # Original Tableau formula: AVG([PercentOfScheduleTop20])
  }

measure: percentofpatientleavingwithappttop20_avg_derived {
    description: "Calculated field: AVG([PercentofPatientLeavingwithApptTop20])"
    type: number
    sql: AVG(${TABLE}.`PercentofPatientLeavingwithApptTop20`) ;;


    # Original Tableau formula: AVG([PercentofPatientLeavingwithApptTop20])
  }

measure: productiontop20_avg_derived {
    description: "Calculated field: AVG([ProductionTop20])"
    type: number
    sql: AVG(${TABLE}.`ProductionTop20`) ;;


    # Original Tableau formula: AVG([ProductionTop20])
  }

measure: specialtytop20_avg_derived {
    description: "Calculated field: AVG([SpecialtyTop20])"
    type: number
    sql: AVG(${TABLE}.`SpecialtyTop20`) ;;


    # Original Tableau formula: AVG([SpecialtyTop20])
  }

measure: tapasalestop20_avg_derived {
    description: "Calculated field: AVG([TAPASalesTop20])"
    type: number
    sql: AVG(${TABLE}.`TAPASalesTop20`) ;;


    # Original Tableau formula: AVG([TAPASalesTop20])
  }

  dimension: last_user_derived {
    description: "Calculated field: [Calculation_1388797574722514946]"
    type: string
    sql: ${last_calc} ;;
    # Original Tableau formula: [Calculation_1388797574722514946]
  }

  # Measures

  measure: total_npperday_den {
    description: "NPPerDay Den"
    type: sum
    sql: ${npperday_den_raw} ;;
    value_format_name: decimal_0
    label: "NPPerDay Den"
  }

  measure: total_existingpatientsperday_den {
    description: "ExistingPatientsPerDay Den"
    type: sum
    sql: ${existingpatientsperday_den_raw} ;;
    value_format_name: decimal_0
    label: "ExistingPatientsPerDay Den"
  }

  measure: total_avgdaysuntilfirstvisit_den {
    description: "AvgDaysUntilFirstVisit Den"
    type: sum
    sql: ${avgdaysuntilfirstvisit_den_raw} ;;
    value_format_name: decimal_0
    label: "AvgDaysUntilFirstVisit Den"
  }

  measure: total_npshowrate_den {
    description: "NPShowRate Den"
    type: sum
    sql: ${npshowrate_den_raw} ;;
    value_format_name: decimal_0
    label: "NPShowRate Den"
  }

  measure: total_epshowrate_den {
    description: "EPShowRate Den"
    type: sum
    sql: ${epshowrate_den_raw} ;;
    value_format_name: decimal_0
    label: "EPShowRate Den"
  }

  measure: total_npyestoday_den {
    description: "NPYesToday Den"
    type: sum
    sql: ${npyestoday_den_raw} ;;
    value_format_name: decimal_0
    label: "NPYesToday Den"
  }

  measure: total_epyestoday_den {
    description: "EPYesToday Den"
    type: sum
    sql: ${epyestoday_den_raw} ;;
    value_format_name: decimal_0
    label: "EPYesToday Den"
  }

  measure: total_percentcreditapplications_den {
    description: "PercentCreditApplications Den"
    type: sum
    sql: ${percentcreditapplications_den_raw} ;;
    value_format_name: decimal_0
    label: "PercentCreditApplications Den"
  }

  measure: total_newpatientotc_den {
    description: "NewPatientOtc Den"
    type: sum
    sql: ${newpatientotc_den_raw} ;;
    value_format_name: decimal_0
    label: "NewPatientOtc Den"
  }

  measure: total_nptxpresentedpernp_den {
    description: "NPTxPresentedPerNP Den"
    type: sum
    sql: ${nptxpresentedpernp_den_raw} ;;
    value_format_name: decimal_0
    label: "NPTxPresentedPerNP Den"
  }

  measure: total_nptxacceptedpernp_den {
    description: "NPTxAcceptedPerNP Den"
    type: sum
    sql: ${nptxacceptedpernp_den_raw} ;;
    value_format_name: decimal_0
    label: "NPTxAcceptedPerNP Den"
  }

  measure: total_eptxpresentedperep_den {
    description: "EPTxPresentedPerEP Den"
    type: sum
    sql: ${eptxpresentedperep_den_raw} ;;
    value_format_name: decimal_0
    label: "EPTxPresentedPerEP Den"
  }

  measure: total_eptxacceptedperep_den {
    description: "EPTxAcceptedPerEP Den"
    type: sum
    sql: ${eptxacceptedperep_den_raw} ;;
    value_format_name: decimal_0
    label: "EPTxAcceptedPerEP Den"
  }

  measure: total_oralhealthscan_den {
    description: "OralHealthScan Den"
    type: sum
    sql: ${oralhealthscan_den_raw} ;;
    value_format_name: decimal_0
    label: "OralHealthScan Den"
  }

  measure: total_tapasales_den {
    description: "TAPASales Den"
    type: sum
    sql: ${tapasales_den_raw} ;;
    value_format_name: decimal_0
    label: "TAPASales Den"
  }

  measure: total_doctorfte_den {
    description: "DoctorFTE Den"
    type: sum
    sql: ${doctorfte_den_raw} ;;
    value_format_name: decimal_0
    label: "DoctorFTE Den"
  }

  measure: total_mcdproduction_den {
    description: "MCDProduction Den"
    type: sum
    sql: ${mcdproduction_den_raw} ;;
    value_format_name: decimal_0
    label: "MCDProduction Den"
  }

  measure: total_associateproduction_den {
    description: "AssociateProduction Den"
    type: sum
    sql: ${associateproduction_den_raw} ;;
    value_format_name: decimal_0
    label: "AssociateProduction Den"
  }

  measure: total_hygienistproduction_den {
    description: "HygienistProduction Den"
    type: sum
    sql: ${hygienistproduction_den_raw} ;;
    value_format_name: decimal_0
    label: "HygienistProduction Den"
  }

  measure: total_orthostarts_den {
    description: "OrthoStarts Den"
    type: sum
    sql: ${orthostarts_den_raw} ;;
    value_format_name: decimal_0
    label: "OrthoStarts Den"
  }

  measure: total_percentofschedule_den {
    description: "PercentOfSchedule Den"
    type: sum
    sql: ${percentofschedule_den_raw} ;;
    value_format_name: decimal_0
    label: "PercentOfSchedule Den"
  }

  measure: total_npsamedaystarts_den {
    description: "NPSameDayStarts Den"
    type: sum
    sql: ${npsamedaystarts_den_raw} ;;
    value_format_name: decimal_0
    label: "NPSameDayStarts Den"
  }

  measure: total_npcompletionrate_den {
    description: "NPCompletionRate Den"
    type: sum
    sql: ${npcompletionrate_den_raw} ;;
    value_format_name: decimal_0
    label: "NPCompletionRate Den"
  }

  measure: total_dentures_den {
    description: "Dentures Den"
    type: sum
    sql: ${dentures_den_raw} ;;
    value_format_name: decimal_0
    label: "Dentures Den"
  }

  measure: total_dentistry_den {
    description: "Dentistry Den"
    type: sum
    sql: ${dentistry_den_raw} ;;
    value_format_name: decimal_0
    label: "Dentistry Den"
  }

  measure: total_hygiene_den {
    description: "Hygiene Den"
    type: sum
    sql: ${hygiene_den_raw} ;;
    value_format_name: decimal_0
    label: "Hygiene Den"
  }

  measure: total_specialty_den {
    description: "Specialty Den"
    type: sum
    sql: ${specialty_den_raw} ;;
    value_format_name: decimal_0
    label: "Specialty Den"
  }

  measure: total_orthodontics_den {
    description: "Orthodontics Den"
    type: sum
    sql: ${orthodontics_den_raw} ;;
    value_format_name: decimal_0
    label: "Orthodontics Den"
  }

  measure: total_crownbridge_den {
    description: "CrownBridge Den"
    type: sum
    sql: ${crownbridge_den_raw} ;;
    value_format_name: decimal_0
    label: "CrownBridge Den"
  }

  measure: total_implants_den {
    description: "Implants Den"
    type: sum
    sql: ${implants_den_raw} ;;
    value_format_name: decimal_0
    label: "Implants Den"
  }

  measure: total_production_den {
    description: "Production Den"
    type: sum
    sql: ${production_den_raw} ;;
    value_format_name: decimal_0
    label: "Production Den"
  }

  measure: total_patientsatisfaction_den {
    description: "PatientSatisfaction Den"
    type: sum
    sql: ${patientsatisfaction_den_raw} ;;
    value_format_name: decimal_0
    label: "PatientSatisfaction Den"
  }

  measure: total_onlinereviewratings_den {
    description: "OnlineReviewRatings Den"
    type: sum
    sql: ${onlinereviewratings_den_raw} ;;
    value_format_name: decimal_0
    label: "OnlineReviewRatings Den"
  }

  measure: total_addedtoschedule_num {
    description: "Addedtoschedule Num"
    type: sum
    sql: ${addedtoschedule_num_raw} ;;
    value_format_name: decimal_0
    label: "Addedtoschedule Num"
  }

  measure: total_estimatedproductioncurrentmonth_num {
    description: "EstimatedProductionCurrentMonth Num"
    type: sum
    sql: ${estimatedproductioncurrentmonth_num_raw} ;;
    value_format_name: decimal_0
    label: "EstimatedProductionCurrentMonth Num"
  }

  measure: total_estimatedproductionbudgetvariance_num {
    description: "EstimatedProductionBudgetVariance Num"
    type: sum
    sql: ${estimatedproductionbudgetvariance_num_raw} ;;
    value_format_name: decimal_0
    label: "EstimatedProductionBudgetVariance Num"
  }

  measure: total_percentofbalancecollected_den {
    description: "PercentofBalanceCollected Den"
    type: sum
    sql: ${percentofbalancecollected_den_raw} ;;
    value_format_name: decimal_0
    label: "PercentofBalanceCollected Den"
  }

  measure: total_netpromotersconumberl_den {
    description: "NetPromoterSconumberL Den"
    type: sum
    sql: ${netpromotersconumberl_den_raw} ;;
    value_format_name: decimal_0
    label: "NetPromoterSconumberL Den"
  }

  measure: total_netpromoterscore_den {
    description: "NetPromoterScore Den"
    type: sum
    sql: ${netpromoterscore_den_raw} ;;
    value_format_name: decimal_0
    label: "NetPromoterScore Den"
  }

  measure: total_percentofpatientleavingwithappt_den {
    description: "PercentofPatientleavingwithappt Den"
    type: sum
    sql: ${percentofpatientleavingwithappt_den_raw} ;;
    value_format_name: decimal_0
    label: "PercentofPatientleavingwithappt Den"
  }

  measure: total_comptoproblemfocusedexams_num {
    description: "Original name: [ComptoProblemFocusedExams_Num]"
    type: sum
    sql: ${comptoproblemfocusedexams_num_raw} ;;
    value_format_name: decimal_0
    label: "ComptoProblemFocusedExams Num"
  }

  measure: total_comptoproblemfocusedexams_den {
    description: "Original name: [ComptoProblemFocusedExams_Den]"
    type: sum
    sql: ${comptoproblemfocusedexams_den_raw} ;;
    value_format_name: decimal_0
    label: "ComptoProblemFocusedExams Den"
  }

  measure: total_apptlength_adult {
    description: "Original name: [ApptLength_Adult]"
    type: sum
    sql: ${apptlength_adult_raw} ;;
    value_format_name: decimal_0
    label: "ApptLength Adult"
  }

  measure: total_totalinefficienthourspcandnp {
    description: "Original name: [TotalInefficientHoursPCandNP]"
    type: sum
    sql: ${totalinefficienthourspcandnp_raw} ;;
    value_format_name: decimal_0
    label: "TotalInefficientHoursPCandNP"
  }

  measure: total_totalschedulehourspcandnp {
    description: "Original name: [TotalScheduleHoursPCandNP]"
    type: sum
    sql: ${totalschedulehourspcandnp_raw} ;;
    value_format_name: decimal_0
    label: "TotalScheduleHoursPCandNP"
  }

  measure: total_gaphourspcandnp {
    description: "Original name: [GapHoursPCandNP]"
    type: sum
    sql: ${gaphourspcandnp_raw} ;;
    value_format_name: decimal_0
    label: "GapHoursPCandNP"
  }

  measure: total_extendednpappthourspcandnp {
    description: "Original name: [ExtendedNPApptHoursPCandNP]"
    type: sum
    sql: ${extendednpappthourspcandnp_raw} ;;
    value_format_name: decimal_0
    label: "ExtendedNPApptHoursPCandNP"
  }

  measure: total_nonnphourspcandnp {
    description: "Original name: [NonNPHoursPCandNP]"
    type: sum
    sql: ${nonnphourspcandnp_raw} ;;
    value_format_name: decimal_0
    label: "NonNPHoursPCandNP"
  }

  measure: total_avaliablehourspcandnp {
    description: "Original name: [AvaliableHoursPCandNP]"
    type: sum
    sql: ${avaliablehourspcandnp_raw} ;;
    value_format_name: decimal_0
    label: "AvaliableHoursPCandNP"
  }

  measure: total_appointedhourspcandnp {
    description: "Original name: [AppointedHoursPCandNP]"
    type: sum
    sql: ${appointedhourspcandnp_raw} ;;
    value_format_name: decimal_0
    label: "AppointedHoursPCandNP"
  }

  measure: total_remaininghourspcandnp {
    description: "Original name: [RemainingHoursPCandNP]"
    type: sum
    sql: ${remaininghourspcandnp_raw} ;;
    value_format_name: decimal_0
    label: "RemainingHoursPCandNP"
  }

  measure: total_remainingslotspcandnp {
    description: "Original name: [RemainingSlotsPCandNP]"
    type: sum
    sql: ${remainingslotspcandnp_raw} ;;
    value_format_name: decimal_0
    label: "RemainingSlotsPCandNP"
  }

  measure: total_pcschedulehours {
    description: "Original name: [PCScheduleHours]"
    type: sum
    sql: ${pcschedulehours_raw} ;;
    value_format_name: decimal_0
    label: "PCScheduleHours"
  }

  measure: total_pcblockhours {
    description: "Original name: [PCBlockHours]"
    type: sum
    sql: ${pcblockhours_raw} ;;
    value_format_name: decimal_0
    label: "PCBlockHours"
  }

  measure: total_npschedulehours {
    description: "Original name: [NPScheduleHours]"
    type: sum
    sql: ${npschedulehours_raw} ;;
    value_format_name: decimal_0
    label: "NPScheduleHours"
  }

  measure: total_npblockhours {
    description: "Original name: [NPBlockHours]"
    type: sum
    sql: ${npblockhours_raw} ;;
    value_format_name: decimal_0
    label: "NPBlockHours"
  }

  measure: total_npapptperday_num {
    description: "Original name: [NPApptPerDay_Num]"
    type: sum
    sql: ${npapptperday_num_raw} ;;
    value_format_name: decimal_0
    label: "NPApptPerDay Num"
  }

  measure: total_npapptperday_den {
    description: "Original name: [NPApptPerDay_Den]"
    type: sum
    sql: ${npapptperday_den_raw} ;;
    value_format_name: decimal_0
    label: "NPApptPerDay Den"
  }

  measure: total_daystoinsert_den {
    description: "Original name: [Daystoinsert_Den]"
    type: sum
    sql: ${daystoinsert_den_raw} ;;
    value_format_name: decimal_0
    label: "Daystoinsert Den"
  }

  measure: total_daystoinsert_num {
    description: "Original name: [Daystoinsert_Num]"
    type: sum
    sql: ${daystoinsert_num_raw} ;;
    value_format_name: decimal_0
    label: "Daystoinsert Num"
  }

  measure: total_daystoimpression_den {
    description: "Original name: [DaysToImpression_Den]"
    type: sum
    sql: ${daystoimpression_den_raw} ;;
    value_format_name: decimal_0
    label: "DaysToImpression Den"
  }

  measure: total_daystoimpression_num {
    description: "Original name: [DaysToImpression_Num]"
    type: sum
    sql: ${daystoimpression_num_raw} ;;
    value_format_name: decimal_0
    label: "DaysToImpression Num"
  }

  measure: total_denturesameday_num {
    description: "Original name: [DentureSameDay_Num]"
    type: sum
    sql: ${denturesameday_num_raw} ;;
    value_format_name: decimal_0
    label: "DentureSameDay Num"
  }

  measure: total_denturesameday_den {
    description: "Original name: [DentureSameDay_Den]"
    type: sum
    sql: ${denturesameday_den_raw} ;;
    value_format_name: decimal_0
    label: "DentureSameDay Den"
  }

  measure: total_denturerefund_num {
    description: "Original name: [DentureRefund_Num]"
    type: sum
    sql: ${denturerefund_num_raw} ;;
    value_format_name: decimal_0
    label: "DentureRefund Num"
  }

  measure: total_denturerefund_den {
    description: "Original name: [DentureRefund_Den]"
    type: sum
    sql: ${denturerefund_den_raw} ;;
    value_format_name: decimal_0
    label: "DentureRefund Den"
  }

  measure: total_fulldenture_num {
    description: "Original name: [FullDenture_Num]"
    type: sum
    sql: ${fulldenture_num_raw} ;;
    value_format_name: decimal_0
    label: "FullDenture Num"
  }

  measure: total_partialdenture_num {
    description: "Original name: [PartialDenture_Num]"
    type: sum
    sql: ${partialdenture_num_raw} ;;
    value_format_name: decimal_0
    label: "PartialDenture Num"
  }

  measure: total_alldenture_den {
    description: "Original name: [AllDenture_Den]"
    type: sum
    sql: ${alldenture_den_raw} ;;
    value_format_name: decimal_0
    label: "AllDenture Den"
  }

  measure: total_denturecompletion_num {
    description: "Original name: [DentureCompletion_Num]"
    type: sum
    sql: ${denturecompletion_num_raw} ;;
    value_format_name: decimal_0
    label: "DentureCompletion Num"
  }

  measure: total_denturecompletion_den {
    description: "Original name: [DentureCompletion_Den]"
    type: sum
    sql: ${denturecompletion_den_raw} ;;
    value_format_name: decimal_0
    label: "DentureCompletion Den"
  }

  measure: total_cbunits_num {
    description: "Original name: [CBUnits_Num]"
    type: sum
    sql: ${cbunits_num_raw} ;;
    value_format_name: decimal_0
    label: "CBUnits Num"
  }

  measure: total_cbunits_den {
    description: "Original name: [CBUnits_Den]"
    type: sum
    sql: ${cbunits_den_raw} ;;
    value_format_name: decimal_0
    label: "CBUnits Den"
  }

  measure: total_crowntomulti_num {
    description: "Original name: [CrownToMulti_Num]"
    type: sum
    sql: ${crowntomulti_num_raw} ;;
    value_format_name: decimal_0
    label: "CrownToMulti Num"
  }

  measure: total_crowntomulti_denom {
    description: "Original name: [CrownToMulti_Denom]"
    type: sum
    sql: ${crowntomulti_denom_raw} ;;
    value_format_name: decimal_0
    label: "CrownToMulti Denom"
  }

  measure: total_hygieneshows {
    description: "Original name: [HygieneShows]"
    type: sum
    sql: ${hygieneshows_raw} ;;
    value_format_name: decimal_0
    label: "HygieneShows"
  }

  measure: total_hygieneappts_showrate {
    description: "Original name: [HygieneAppts_ShowRate]"
    type: sum
    sql: ${hygieneappts_showrate_raw} ;;
    value_format_name: decimal_0
    label: "HygieneAppts ShowRate"
  }

  measure: total_daystosrp_days {
    description: "Original name: [DaysToSRP_Days]"
    type: sum
    sql: ${daystosrp_days_raw} ;;
    value_format_name: decimal_0
    label: "DaysToSRP Days"
  }

  measure: total_daystosrp_patients {
    description: "Original name: [DaysToSRP_Patients]"
    type: sum
    sql: ${daystosrp_patients_raw} ;;
    value_format_name: decimal_0
    label: "DaysToSRP Patients"
  }

  measure: total_periotoprophy_num {
    description: "Original name: [PerioToProphy_Num]"
    type: sum
    sql: ${periotoprophy_num_raw} ;;
    value_format_name: decimal_0
    label: "PerioToProphy Num"
  }

  measure: total_periotoprophy_denom {
    description: "Original name: [PerioToProphy_Denom]"
    type: sum
    sql: ${periotoprophy_denom_raw} ;;
    value_format_name: decimal_0
    label: "PerioToProphy Denom"
  }

  measure: total_perioacceptedrate_num {
    description: "Original name: [PerioAcceptedRate_Num]"
    type: sum
    sql: ${perioacceptedrate_num_raw} ;;
    value_format_name: decimal_0
    label: "PerioAcceptedRate Num"
  }

  measure: total_perioacceptedrate_denom {
    description: "Original name: [PerioAcceptedRate_Denom]"
    type: sum
    sql: ${perioacceptedrate_denom_raw} ;;
    value_format_name: decimal_0
    label: "PerioAcceptedRate Denom"
  }

  measure: total_laatoperiopatientsratio_num {
    description: "Original name: [LAAtoPerioPatientsRatio_Num]"
    type: sum
    sql: ${laatoperiopatientsratio_num_raw} ;;
    value_format_name: decimal_0
    label: "LAAtoPerioPatientsRatio Num"
  }

  measure: total_laatoperiopatientsratio_den {
    description: "Original name: [LAAtoPerioPatientsRatio_den]"
    type: sum
    sql: ${laatoperiopatientsratio_den_raw} ;;
    value_format_name: decimal_0
    label: "LAAtoPerioPatientsRatio den"
  }

  measure: total_implantsopp_num {
    description: "Original name: [ImplantsOpp_Num]"
    type: sum
    sql: ${implantsopp_num_raw} ;;
    value_format_name: decimal_0
    label: "ImplantsOpp Num"
  }

  measure: total_implantsopp_den {
    description: "Original name: [ImplantsOpp_Den]"
    type: sum
    sql: ${implantsopp_den_raw} ;;
    value_format_name: decimal_0
    label: "ImplantsOpp Den"
  }

  measure: total_implantsplaced_num {
    description: "Original name: [ImplantsPlaced_Num]"
    type: sum
    sql: ${implantsplaced_num_raw} ;;
    value_format_name: decimal_0
    label: "ImplantsPlaced Num"
  }

  measure: total_implantsplaced_den {
    description: "Original name: [ImplantsPlaced_Den]"
    type: sum
    sql: ${implantsplaced_den_raw} ;;
    value_format_name: decimal_0
    label: "ImplantsPlaced Den"
  }

  measure: total_orthopresentationrate_num {
    description: "Original name: [OrthoPresentationRate_Num]"
    type: sum
    sql: ${orthopresentationrate_num_raw} ;;
    value_format_name: decimal_0
    label: "OrthoPresentationRate Num"
  }

  measure: total_orthopresentationrate_den {
    description: "Original name: [OrthoPresentationRate_Den]"
    type: sum
    sql: ${orthopresentationrate_den_raw} ;;
    value_format_name: decimal_0
    label: "OrthoPresentationRate Den"
  }

  measure: total_orthotxpresented {
    description: "Original name: [OrthoTxPresented]"
    type: sum
    sql: ${orthotxpresented_raw} ;;
    value_format_name: decimal_0
    label: "OrthoTxPresented"
  }

  measure: total_orthotxaccepted {
    description: "Original name: [OrthoTxAccepted]"
    type: sum
    sql: ${orthotxaccepted_raw} ;;
    value_format_name: decimal_0
    label: "OrthoTxAccepted"
  }

  measure: total_orthotxpresented_patientcount {
    description: "Original name: [OrthoTxPresented_PatientCount]"
    type: sum
    sql: ${orthotxpresented_patientcount_raw} ;;
    value_format_name: decimal_0
    label: "OrthoTxPresented PatientCount"
  }

  measure: total_endoprodperday_num {
    description: "Original name: [EndoProdPerDay_Num]"
    type: sum
    sql: ${endoprodperday_num_raw} ;;
    value_format_name: decimal_0
    label: "EndoProdPerDay Num"
  }

  measure: total_endoprodperday_denom {
    description: "Original name: [EndoProdPerDay_Denom]"
    type: sum
    sql: ${endoprodperday_denom_raw} ;;
    value_format_name: decimal_0
    label: "EndoProdPerDay Denom"
  }

  measure: total_osprodperday_num {
    description: "Original name: [OSProdPerDay_Num]"
    type: sum
    sql: ${osprodperday_num_raw} ;;
    value_format_name: decimal_0
    label: "OSProdPerDay Num"
  }

  measure: total_osprodperday_denom {
    description: "Original name: [OSProdPerDay_Denom]"
    type: sum
    sql: ${osprodperday_denom_raw} ;;
    value_format_name: decimal_0
    label: "OSProdPerDay Denom"
  }

  measure: total_dentureopp_num {
    description: "Original name: [DentureOpp_Num]"
    type: sum
    sql: ${dentureopp_num_raw} ;;
    value_format_name: decimal_0
    label: "DentureOpp Num"
  }

  measure: total_dentureopp_denom {
    description: "Original name: [DentureOpp_Denom]"
    type: sum
    sql: ${dentureopp_denom_raw} ;;
    value_format_name: decimal_0
    label: "DentureOpp Denom"
  }

  measure: total_waxtryin {
    description: "Original name: [WaxTryIn]"
    type: sum
    sql: ${waxtryin_raw} ;;
    value_format_name: decimal_0
    label: "WaxTryIn"
  }

  measure: total_denturesteppatients {
    description: "Original name: [DentureStepPatients]"
    type: sum
    sql: ${denturesteppatients_raw} ;;
    value_format_name: decimal_0
    label: "DentureStepPatients"
  }

  measure: total_denturesold_num {
    description: "Original name: [DentureSold_Num]"
    type: sum
    sql: ${denturesold_num_raw} ;;
    value_format_name: decimal_0
    label: "DentureSold Num"
  }

  measure: total_denturesold_den {
    description: "Original name: [DentureSold_Den]"
    type: sum
    sql: ${denturesold_den_raw} ;;
    value_format_name: decimal_0
    label: "DentureSold Den"
  }

  measure: total_cbucfpercent_den {
    description: "Original name: [CBUCFPercent_Den]"
    type: sum
    sql: ${cbucfpercent_den_raw} ;;
    value_format_name: decimal_0
    label: "CBUCFPercent Den"
  }

  measure: total_cbucfpercent_num {
    description: "Original name: [CBUCFPercent_Num]"
    type: sum
    sql: ${cbucfpercent_num_raw} ;;
    value_format_name: decimal_0
    label: "CBUCFPercent Num"
  }

  measure: total_cblabpercent_den {
    description: "Original name: [CBLabPercent_Den]"
    type: sum
    sql: ${cblabpercent_den_raw} ;;
    value_format_name: decimal_0
    label: "CBLabPercent Den"
  }

  measure: total_cblabpercent_num {
    description: "Original name: [CBLABPercent_Num]"
    type: sum
    sql: ${cblabpercent_num_raw} ;;
    value_format_name: decimal_0
    label: "CBLABPercent Num"
  }

  measure: total_cbrevperunit_den {
    description: "Original name: [CBRevPerUnit_Den]"
    type: sum
    sql: ${cbrevperunit_den_raw} ;;
    value_format_name: decimal_0
    label: "CBRevPerUnit Den"
  }

  measure: total_cbrevperunit_num {
    description: "Original name: [CBRevPerUnit_Num]"
    type: sum
    sql: ${cbrevperunit_num_raw} ;;
    value_format_name: decimal_0
    label: "CBRevPerUnit Num"
  }

  measure: total_npperdaytop20 {
    description: "Original name: [NPPerDayTop20]"
    type: sum
    sql: ${npperdaytop20_raw} ;;
    value_format_name: decimal_0
    label: "NPPerDayTop20"
  }

  measure: total_epperdaytop20 {
    description: "Original name: [EPPerDayTop20]"
    type: sum
    sql: ${epperdaytop20_raw} ;;
    value_format_name: decimal_0
    label: "EPPerDayTop20"
  }

  measure: total_avgdaysuntilfirstvisitpercenttop20 {
    description: "Original name: [AvgDaysUntilFirstVisitPercentTop20]"
    type: sum
    sql: ${avgdaysuntilfirstvisitpercenttop20_raw} ;;
    value_format_name: decimal_0
    label: "AvgDaysUntilFirstVisitPercentTop20"
  }

  measure: total_npshowratetop20 {
    description: "Original name: [NPShowRateTop20]"
    type: sum
    sql: ${npshowratetop20_raw} ;;
    value_format_name: decimal_0
    label: "NPShowRateTop20"
  }

  measure: total_epshowratetop20 {
    description: "Original name: [EPShowRateTop20]"
    type: sum
    sql: ${epshowratetop20_raw} ;;
    value_format_name: decimal_0
    label: "EPShowRateTop20"
  }

  measure: total_npyestodaytop20 {
    description: "Original name: [NPYesTodayTop20]"
    type: sum
    sql: ${npyestodaytop20_raw} ;;
    value_format_name: decimal_0
    label: "NPYesTodayTop20"
  }

  measure: total_epyestodaytop20 {
    description: "Original name: [EPYesTodayTop20]"
    type: sum
    sql: ${epyestodaytop20_raw} ;;
    value_format_name: decimal_0
    label: "EPYesTodayTop20"
  }

  measure: total_creditapplicationstop20 {
    description: "Original name: [CreditApplicationsTop20]"
    type: sum
    sql: ${creditapplicationstop20_raw} ;;
    value_format_name: decimal_0
    label: "CreditApplicationsTop20"
  }

  measure: total_newpatientotctop20 {
    description: "Original name: [NewPatientOtcTop20]"
    type: sum
    sql: ${newpatientotctop20_raw} ;;
    value_format_name: decimal_0
    label: "NewPatientOtcTop20"
  }

  measure: total_nptxpresentedpernptop20 {
    description: "Original name: [NPTxPresentedPerNPTop20]"
    type: sum
    sql: ${nptxpresentedpernptop20_raw} ;;
    value_format_name: decimal_0
    label: "NPTxPresentedPerNPTop20"
  }

  measure: total_nptxacceptedpernptop20 {
    description: "Original name: [NPTxAcceptedPerNPTop20]"
    type: sum
    sql: ${nptxacceptedpernptop20_raw} ;;
    value_format_name: decimal_0
    label: "NPTxAcceptedPerNPTop20"
  }

  measure: total_eptxpresentedpereptop20 {
    description: "Original name: [EPTxPresentedPerEPTop20]"
    type: sum
    sql: ${eptxpresentedpereptop20_raw} ;;
    value_format_name: decimal_0
    label: "EPTxPresentedPerEPTop20"
  }

  measure: total_eptxacceptedpereptop20 {
    description: "Original name: [EPTxAcceptedPerEPTop20]"
    type: sum
    sql: ${eptxacceptedpereptop20_raw} ;;
    value_format_name: decimal_0
    label: "EPTxAcceptedPerEPTop20"
  }

  measure: total_oralhealthscanpercenttop20 {
    description: "Original name: [OralHealthScanPercentTop20]"
    type: sum
    sql: ${oralhealthscanpercenttop20_raw} ;;
    value_format_name: decimal_0
    label: "OralHealthScanPercentTop20"
  }

  measure: total_tapasalestop20 {
    description: "Original name: [TAPASalesTop20]"
    type: sum
    sql: ${tapasalestop20_raw} ;;
    value_format_name: decimal_0
    label: "TAPASalesTop20"
  }

  measure: total_doctorftetop20 {
    description: "Original name: [DoctorFTETop20]"
    type: sum
    sql: ${doctorftetop20_raw} ;;
    value_format_name: decimal_0
    label: "DoctorFTETop20"
  }

  measure: total_mcdproductiontop20 {
    description: "Original name: [MCDProductionTop20]"
    type: sum
    sql: ${mcdproductiontop20_raw} ;;
    value_format_name: decimal_0
    label: "MCDProductionTop20"
  }

  measure: total_associateproductiontop20 {
    description: "Original name: [AssociateProductionTop20]"
    type: sum
    sql: ${associateproductiontop20_raw} ;;
    value_format_name: decimal_0
    label: "AssociateProductionTop20"
  }

  measure: total_hygienistdailyproductiontop20 {
    description: "Original name: [HygienistDailyProductionTop20]"
    type: sum
    sql: ${hygienistdailyproductiontop20_raw} ;;
    value_format_name: decimal_0
    label: "HygienistDailyProductionTop20"
  }

  measure: total_orthostartstop20 {
    description: "Original name: [OrthoStartsTop20]"
    type: sum
    sql: ${orthostartstop20_raw} ;;
    value_format_name: decimal_0
    label: "OrthoStartsTop20"
  }

  measure: total_percentofscheduletop20 {
    description: "Original name: [PercentOfScheduleTop20]"
    type: sum
    sql: ${percentofscheduletop20_raw} ;;
    value_format_name: decimal_0
    label: "PercentOfScheduleTop20"
  }

  measure: total_npsamedaystartstop20 {
    description: "Original name: [NPSameDayStartsTop20]"
    type: sum
    sql: ${npsamedaystartstop20_raw} ;;
    value_format_name: decimal_0
    label: "NPSameDayStartsTop20"
  }

  measure: total_newpatienttxplancompletionratetop20 {
    description: "Original name: [NewPatientTxPlanCompletionRateTop20]"
    type: sum
    sql: ${newpatienttxplancompletionratetop20_raw} ;;
    value_format_name: decimal_0
    label: "NewPatientTxPlanCompletionRateTop20"
  }

  measure: total_denturestop20 {
    description: "Original name: [DenturesTop20]"
    type: sum
    sql: ${denturestop20_raw} ;;
    value_format_name: decimal_0
    label: "DenturesTop20"
  }

  measure: total_dentistrytop20 {
    description: "Original name: [DentistryTop20]"
    type: sum
    sql: ${dentistrytop20_raw} ;;
    value_format_name: decimal_0
    label: "DentistryTop20"
  }

  measure: total_hygienetop20 {
    description: "Original name: [HygieneTop20]"
    type: sum
    sql: ${hygienetop20_raw} ;;
    value_format_name: decimal_0
    label: "HygieneTop20"
  }

  measure: total_specialtytop20 {
    description: "Original name: [SpecialtyTop20]"
    type: sum
    sql: ${specialtytop20_raw} ;;
    value_format_name: decimal_0
    label: "SpecialtyTop20"
  }

  measure: total_orthodonticstop20 {
    description: "Original name: [OrthodonticsTop20]"
    type: sum
    sql: ${orthodonticstop20_raw} ;;
    value_format_name: decimal_0
    label: "OrthodonticsTop20"
  }

  measure: total_crownbridgetop20 {
    description: "Original name: [CrownBridgeTop20]"
    type: sum
    sql: ${crownbridgetop20_raw} ;;
    value_format_name: decimal_0
    label: "CrownBridgeTop20"
  }

  measure: total_implantstop20 {
    description: "Original name: [ImplantsTop20]"
    type: sum
    sql: ${implantstop20_raw} ;;
    value_format_name: decimal_0
    label: "ImplantsTop20"
  }

  measure: total_productiontop20 {
    description: "Original name: [ProductionTop20]"
    type: sum
    sql: ${productiontop20_raw} ;;
    value_format_name: decimal_0
    label: "ProductionTop20"
  }

  measure: total_patientsatisfactiontop20 {
    description: "Original name: [PatientSatisfactionTop20]"
    type: sum
    sql: ${patientsatisfactiontop20_raw} ;;
    value_format_name: decimal_0
    label: "PatientSatisfactionTop20"
  }

  measure: total_onlinereviewratingstop20 {
    description: "Original name: [OnlineReviewRatingsTop20]"
    type: sum
    sql: ${onlinereviewratingstop20_raw} ;;
    value_format_name: decimal_0
    label: "OnlineReviewRatingsTop20"
  }

  measure: total_addedtoscheduletop20 {
    description: "Original name: [AddedtoScheduleTop20]"
    type: sum
    sql: ${addedtoscheduletop20_raw} ;;
    value_format_name: decimal_0
    label: "AddedtoScheduleTop20"
  }

  measure: total_estimatedproductioncurrentmonthtop20 {
    description: "Original name: [EstimatedProductionCurrentMonthTop20]"
    type: sum
    sql: ${estimatedproductioncurrentmonthtop20_raw} ;;
    value_format_name: decimal_0
    label: "EstimatedProductionCurrentMonthTop20"
  }

  measure: total_estimatedproductionbudgetvariancecurrentmonthtop20 {
    description: "Original name: [EstimatedProductionBudgetVarianceCurrentMonthTop20]"
    type: sum
    sql: ${estimatedproductionbudgetvariancecurrentmonthtop20_raw} ;;
    value_format_name: decimal_0
    label: "EstimatedProductionBudgetVarianceCurrentMonthTop20"
  }

  measure: total_totaldeposittop20 {
    description: "Original name: [TotalDepositTop20]"
    type: sum
    sql: ${totaldeposittop20_raw} ;;
    value_format_name: decimal_0
    label: "TotalDepositTop20"
  }

  measure: total_percentofbalancecollectedtop20 {
    description: "Original name: [PercentofBalanceCollectedTop20]"
    type: sum
    sql: ${percentofbalancecollectedtop20_raw} ;;
    value_format_name: decimal_0
    label: "PercentofBalanceCollectedTop20"
  }

  measure: total_netpromotersconumberltop20 {
    description: "Original name: [NetPromoterSconumberLTop20]"
    type: sum
    sql: ${netpromotersconumberltop20_raw} ;;
    value_format_name: decimal_0
    label: "NetPromoterSconumberLTop20"
  }

  measure: total_netpromoterscoretop20 {
    description: "Original name: [NetPromoterScoreTop20]"
    type: sum
    sql: ${netpromoterscoretop20_raw} ;;
    value_format_name: decimal_0
    label: "NetPromoterScoreTop20"
  }

  measure: total_percentofpatientleavingwithappttop20 {
    description: "Original name: [PercentofPatientLeavingwithApptTop20]"
    type: sum
    sql: ${percentofpatientleavingwithappttop20_raw} ;;
    value_format_name: decimal_0
    label: "PercentofPatientLeavingwithApptTop20"
  }

  measure: total_comptoproblemfocusedexamsttop20 {
    description: "Original name: [ComptoProblemFocusedExamstTop20]"
    type: sum
    sql: ${comptoproblemfocusedexamsttop20_raw} ;;
    value_format_name: decimal_0
    label: "ComptoProblemFocusedExamstTop20"
  }

  measure: total_npapptsperdaypercenttop20 {
    description: "Original name: [NPApptsPerDayPercentTop20]"
    type: sum
    sql: ${npapptsperdaypercenttop20_raw} ;;
    value_format_name: decimal_0
    label: "NPApptsPerDayPercentTop20"
  }

  measure: total_inefficienttop20 {
    description: "Original name: [InefficientTop20]"
    type: sum
    sql: ${inefficienttop20_raw} ;;
    value_format_name: decimal_0
    label: "InefficientTop20"
  }

  measure: total_npblocktop20 {
    description: "Original name: [NPBlockTop20]"
    type: sum
    sql: ${npblocktop20_raw} ;;
    value_format_name: decimal_0
    label: "NPBlockTop20"
  }

  measure: total_pcblocktop20 {
    description: "Original name: [PCBlockTop20]"
    type: sum
    sql: ${pcblocktop20_raw} ;;
    value_format_name: decimal_0
    label: "PCBlockTop20"
  }

  measure: total_apptlength_adulttop20 {
    description: "Original name: [ApptLength_AdultTop20]"
    type: sum
    sql: ${apptlength_adulttop20_raw} ;;
    value_format_name: decimal_0
    label: "ApptLength AdultTop20"
  }

  measure: total_daystoinserttop20 {
    description: "Original name: [DaystoinsertTop20]"
    type: sum
    sql: ${daystoinserttop20_raw} ;;
    value_format_name: decimal_0
    label: "DaystoinsertTop20"
  }

  measure: total_daystoimpressiontop20 {
    description: "Original name: [DaysToImpressionTop20]"
    type: sum
    sql: ${daystoimpressiontop20_raw} ;;
    value_format_name: decimal_0
    label: "DaysToImpressionTop20"
  }

  measure: total_denturesamedaytop20 {
    description: "Original name: [DentureSameDayTop20]"
    type: sum
    sql: ${denturesamedaytop20_raw} ;;
    value_format_name: decimal_0
    label: "DentureSameDayTop20"
  }

  measure: total_denturerefundtop20 {
    description: "Original name: [DentureRefundTop20]"
    type: sum
    sql: ${denturerefundtop20_raw} ;;
    value_format_name: decimal_0
    label: "DentureRefundTop20"
  }

  measure: total_fulldenturetop20 {
    description: "Original name: [FullDentureTop20]"
    type: sum
    sql: ${fulldenturetop20_raw} ;;
    value_format_name: decimal_0
    label: "FullDentureTop20"
  }

  measure: total_partialdenturetop20 {
    description: "Original name: [PartialDentureTop20]"
    type: sum
    sql: ${partialdenturetop20_raw} ;;
    value_format_name: decimal_0
    label: "PartialDentureTop20"
  }

  measure: total_denturecompletiontop20 {
    description: "Original name: [DentureCompletionTop20]"
    type: sum
    sql: ${denturecompletiontop20_raw} ;;
    value_format_name: decimal_0
    label: "DentureCompletionTop20"
  }

  measure: total_cbunitstop20 {
    description: "Original name: [CBUnitsTop20]"
    type: sum
    sql: ${cbunitstop20_raw} ;;
    value_format_name: decimal_0
    label: "CBUnitsTop20"
  }

  measure: total_crowntomultitop20 {
    description: "Original name: [CrownToMultiTop20]"
    type: sum
    sql: ${crowntomultitop20_raw} ;;
    value_format_name: decimal_0
    label: "CrownToMultiTop20"
  }

  measure: total_daystosrp_daystop20 {
    description: "Original name: [DaysToSRP_DaysTop20]"
    type: sum
    sql: ${daystosrp_daystop20_raw} ;;
    value_format_name: decimal_0
    label: "DaysToSRP DaysTop20"
  }

  measure: total_periotoprophytop20 {
    description: "Original name: [PerioToProphyTop20]"
    type: sum
    sql: ${periotoprophytop20_raw} ;;
    value_format_name: decimal_0
    label: "PerioToProphyTop20"
  }

  measure: total_perioacceptedratetop20 {
    description: "Original name: [PerioAcceptedRateTop20]"
    type: sum
    sql: ${perioacceptedratetop20_raw} ;;
    value_format_name: decimal_0
    label: "PerioAcceptedRateTop20"
  }

  measure: total_laatoperiopatientsratiotop20 {
    description: "Original name: [LAAtoPerioPatientsRatioTop20]"
    type: sum
    sql: ${laatoperiopatientsratiotop20_raw} ;;
    value_format_name: decimal_0
    label: "LAAtoPerioPatientsRatioTop20"
  }

  measure: total_implantsopptop20 {
    description: "Original name: [ImplantsOppTop20]"
    type: sum
    sql: ${implantsopptop20_raw} ;;
    value_format_name: decimal_0
    label: "ImplantsOppTop20"
  }

  measure: total_implantsplacedtop20 {
    description: "Original name: [ImplantsPlacedTop20]"
    type: sum
    sql: ${implantsplacedtop20_raw} ;;
    value_format_name: decimal_0
    label: "ImplantsPlacedTop20"
  }

  measure: total_hygieneshowstop20 {
    description: "Original name: [HygieneShowsTop20]"
    type: sum
    sql: ${hygieneshowstop20_raw} ;;
    value_format_name: decimal_0
    label: "HygieneShowsTop20"
  }

  measure: total_orthopresentationratetop20 {
    description: "Original name: [OrthoPresentationRatetop20]"
    type: sum
    sql: ${orthopresentationratetop20_raw} ;;
    value_format_name: decimal_0
    label: "OrthoPresentationRatetop20"
  }

  measure: total_orthoacceptanceratetop20 {
    description: "Original name: [OrthoAcceptanceRatetop20]"
    type: sum
    sql: ${orthoacceptanceratetop20_raw} ;;
    value_format_name: decimal_0
    label: "OrthoAcceptanceRatetop20"
  }

  measure: total_endoprodperdaytop20 {
    description: "Original name: [EndoProdPerDaytop20]"
    type: sum
    sql: ${endoprodperdaytop20_raw} ;;
    value_format_name: decimal_0
    label: "EndoProdPerDaytop20"
  }

  measure: total_osprodperdaytop20 {
    description: "Original name: [OSProdPerDaytop20]"
    type: sum
    sql: ${osprodperdaytop20_raw} ;;
    value_format_name: decimal_0
    label: "OSProdPerDaytop20"
  }

  measure: total_dentureopptop20 {
    description: "Original name: [DentureOpptop20]"
    type: sum
    sql: ${dentureopptop20_raw} ;;
    value_format_name: decimal_0
    label: "DentureOpptop20"
  }

  measure: total_waxtryperpatienttop20 {
    description: "Original name: [WaxTryperPatienttop20]"
    type: sum
    sql: ${waxtryperpatienttop20_raw} ;;
    value_format_name: decimal_0
    label: "WaxTryperPatienttop20"
  }

  measure: total_denturesoldtop20 {
    description: "Original name: [DentureSoldtop20]"
    type: sum
    sql: ${denturesoldtop20_raw} ;;
    value_format_name: decimal_0
    label: "DentureSoldtop20"
  }

  measure: total_cbucfpercenttop20 {
    description: "Original name: [CBUCFPercenttop20]"
    type: sum
    sql: ${cbucfpercenttop20_raw} ;;
    value_format_name: decimal_0
    label: "CBUCFPercenttop20"
  }

  measure: total_cbrevperunittop20 {
    description: "Original name: [CBRevPerUnittop20]"
    type: sum
    sql: ${cbrevperunittop20_raw} ;;
    value_format_name: decimal_0
    label: "CBRevPerUnittop20"
  }

  measure: total_cblabpercentpercenttop20 {
    description: "Original name: [CBLabPercentPercenttop20]"
    type: sum
    sql: ${cblabpercentpercenttop20_raw} ;;
    value_format_name: decimal_0
    label: "CBLabPercentPercenttop20"
  }

  measure: total_npperdaybottom20 {
    description: "Original name: [NPPerDayBottom20]"
    type: sum
    sql: ${npperdaybottom20_raw} ;;
    value_format_name: decimal_0
    label: "NPPerDayBottom20"
  }

  measure: total_epperdaybottom20 {
    description: "Original name: [EPPerDayBottom20]"
    type: sum
    sql: ${epperdaybottom20_raw} ;;
    value_format_name: decimal_0
    label: "EPPerDayBottom20"
  }

  measure: total_avgdaysuntilfirstvisitpercentbottom20 {
    description: "Original name: [AvgDaysUntilFirstVisitPercentBottom20]"
    type: sum
    sql: ${avgdaysuntilfirstvisitpercentbottom20_raw} ;;
    value_format_name: decimal_0
    label: "AvgDaysUntilFirstVisitPercentBottom20"
  }

  measure: total_npshowratebottom20 {
    description: "Original name: [NPShowRateBottom20]"
    type: sum
    sql: ${npshowratebottom20_raw} ;;
    value_format_name: decimal_0
    label: "NPShowRateBottom20"
  }

  measure: total_epshowratebottom20 {
    description: "Original name: [EPShowRateBottom20]"
    type: sum
    sql: ${epshowratebottom20_raw} ;;
    value_format_name: decimal_0
    label: "EPShowRateBottom20"
  }

  measure: total_npyestodaybottom20 {
    description: "Original name: [NPYesTodayBottom20]"
    type: sum
    sql: ${npyestodaybottom20_raw} ;;
    value_format_name: decimal_0
    label: "NPYesTodayBottom20"
  }

  measure: total_epyestodaybottom20 {
    description: "Original name: [EPYesTodayBottom20]"
    type: sum
    sql: ${epyestodaybottom20_raw} ;;
    value_format_name: decimal_0
    label: "EPYesTodayBottom20"
  }

  measure: total_creditapplicationsbottom20 {
    description: "Original name: [CreditApplicationsBottom20]"
    type: sum
    sql: ${creditapplicationsbottom20_raw} ;;
    value_format_name: decimal_0
    label: "CreditApplicationsBottom20"
  }

  measure: total_newpatientotcbottom20 {
    description: "Original name: [NewPatientOtcBottom20]"
    type: sum
    sql: ${newpatientotcbottom20_raw} ;;
    value_format_name: decimal_0
    label: "NewPatientOtcBottom20"
  }

  measure: total_nptxpresentedpernpbottom20 {
    description: "Original name: [NPTxPresentedPerNPBottom20]"
    type: sum
    sql: ${nptxpresentedpernpbottom20_raw} ;;
    value_format_name: decimal_0
    label: "NPTxPresentedPerNPBottom20"
  }

  measure: total_nptxacceptedpernpbottom20 {
    description: "Original name: [NPTxAcceptedPerNPBottom20]"
    type: sum
    sql: ${nptxacceptedpernpbottom20_raw} ;;
    value_format_name: decimal_0
    label: "NPTxAcceptedPerNPBottom20"
  }

  measure: total_eptxpresentedperepbottom20 {
    description: "Original name: [EPTxPresentedPerEPBottom20]"
    type: sum
    sql: ${eptxpresentedperepbottom20_raw} ;;
    value_format_name: decimal_0
    label: "EPTxPresentedPerEPBottom20"
  }

  measure: total_eptxacceptedperepbottom20 {
    description: "Original name: [EPTxAcceptedPerEPBottom20]"
    type: sum
    sql: ${eptxacceptedperepbottom20_raw} ;;
    value_format_name: decimal_0
    label: "EPTxAcceptedPerEPBottom20"
  }

  measure: total_oralhealthscanpercentbottom20 {
    description: "Original name: [OralHealthScanPercentBottom20]"
    type: sum
    sql: ${oralhealthscanpercentbottom20_raw} ;;
    value_format_name: decimal_0
    label: "OralHealthScanPercentBottom20"
  }

  measure: total_tapasalesbottom20 {
    description: "Original name: [TAPASalesBottom20]"
    type: sum
    sql: ${tapasalesbottom20_raw} ;;
    value_format_name: decimal_0
    label: "TAPASalesBottom20"
  }

  measure: total_doctorftebottom20 {
    description: "Original name: [DoctorFTEBottom20]"
    type: sum
    sql: ${doctorftebottom20_raw} ;;
    value_format_name: decimal_0
    label: "DoctorFTEBottom20"
  }

  measure: total_mcdproductionbottom20 {
    description: "Original name: [MCDProductionBottom20]"
    type: sum
    sql: ${mcdproductionbottom20_raw} ;;
    value_format_name: decimal_0
    label: "MCDProductionBottom20"
  }

  measure: total_associateproductionbottom20 {
    description: "Original name: [AssociateProductionBottom20]"
    type: sum
    sql: ${associateproductionbottom20_raw} ;;
    value_format_name: decimal_0
    label: "AssociateProductionBottom20"
  }

  measure: total_hygienistdailyproductionbottom20 {
    description: "Original name: [HygienistDailyProductionBottom20]"
    type: sum
    sql: ${hygienistdailyproductionbottom20_raw} ;;
    value_format_name: decimal_0
    label: "HygienistDailyProductionBottom20"
  }

  measure: total_orthostartsbottom20 {
    description: "Original name: [OrthoStartsBottom20]"
    type: sum
    sql: ${orthostartsbottom20_raw} ;;
    value_format_name: decimal_0
    label: "OrthoStartsBottom20"
  }

  measure: total_percentofschedulebottom20 {
    description: "Original name: [PercentOfScheduleBottom20]"
    type: sum
    sql: ${percentofschedulebottom20_raw} ;;
    value_format_name: decimal_0
    label: "PercentOfScheduleBottom20"
  }

  measure: total_npsamedaystartsbottom20 {
    description: "Original name: [NPSameDayStartsBottom20]"
    type: sum
    sql: ${npsamedaystartsbottom20_raw} ;;
    value_format_name: decimal_0
    label: "NPSameDayStartsBottom20"
  }

  measure: total_newpatienttxplancompletionratebottom20 {
    description: "Original name: [NewPatientTxPlanCompletionRateBottom20]"
    type: sum
    sql: ${newpatienttxplancompletionratebottom20_raw} ;;
    value_format_name: decimal_0
    label: "NewPatientTxPlanCompletionRateBottom20"
  }

  measure: total_denturesbottom20 {
    description: "Original name: [DenturesBottom20]"
    type: sum
    sql: ${denturesbottom20_raw} ;;
    value_format_name: decimal_0
    label: "DenturesBottom20"
  }

  measure: total_dentistrybottom20 {
    description: "Original name: [DentistryBottom20]"
    type: sum
    sql: ${dentistrybottom20_raw} ;;
    value_format_name: decimal_0
    label: "DentistryBottom20"
  }

  measure: total_hygienebottom20 {
    description: "Original name: [HygieneBottom20]"
    type: sum
    sql: ${hygienebottom20_raw} ;;
    value_format_name: decimal_0
    label: "HygieneBottom20"
  }

  measure: total_specialtybottom20 {
    description: "Original name: [SpecialtyBottom20]"
    type: sum
    sql: ${specialtybottom20_raw} ;;
    value_format_name: decimal_0
    label: "SpecialtyBottom20"
  }

  measure: total_orthodonticsbottom20 {
    description: "Original name: [OrthodonticsBottom20]"
    type: sum
    sql: ${orthodonticsbottom20_raw} ;;
    value_format_name: decimal_0
    label: "OrthodonticsBottom20"
  }

  measure: total_crownbridgebottom20 {
    description: "Original name: [CrownBridgeBottom20]"
    type: sum
    sql: ${crownbridgebottom20_raw} ;;
    value_format_name: decimal_0
    label: "CrownBridgeBottom20"
  }

  measure: total_implantsbottom20 {
    description: "Original name: [ImplantsBottom20]"
    type: sum
    sql: ${implantsbottom20_raw} ;;
    value_format_name: decimal_0
    label: "ImplantsBottom20"
  }

  measure: total_productionbottom20 {
    description: "Original name: [ProductionBottom20]"
    type: sum
    sql: ${productionbottom20_raw} ;;
    value_format_name: decimal_0
    label: "ProductionBottom20"
  }

  measure: total_patientsatisfactionbottom20 {
    description: "Original name: [PatientSatisfactionBottom20]"
    type: sum
    sql: ${patientsatisfactionbottom20_raw} ;;
    value_format_name: decimal_0
    label: "PatientSatisfactionBottom20"
  }

  measure: total_onlinereviewratingsbottom20 {
    description: "Original name: [OnlineReviewRatingsBottom20]"
    type: sum
    sql: ${onlinereviewratingsbottom20_raw} ;;
    value_format_name: decimal_0
    label: "OnlineReviewRatingsBottom20"
  }

  measure: total_netpromotersconumberlbottom20 {
    description: "Original name: [NetPromoterSconumberLBottom20]"
    type: sum
    sql: ${netpromotersconumberlbottom20_raw} ;;
    value_format_name: decimal_0
    label: "NetPromoterSconumberLBottom20"
  }

  measure: total_netpromoterscorebottom20 {
    description: "Original name: [NetPromoterScoreBottom20]"
    type: sum
    sql: ${netpromoterscorebottom20_raw} ;;
    value_format_name: decimal_0
    label: "NetPromoterScoreBottom20"
  }

  measure: total_percentofpatientleavingwithapptbottom20 {
    description: "Original name: [PercentofPatientLeavingwithApptBottom20]"
    type: sum
    sql: ${percentofpatientleavingwithapptbottom20_raw} ;;
    value_format_name: decimal_0
    label: "PercentofPatientLeavingwithApptBottom20"
  }

  measure: total_comptoproblemfocusedexamstbottom20 {
    description: "Original name: [ComptoProblemFocusedExamstBottom20]"
    type: sum
    sql: ${comptoproblemfocusedexamstbottom20_raw} ;;
    value_format_name: decimal_0
    label: "ComptoProblemFocusedExamstBottom20"
  }

  measure: total_npapptsperdaypercentbottom20 {
    description: "Original name: [NPApptsPerDayPercentBottom20]"
    type: sum
    sql: ${npapptsperdaypercentbottom20_raw} ;;
    value_format_name: decimal_0
    label: "NPApptsPerDayPercentBottom20"
  }

  measure: total_daystoinsertbottom20 {
    description: "Original name: [DaystoinsertBottom20]"
    type: sum
    sql: ${daystoinsertbottom20_raw} ;;
    value_format_name: decimal_0
    label: "DaystoinsertBottom20"
  }

  measure: total_daystoimpressionbottom20 {
    description: "Original name: [DaysToImpressionBottom20]"
    type: sum
    sql: ${daystoimpressionbottom20_raw} ;;
    value_format_name: decimal_0
    label: "DaysToImpressionBottom20"
  }

  measure: total_denturesamedaybottom20 {
    description: "Original name: [DentureSameDayBottom20]"
    type: sum
    sql: ${denturesamedaybottom20_raw} ;;
    value_format_name: decimal_0
    label: "DentureSameDayBottom20"
  }

  measure: total_denturerefundbottom20 {
    description: "Original name: [DentureRefundBottom20]"
    type: sum
    sql: ${denturerefundbottom20_raw} ;;
    value_format_name: decimal_0
    label: "DentureRefundBottom20"
  }

  measure: total_fulldenturebottom20 {
    description: "Original name: [FullDentureBottom20]"
    type: sum
    sql: ${fulldenturebottom20_raw} ;;
    value_format_name: decimal_0
    label: "FullDentureBottom20"
  }

  measure: total_partialdenturebottom20 {
    description: "Original name: [PartialDentureBottom20]"
    type: sum
    sql: ${partialdenturebottom20_raw} ;;
    value_format_name: decimal_0
    label: "PartialDentureBottom20"
  }

  measure: total_denturecompletionbottom20 {
    description: "Original name: [DentureCompletionBottom20]"
    type: sum
    sql: ${denturecompletionbottom20_raw} ;;
    value_format_name: decimal_0
    label: "DentureCompletionBottom20"
  }

  measure: total_cbunitsbottom20 {
    description: "Original name: [CBUnitsBottom20]"
    type: sum
    sql: ${cbunitsbottom20_raw} ;;
    value_format_name: decimal_0
    label: "CBUnitsBottom20"
  }

  measure: total_crowntomultibottom20 {
    description: "Original name: [CrownToMultiBottom20]"
    type: sum
    sql: ${crowntomultibottom20_raw} ;;
    value_format_name: decimal_0
    label: "CrownToMultiBottom20"
  }

  measure: total_daystosrp_daysbottom20 {
    description: "Original name: [DaysToSRP_DaysBottom20]"
    type: sum
    sql: ${daystosrp_daysbottom20_raw} ;;
    value_format_name: decimal_0
    label: "DaysToSRP DaysBottom20"
  }

  measure: total_periotoprophybottom20 {
    description: "Original name: [PerioToProphyBottom20]"
    type: sum
    sql: ${periotoprophybottom20_raw} ;;
    value_format_name: decimal_0
    label: "PerioToProphyBottom20"
  }

  measure: total_perioacceptedratebottom20 {
    description: "Original name: [PerioAcceptedRateBottom20]"
    type: sum
    sql: ${perioacceptedratebottom20_raw} ;;
    value_format_name: decimal_0
    label: "PerioAcceptedRateBottom20"
  }

  measure: total_laatoperiopatientsratiobottom20 {
    description: "Original name: [LAAtoPerioPatientsRatioBottom20]"
    type: sum
    sql: ${laatoperiopatientsratiobottom20_raw} ;;
    value_format_name: decimal_0
    label: "LAAtoPerioPatientsRatioBottom20"
  }

  measure: total_implantsoppbottom20 {
    description: "Original name: [ImplantsOppBottom20]"
    type: sum
    sql: ${implantsoppbottom20_raw} ;;
    value_format_name: decimal_0
    label: "ImplantsOppBottom20"
  }

  measure: total_implantsplacedbottom20 {
    description: "Original name: [ImplantsPlacedBottom20]"
    type: sum
    sql: ${implantsplacedbottom20_raw} ;;
    value_format_name: decimal_0
    label: "ImplantsPlacedBottom20"
  }

  measure: total_hygieneshowsbottom20 {
    description: "Original name: [HygieneShowsBottom20]"
    type: sum
    sql: ${hygieneshowsbottom20_raw} ;;
    value_format_name: decimal_0
    label: "HygieneShowsBottom20"
  }

  measure: total_orthopresentationratebottom20 {
    description: "Original name: [OrthoPresentationRateBottom20]"
    type: sum
    sql: ${orthopresentationratebottom20_raw} ;;
    value_format_name: decimal_0
    label: "OrthoPresentationRateBottom20"
  }

  measure: total_orthoacceptanceratebottom20 {
    description: "Original name: [OrthoAcceptanceRateBottom20]"
    type: sum
    sql: ${orthoacceptanceratebottom20_raw} ;;
    value_format_name: decimal_0
    label: "OrthoAcceptanceRateBottom20"
  }

  measure: total_endoprodperdaybottom20 {
    description: "Original name: [EndoProdPerDayBottom20]"
    type: sum
    sql: ${endoprodperdaybottom20_raw} ;;
    value_format_name: decimal_0
    label: "EndoProdPerDayBottom20"
  }

  measure: total_osprodperdaybottom20 {
    description: "Original name: [OSProdPerDayBottom20]"
    type: sum
    sql: ${osprodperdaybottom20_raw} ;;
    value_format_name: decimal_0
    label: "OSProdPerDayBottom20"
  }

  measure: total_dentureoppbottom20 {
    description: "Original name: [DentureOppBottom20]"
    type: sum
    sql: ${dentureoppbottom20_raw} ;;
    value_format_name: decimal_0
    label: "DentureOppBottom20"
  }

  measure: total_denturesoldbottom20 {
    description: "Original name: [DentureSoldBottom20]"
    type: sum
    sql: ${denturesoldbottom20_raw} ;;
    value_format_name: decimal_0
    label: "DentureSoldBottom20"
  }

  measure: total_cbucfpercentbottom20 {
    description: "Original name: [CBUCFPercentBottom20]"
    type: sum
    sql: ${cbucfpercentbottom20_raw} ;;
    value_format_name: decimal_0
    label: "CBUCFPercentBottom20"
  }

  measure: total_cblabpercentbottom20 {
    description: "Original name: [CBLabPercentBottom20]"
    type: sum
    sql: ${cblabpercentbottom20_raw} ;;
    value_format_name: decimal_0
    label: "CBLabPercentBottom20"
  }

  measure: total_cbrevperunitbottom20 {
    description: "Original name: [CBRevPerUnitBottom20]"
    type: sum
    sql: ${cbrevperunitbottom20_raw} ;;
    value_format_name: decimal_0
    label: "CBRevPerUnitBottom20"
  }

  measure: total_npperday_rank {
    description: "Original name: [NPPerDay_Rank]"
    type: sum
    sql: ${npperday_rank_raw} ;;
    value_format_name: decimal_0
    label: "NPPerDay Rank"
  }

  measure: total_epperday_rank {
    description: "Original name: [EPPerDay_Rank]"
    type: sum
    sql: ${epperday_rank_raw} ;;
    value_format_name: decimal_0
    label: "EPPerDay Rank"
  }

  measure: total_avgdaysuntilfirstvisit_rank {
    description: "Original name: [AvgDaysUntilFirstVisit_Rank]"
    type: sum
    sql: ${avgdaysuntilfirstvisit_rank_raw} ;;
    value_format_name: decimal_0
    label: "AvgDaysUntilFirstVisit Rank"
  }

  measure: total_npshowrate_rank {
    description: "Original name: [NPShowRate_Rank]"
    type: sum
    sql: ${npshowrate_rank_raw} ;;
    value_format_name: decimal_0
    label: "NPShowRate Rank"
  }

  measure: total_epshowrate_rank {
    description: "Original name: [EPShowRate_Rank]"
    type: sum
    sql: ${epshowrate_rank_raw} ;;
    value_format_name: decimal_0
    label: "EPShowRate Rank"
  }

  measure: total_npyestoday_rank {
    description: "Original name: [NPYesToday_Rank]"
    type: sum
    sql: ${npyestoday_rank_raw} ;;
    value_format_name: decimal_0
    label: "NPYesToday Rank"
  }

  measure: total_epyestoday_rank {
    description: "Original name: [EPYesToday_Rank]"
    type: sum
    sql: ${epyestoday_rank_raw} ;;
    value_format_name: decimal_0
    label: "EPYesToday Rank"
  }

  measure: total_percentcreditapplications_rank {
    description: "Original name: [PercentCreditApplications_Rank]"
    type: sum
    sql: ${percentcreditapplications_rank_raw} ;;
    value_format_name: decimal_0
    label: "PercentCreditApplications Rank"
  }

  measure: total_newpatientotc_rank {
    description: "Original name: [NewPatientOtc_Rank]"
    type: sum
    sql: ${newpatientotc_rank_raw} ;;
    value_format_name: decimal_0
    label: "NewPatientOtc Rank"
  }

  measure: total_nptxpresentedpernp_rank {
    description: "Original name: [NPTxPresentedPerNP_Rank]"
    type: sum
    sql: ${nptxpresentedpernp_rank_raw} ;;
    value_format_name: decimal_0
    label: "NPTxPresentedPerNP Rank"
  }

  measure: total_nptxacceptedpernp_rank {
    description: "Original name: [NPTxAcceptedPerNP_Rank]"
    type: sum
    sql: ${nptxacceptedpernp_rank_raw} ;;
    value_format_name: decimal_0
    label: "NPTxAcceptedPerNP Rank"
  }

  measure: total_eptxpresentedperep_rank {
    description: "Original name: [EPTxPresentedPerEP_Rank]"
    type: sum
    sql: ${eptxpresentedperep_rank_raw} ;;
    value_format_name: decimal_0
    label: "EPTxPresentedPerEP Rank"
  }

  measure: total_eptxacceptedperep_rank {
    description: "Original name: [EPTxAcceptedPerEP_Rank]"
    type: sum
    sql: ${eptxacceptedperep_rank_raw} ;;
    value_format_name: decimal_0
    label: "EPTxAcceptedPerEP Rank"
  }

  measure: total_oralhealthscan_rank {
    description: "Original name: [OralHealthScan_Rank]"
    type: sum
    sql: ${oralhealthscan_rank_raw} ;;
    value_format_name: decimal_0
    label: "OralHealthScan Rank"
  }

  measure: total_tapasales_rank {
    description: "Original name: [TAPASales_Rank]"
    type: sum
    sql: ${tapasales_rank_raw} ;;
    value_format_name: decimal_0
    label: "TAPASales Rank"
  }

  measure: total_doctorfteperoffice_rank {
    description: "Original name: [DoctorFTEPerOffice_Rank]"
    type: sum
    sql: ${doctorfteperoffice_rank_raw} ;;
    value_format_name: decimal_0
    label: "DoctorFTEPerOffice Rank"
  }

  measure: total_mcdproduction_rank {
    description: "Original name: [MCDProduction_Rank]"
    type: sum
    sql: ${mcdproduction_rank_raw} ;;
    value_format_name: decimal_0
    label: "MCDProduction Rank"
  }

  measure: total_associateproductionperday_rank {
    description: "Original name: [AssociateProductionPerDay_Rank]"
    type: sum
    sql: ${associateproductionperday_rank_raw} ;;
    value_format_name: decimal_0
    label: "AssociateProductionPerDay Rank"
  }

  measure: total_hygienerevenueperdayproduction_rank {
    description: "Original name: [HygieneRevenueperDayProduction_Rank]"
    type: sum
    sql: ${hygienerevenueperdayproduction_rank_raw} ;;
    value_format_name: decimal_0
    label: "HygieneRevenueperDayProduction Rank"
  }

  measure: total_orthostartsperofficepermonth_rank {
    description: "Original name: [OrthoStartsPerOfficePerMonth_Rank]"
    type: sum
    sql: ${orthostartsperofficepermonth_rank_raw} ;;
    value_format_name: decimal_0
    label: "OrthoStartsPerOfficePerMonth Rank"
  }

  measure: total_percentofschedule_rank {
    description: "Original name: [PercentOfSchedule_Rank]"
    type: sum
    sql: ${percentofschedule_rank_raw} ;;
    value_format_name: decimal_0
    label: "PercentOfSchedule Rank"
  }

  measure: total_npsamedaystarts_rank {
    description: "Original name: [NPSameDayStarts_Rank]"
    type: sum
    sql: ${npsamedaystarts_rank_raw} ;;
    value_format_name: decimal_0
    label: "NPSameDayStarts Rank"
  }

  measure: total_newpatienttxplancompletionrate_rank {
    description: "Original name: [NewPatientTxPlanCompletionRate_Rank]"
    type: sum
    sql: ${newpatienttxplancompletionrate_rank_raw} ;;
    value_format_name: decimal_0
    label: "NewPatientTxPlanCompletionRate Rank"
  }

  measure: total_dentures_rank {
    description: "Original name: [Dentures_Rank]"
    type: sum
    sql: ${dentures_rank_raw} ;;
    value_format_name: decimal_0
    label: "Dentures Rank"
  }

  measure: total_hygiene_rank {
    description: "Original name: [Hygiene_Rank]"
    type: sum
    sql: ${hygiene_rank_raw} ;;
    value_format_name: decimal_0
    label: "Hygiene Rank"
  }

  measure: total_specialty_rank {
    description: "Original name: [Specialty_Rank]"
    type: sum
    sql: ${specialty_rank_raw} ;;
    value_format_name: decimal_0
    label: "Specialty Rank"
  }

  measure: total_orthodontics_rank {
    description: "Original name: [Orthodontics_Rank]"
    type: sum
    sql: ${orthodontics_rank_raw} ;;
    value_format_name: decimal_0
    label: "Orthodontics Rank"
  }

  measure: total_crownbridge_rank {
    description: "Original name: [CrownBridge_Rank]"
    type: sum
    sql: ${crownbridge_rank_raw} ;;
    value_format_name: decimal_0
    label: "CrownBridge Rank"
  }

  measure: total_implants_rank {
    description: "Original name: [Implants_Rank]"
    type: sum
    sql: ${implants_rank_raw} ;;
    value_format_name: decimal_0
    label: "Implants Rank"
  }

  measure: total_production_rank {
    description: "Original name: [Production_Rank]"
    type: sum
    sql: ${production_rank_raw} ;;
    value_format_name: decimal_0
    label: "Production Rank"
  }

  measure: total_patientsatisfaction_rank {
    description: "Original name: [PatientSatisfaction_Rank]"
    type: sum
    sql: ${patientsatisfaction_rank_raw} ;;
    value_format_name: decimal_0
    label: "PatientSatisfaction Rank"
  }

  measure: total_onlinereviewratings_rank {
    description: "Original name: [OnlineReviewRatings_Rank]"
    type: sum
    sql: ${onlinereviewratings_rank_raw} ;;
    value_format_name: decimal_0
    label: "OnlineReviewRatings Rank"
  }

  measure: total_addedtoschedule_rank {
    description: "Original name: [addedtoschedule_Rank]"
    type: sum
    sql: ${addedtoschedule_rank_raw} ;;
    value_format_name: decimal_0
    label: "addedtoschedule Rank"
  }

  measure: total_estimatedproductioncurrentmonth_rank {
    description: "Original name: [EstimatedProductionCurrentMonth_Rank]"
    type: sum
    sql: ${estimatedproductioncurrentmonth_rank_raw} ;;
    value_format_name: decimal_0
    label: "EstimatedProductionCurrentMonth Rank"
  }

  measure: total_estimatedproductionbudgetvariancecurrentmonth_rank {
    description: "Original name: [EstimatedProductionBudgetVarianceCurrentMonth_Rank]"
    type: sum
    sql: ${estimatedproductionbudgetvariancecurrentmonth_rank_raw} ;;
    value_format_name: decimal_0
    label: "EstimatedProductionBudgetVarianceCurrentMonth Rank"
  }

  measure: total_totaldeposit_rank {
    description: "Original name: [TotalDeposit_Rank]"
    type: sum
    sql: ${totaldeposit_rank_raw} ;;
    value_format_name: decimal_0
    label: "TotalDeposit Rank"
  }

  measure: total_percentofbalancecollected_rank {
    description: "Original name: [PercentofBalanceCollected_Rank]"
    type: sum
    sql: ${percentofbalancecollected_rank_raw} ;;
    value_format_name: decimal_0
    label: "PercentofBalanceCollected Rank"
  }

  measure: total_netpromotersconumberl_rank {
    description: "Original name: [NetPromoterSconumberL_Rank]"
    type: sum
    sql: ${netpromotersconumberl_rank_raw} ;;
    value_format_name: decimal_0
    label: "NetPromoterSconumberL Rank"
  }

  measure: total_netpromoterscore_rank {
    description: "Original name: [NetPromoterScore_Rank]"
    type: sum
    sql: ${netpromoterscore_rank_raw} ;;
    value_format_name: decimal_0
    label: "NetPromoterScore Rank"
  }

  measure: total_dentistry_rank {
    description: "Original name: [Dentistry_Rank]"
    type: sum
    sql: ${dentistry_rank_raw} ;;
    value_format_name: decimal_0
    label: "Dentistry Rank"
  }

  measure: total_percentofpatientleavingwithappt_rank {
    description: "Original name: [PercentofPatientLeavingwithAppt_Rank]"
    type: sum
    sql: ${percentofpatientleavingwithappt_rank_raw} ;;
    value_format_name: decimal_0
    label: "PercentofPatientLeavingwithAppt Rank"
  }

  measure: total_comptoproblemfocusedexams_rank {
    description: "Original name: [ComptoProblemFocusedExams_Rank]"
    type: sum
    sql: ${comptoproblemfocusedexams_rank_raw} ;;
    value_format_name: decimal_0
    label: "ComptoProblemFocusedExams Rank"
  }

  measure: total_npapptsperday_rank {
    description: "Original name: [NPApptsPerDay_Rank]"
    type: sum
    sql: ${npapptsperday_rank_raw} ;;
    value_format_name: decimal_0
    label: "NPApptsPerDay Rank"
  }

  measure: total_inefficiency_rank {
    description: "Original name: [Inefficiency_Rank]"
    type: sum
    sql: ${inefficiency_rank_raw} ;;
    value_format_name: decimal_0
    label: "Inefficiency Rank"
  }

  measure: total_npblock_rank {
    description: "Original name: [NPBlock_Rank]"
    type: sum
    sql: ${npblock_rank_raw} ;;
    value_format_name: decimal_0
    label: "NPBlock Rank"
  }

  measure: total_pcblock_rank {
    description: "Original name: [PCBlock_Rank]"
    type: sum
    sql: ${pcblock_rank_raw} ;;
    value_format_name: decimal_0
    label: "PCBlock Rank"
  }

  measure: total_apptlength_adult_rank {
    description: "Original name: [ApptLength_Adult_Rank]"
    type: sum
    sql: ${apptlength_adult_rank_raw} ;;
    value_format_name: decimal_0
    label: "ApptLength Adult Rank"
  }

  measure: total_daystoinsert_rank {
    description: "Original name: [Daystoinsert_Rank]"
    type: sum
    sql: ${daystoinsert_rank_raw} ;;
    value_format_name: decimal_0
    label: "Daystoinsert Rank"
  }

  measure: total_daystoimpression_rank {
    description: "Original name: [DaysToImpression_Rank]"
    type: sum
    sql: ${daystoimpression_rank_raw} ;;
    value_format_name: decimal_0
    label: "DaysToImpression Rank"
  }

  measure: total_denturesameday_rank {
    description: "Original name: [DentureSameDay_Rank]"
    type: sum
    sql: ${denturesameday_rank_raw} ;;
    value_format_name: decimal_0
    label: "DentureSameDay Rank"
  }

  measure: total_denturerefund_rank {
    description: "Original name: [DentureRefund_Rank]"
    type: sum
    sql: ${denturerefund_rank_raw} ;;
    value_format_name: decimal_0
    label: "DentureRefund Rank"
  }

  measure: total_fulldenture_rank {
    description: "Original name: [FullDenture_Rank]"
    type: sum
    sql: ${fulldenture_rank_raw} ;;
    value_format_name: decimal_0
    label: "FullDenture Rank"
  }

  measure: total_partialdenture_rank {
    description: "Original name: [PartialDenture_Rank]"
    type: sum
    sql: ${partialdenture_rank_raw} ;;
    value_format_name: decimal_0
    label: "PartialDenture Rank"
  }

  measure: total_denturecompletion_rank {
    description: "Original name: [DentureCompletion_Rank]"
    type: sum
    sql: ${denturecompletion_rank_raw} ;;
    value_format_name: decimal_0
    label: "DentureCompletion Rank"
  }

  measure: total_cbunits_rank {
    description: "Original name: [CBUnits_Rank]"
    type: sum
    sql: ${cbunits_rank_raw} ;;
    value_format_name: decimal_0
    label: "CBUnits Rank"
  }

  measure: total_crowntomulti_rank {
    description: "Original name: [CrownToMulti_Rank]"
    type: sum
    sql: ${crowntomulti_rank_raw} ;;
    value_format_name: decimal_0
    label: "CrownToMulti Rank"
  }

  measure: total_daystosrp_rank {
    description: "Original name: [DaysToSRP_Rank]"
    type: sum
    sql: ${daystosrp_rank_raw} ;;
    value_format_name: decimal_0
    label: "DaysToSRP Rank"
  }

  measure: total_periotoprophy_rank {
    description: "Original name: [PerioToProphy_Rank]"
    type: sum
    sql: ${periotoprophy_rank_raw} ;;
    value_format_name: decimal_0
    label: "PerioToProphy Rank"
  }

  measure: total_perioacceptedrate_rank {
    description: "Original name: [PerioAcceptedRate_Rank]"
    type: sum
    sql: ${perioacceptedrate_rank_raw} ;;
    value_format_name: decimal_0
    label: "PerioAcceptedRate Rank"
  }

  measure: total_laatoperiopatientsratio_rank {
    description: "Original name: [LAAtoPerioPatientsRatio_Rank]"
    type: sum
    sql: ${laatoperiopatientsratio_rank_raw} ;;
    value_format_name: decimal_0
    label: "LAAtoPerioPatientsRatio Rank"
  }

  measure: total_implantsopp_rank {
    description: "Original name: [ImplantsOpp_Rank]"
    type: sum
    sql: ${implantsopp_rank_raw} ;;
    value_format_name: decimal_0
    label: "ImplantsOpp Rank"
  }

  measure: total_implantsplaced_rank {
    description: "Original name: [ImplantsPlaced_Rank]"
    type: sum
    sql: ${implantsplaced_rank_raw} ;;
    value_format_name: decimal_0
    label: "ImplantsPlaced Rank"
  }

  measure: total_hygieneshows_rank {
    description: "Original name: [HygieneShows_Rank]"
    type: sum
    sql: ${hygieneshows_rank_raw} ;;
    value_format_name: decimal_0
    label: "HygieneShows Rank"
  }

  measure: total_orthopresentationrate_rank {
    description: "Original name: [OrthoPresentationRate_Rank]"
    type: sum
    sql: ${orthopresentationrate_rank_raw} ;;
    value_format_name: decimal_0
    label: "OrthoPresentationRate Rank"
  }

  measure: total_orthoacceptancerate_rank {
    description: "Original name: [OrthoAcceptanceRate_Rank]"
    type: sum
    sql: ${orthoacceptancerate_rank_raw} ;;
    value_format_name: decimal_0
    label: "OrthoAcceptanceRate Rank"
  }

  measure: total_endoprodperday_rank {
    description: "Original name: [EndoProdPerDay_Rank]"
    type: sum
    sql: ${endoprodperday_rank_raw} ;;
    value_format_name: decimal_0
    label: "EndoProdPerDay Rank"
  }

  measure: total_osprodperday_rank {
    description: "Original name: [OSProdPerDay_Rank]"
    type: sum
    sql: ${osprodperday_rank_raw} ;;
    value_format_name: decimal_0
    label: "OSProdPerDay Rank"
  }

  measure: total_dentureopp_rank {
    description: "Original name: [DentureOpp_Rank]"
    type: sum
    sql: ${dentureopp_rank_raw} ;;
    value_format_name: decimal_0
    label: "DentureOpp Rank"
  }

  measure: total_cbucfpercent_rank {
    description: "Original name: [CBUCFPercent_Rank]"
    type: sum
    sql: ${cbucfpercent_rank_raw} ;;
    value_format_name: decimal_0
    label: "CBUCFPercent Rank"
  }

  measure: total_cblabpercent_rank {
    description: "Original name: [CBLabPercent_Rank]"
    type: sum
    sql: ${cblabpercent_rank_raw} ;;
    value_format_name: decimal_0
    label: "CBLabPercent Rank"
  }

  measure: total_cbrevperunit_rank {
    description: "Original name: [CBRevPerUnit_Rank]"
    type: sum
    sql: ${cbrevperunit_rank_raw} ;;
    value_format_name: decimal_0
    label: "CBRevPerUnit Rank"
  }

  measure: total_waxtryperpatient_rank {
    description: "Original name: [WaxTryperPatient_Rank]"
    type: sum
    sql: ${waxtryperpatient_rank_raw} ;;
    value_format_name: decimal_0
    label: "WaxTryperPatient Rank"
  }

  measure: total_denturesold_rank {
    description: "Original name: [DentureSold_Rank]"
    type: sum
    sql: ${denturesold_rank_raw} ;;
    value_format_name: decimal_0
    label: "DentureSold Rank"
  }


}
